{
	"id": "7a26f8c86a6092ba9eda04ae218ebf46",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BuyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"./MinervaToken.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract buy_sell_Token is Ownable {\r\n    MinervaToken minervaToken;\r\n    uint256 public tokensPerCoin = 100;\r\n    uint256 public maxTokensPerPurchase = 1000 *(10**18); // 1000 tokens (no need to multiply by 10**18)\r\n    uint256 public maxTokensPerAddress = 5000  *(10**18); // 5000 tokens (no need to multiply by 10**18)\r\n    uint256 public sellDiscountPercent = 2; // 2% discount\r\n\r\n    event BuyTokens(address buyer, uint256 amountOfCoin, uint256 amountOfTokens);\r\n    event SellTokens(address seller, uint256 amountOfTokens, uint256 amountOfCoin);\r\n\r\n    constructor(address tokenAddress) Ownable(msg.sender) {\r\n        minervaToken = MinervaToken(tokenAddress);\r\n    }\r\n\r\n    function setTokensPerCoin(uint256 newRate) public onlyOwner {\r\n        tokensPerCoin = newRate;\r\n    }\r\n\r\n    function setMaxTokensPerPurchase(uint256 newLimit) public onlyOwner {\r\n        maxTokensPerPurchase = newLimit* (10 **18);\r\n    }\r\n\r\n    function setMaxTokensPerAddress(uint256 newLimit) public onlyOwner {\r\n        maxTokensPerAddress = newLimit* (10 ** 18);\r\n    }\r\n\r\n    function setSellDiscountPercent(uint256 newDiscount) public onlyOwner {\r\n        sellDiscountPercent = newDiscount;\r\n    }\r\n\r\n    function getContractBalance() public view returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n\r\n\r\n    function buyTokens() public payable returns (uint256 tokenAmount) {\r\n        require(msg.value > 0, \"Send Coin to buy some tokens\");\r\n\r\n        uint256 amountToBuy = msg.value * tokensPerCoin;\r\n        require(amountToBuy <= maxTokensPerPurchase, \"Exceeds maximum tokens per purchase\");\r\n\r\n        uint256 contractBalance = minervaToken.balanceOf(address(this));\r\n        require(contractBalance >= amountToBuy, \"Vendor contract has not enough tokens in its balance\");\r\n\r\n        uint256 userBalance = minervaToken.balanceOf(msg.sender);\r\n        require(userBalance + amountToBuy <= maxTokensPerAddress, \"Exceeds maximum tokens per address\");\r\n\r\n        (bool sent) = minervaToken.transfer(msg.sender, amountToBuy);\r\n        require(sent, \"Failed to transfer token to user\");\r\n\r\n        emit BuyTokens(msg.sender, msg.value, amountToBuy);\r\n\r\n        return amountToBuy;\r\n    }\r\n\r\n    function sellTokens(uint256 tokenAmount) public returns (uint256 coinAmount) {\r\n        tokenAmount = tokenAmount * (10 ** 18);\r\n        require(tokenAmount > 0, \"Specify amount of tokens to sell\");\r\n        require(minervaToken.balanceOf(msg.sender) >= tokenAmount, \"Insufficient token balance\");\r\n\r\n        uint256 amountToPay = (tokenAmount * (100 - sellDiscountPercent)) / (100 * tokensPerCoin);\r\n        require(address(this).balance >= amountToPay, \"Insufficient Coin balance in contract\");\r\n\r\n        (bool sent) = minervaToken.transferFrom(msg.sender, address(this), tokenAmount);\r\n        require(sent, \"Failed to transfer token to contract\");\r\n\r\n        (bool coinSent,) = msg.sender.call{value: amountToPay}(\"\");\r\n        require(coinSent, \"Failed to send Coin to user\");\r\n\r\n        emit SellTokens(msg.sender, tokenAmount, amountToPay);\r\n\r\n        return amountToPay;\r\n    }\r\n\r\n    function withdraw() public onlyOwner {\r\n        uint256 ownerBalance = address(this).balance;\r\n        require(ownerBalance > 0, \"Owner has not balance to withdraw\");\r\n\r\n        (bool sent,) = msg.sender.call{value: ownerBalance}(\"\");\r\n        require(sent, \"Failed to send user balance back to the owner\");\r\n    }\r\n\r\n    function withdrawTokens(uint256 amount) public onlyOwner {\r\n        uint256 tokenBalance = minervaToken.balanceOf(address(this));\r\n        require(tokenBalance >= amount * (10**18), \"Vendor contract has not enough tokens to withdraw\");\r\n\r\n        (bool sent) = minervaToken.transfer(msg.sender, amount * (10**18));\r\n        require(sent, \"Failed to transfer tokens to the owner\");\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/MinervaToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract MinervaToken is ERC20, Ownable {\r\n    constructor(address initialOwner)\r\n        ERC20(\"MinervaToken\", \"MINV\")\r\n        Ownable(initialOwner)\r\n    {}\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount* 10 ** decimals());\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BuyToken.sol": {
				"buy_sell_Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOfCoin",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOfTokens",
									"type": "uint256"
								}
							],
							"name": "BuyTokens",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOfTokens",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOfCoin",
									"type": "uint256"
								}
							],
							"name": "SellTokens",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "buyTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getContractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxTokensPerAddress",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxTokensPerPurchase",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellDiscountPercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "sellTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "coinAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newLimit",
									"type": "uint256"
								}
							],
							"name": "setMaxTokensPerAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newLimit",
									"type": "uint256"
								}
							],
							"name": "setMaxTokensPerPurchase",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newDiscount",
									"type": "uint256"
								}
							],
							"name": "setSellDiscountPercent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newRate",
									"type": "uint256"
								}
							],
							"name": "setTokensPerCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokensPerCoin",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BuyToken.sol\":147:3949  contract buy_sell_Token is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BuyToken.sol\":252:255  100 */\n  0x64\n    /* \"contracts/BuyToken.sol\":221:255  uint256 public tokensPerCoin = 100 */\n  0x02\n  sstore\n    /* \"contracts/BuyToken.sol\":300:314  1000 *(10**18) */\n  0x3635c9adc5dea00000\n    /* \"contracts/BuyToken.sol\":262:314  uint256 public maxTokensPerPurchase = 1000 *(10**18) */\n  0x03\n  sstore\n    /* \"contracts/BuyToken.sol\":405:420  5000  *(10**18) */\n  0x010f0cf064dd59200000\n    /* \"contracts/BuyToken.sol\":368:420  uint256 public maxTokensPerAddress = 5000  *(10**18) */\n  0x04\n  sstore\n    /* \"contracts/BuyToken.sol\":511:512  2 */\n  0x02\n    /* \"contracts/BuyToken.sol\":474:512  uint256 public sellDiscountPercent = 2 */\n  0x05\n  sstore\n    /* \"contracts/BuyToken.sol\":706:820  constructor(address tokenAddress) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/BuyToken.sol\":748:758  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/BuyToken.sol\":799:811  tokenAddress */\n  dup1\n    /* \"contracts/BuyToken.sol\":771:783  minervaToken */\n  0x01\n  0x00\n    /* \"contracts/BuyToken.sol\":771:812  minervaToken = MinervaToken(tokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BuyToken.sol\":706:820  constructor(address tokenAddress) Ownable(msg.sender) {... */\n  pop\n    /* \"contracts/BuyToken.sol\":147:3949  contract buy_sell_Token is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":932:1051   */\ntag_36:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_38\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_22:\n    /* \"#utility.yul\":1289:1313   */\n  tag_40\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_9:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_42\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_22\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/BuyToken.sol\":147:3949  contract buy_sell_Token is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BuyToken.sol\":147:3949  contract buy_sell_Token is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6c11bcd3\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xcb232842\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xcb232842\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd0febe4c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdbb84f11\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x6c11bcd3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6f9fb98a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x315a095d\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x315a095d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x453989b2\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x57715207\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x0a431e52\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1369bfee\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1b326fad\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23a1baaa\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BuyToken.sol\":474:512  uint256 public sellDiscountPercent = 2 */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BuyToken.sol\":1211:1333  function setSellDiscountPercent(uint256 newDiscount) public onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/BuyToken.sol\":938:1067  function setMaxTokensPerPurchase(uint256 newLimit) public onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      stop\n        /* \"contracts/BuyToken.sol\":368:420  uint256 public maxTokensPerAddress = 5000  *(10**18) */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BuyToken.sol\":3559:3946  function withdrawTokens(uint256 amount) public onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/BuyToken.sol\":3237:3551  function withdraw() public onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/BuyToken.sol\":828:930  function setTokensPerCoin(uint256 newRate) public onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/BuyToken.sol\":262:314  uint256 public maxTokensPerPurchase = 1000 *(10**18) */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BuyToken.sol\":2343:3229  function sellTokens(uint256 tokenAmount) public returns (uint256 coinAmount) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BuyToken.sol\":1341:1448  function getContractBalance() public view returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BuyToken.sol\":221:255  uint256 public tokensPerCoin = 100 */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BuyToken.sol\":1458:2335  function buyTokens() public payable returns (uint256 tokenAmount) {... */\n    tag_15:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BuyToken.sol\":1075:1203  function setMaxTokensPerAddress(uint256 newLimit) public onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/BuyToken.sol\":474:512  uint256 public sellDiscountPercent = 2 */\n    tag_23:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/BuyToken.sol\":1211:1333  function setSellDiscountPercent(uint256 newDiscount) public onlyOwner {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_88:\n        /* \"contracts/BuyToken.sol\":1314:1325  newDiscount */\n      dup1\n        /* \"contracts/BuyToken.sol\":1292:1311  sellDiscountPercent */\n      0x05\n        /* \"contracts/BuyToken.sol\":1292:1325  sellDiscountPercent = newDiscount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyToken.sol\":1211:1333  function setSellDiscountPercent(uint256 newDiscount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/BuyToken.sol\":938:1067  function setMaxTokensPerPurchase(uint256 newLimit) public onlyOwner {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_92:\n        /* \"contracts/BuyToken.sol\":1051:1058  10 **18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/BuyToken.sol\":1040:1048  newLimit */\n      dup2\n        /* \"contracts/BuyToken.sol\":1040:1059  newLimit* (10 **18) */\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"contracts/BuyToken.sol\":1017:1037  maxTokensPerPurchase */\n      0x03\n        /* \"contracts/BuyToken.sol\":1017:1059  maxTokensPerPurchase = newLimit* (10 **18) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyToken.sol\":938:1067  function setMaxTokensPerPurchase(uint256 newLimit) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/BuyToken.sol\":368:420  uint256 public maxTokensPerAddress = 5000  *(10**18) */\n    tag_37:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/BuyToken.sol\":3559:3946  function withdrawTokens(uint256 amount) public onlyOwner {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_97:\n        /* \"contracts/BuyToken.sol\":3627:3647  uint256 tokenBalance */\n      0x00\n        /* \"contracts/BuyToken.sol\":3650:3662  minervaToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyToken.sol\":3650:3672  minervaToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/BuyToken.sol\":3681:3685  this */\n      address\n        /* \"contracts/BuyToken.sol\":3650:3687  minervaToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_99:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"contracts/BuyToken.sol\":3627:3687  uint256 tokenBalance = minervaToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/BuyToken.sol\":3732:3738  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/BuyToken.sol\":3722:3728  amount */\n      dup3\n        /* \"contracts/BuyToken.sol\":3722:3739  amount * (10**18) */\n      tag_104\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_104:\n        /* \"contracts/BuyToken.sol\":3706:3718  tokenBalance */\n      dup2\n        /* \"contracts/BuyToken.sol\":3706:3739  tokenBalance >= amount * (10**18) */\n      lt\n      iszero\n        /* \"contracts/BuyToken.sol\":3698:3793  require(tokenBalance >= amount * (10**18), \"Vendor contract has not enough tokens to withdraw\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"contracts/BuyToken.sol\":3807:3816  bool sent */\n      0x00\n        /* \"contracts/BuyToken.sol\":3820:3832  minervaToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyToken.sol\":3820:3841  minervaToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/BuyToken.sol\":3842:3852  msg.sender */\n      caller\n        /* \"contracts/BuyToken.sol\":3864:3870  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/BuyToken.sol\":3854:3860  amount */\n      dup7\n        /* \"contracts/BuyToken.sol\":3854:3871  amount * (10**18) */\n      tag_108\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_108:\n        /* \"contracts/BuyToken.sol\":3820:3872  minervaToken.transfer(msg.sender, amount * (10**18)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap3\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"contracts/BuyToken.sol\":3806:3872  (bool sent) = minervaToken.transfer(msg.sender, amount * (10**18)) */\n      swap1\n      pop\n        /* \"contracts/BuyToken.sol\":3891:3895  sent */\n      dup1\n        /* \"contracts/BuyToken.sol\":3883:3938  require(sent, \"Failed to transfer tokens to the owner\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"contracts/BuyToken.sol\":3616:3946  {... */\n      pop\n      pop\n        /* \"contracts/BuyToken.sol\":3559:3946  function withdrawTokens(uint256 amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/BuyToken.sol\":3237:3551  function withdraw() public onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/BuyToken.sol\":3285:3305  uint256 ownerBalance */\n      0x00\n        /* \"contracts/BuyToken.sol\":3308:3329  address(this).balance */\n      selfbalance\n        /* \"contracts/BuyToken.sol\":3285:3329  uint256 ownerBalance = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/BuyToken.sol\":3363:3364  0 */\n      0x00\n        /* \"contracts/BuyToken.sol\":3348:3360  ownerBalance */\n      dup2\n        /* \"contracts/BuyToken.sol\":3348:3364  ownerBalance > 0 */\n      gt\n        /* \"contracts/BuyToken.sol\":3340:3402  require(ownerBalance > 0, \"Owner has not balance to withdraw\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/BuyToken.sol\":3416:3425  bool sent */\n      0x00\n        /* \"contracts/BuyToken.sol\":3430:3440  msg.sender */\n      caller\n        /* \"contracts/BuyToken.sol\":3430:3445  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyToken.sol\":3453:3465  ownerBalance */\n      dup3\n        /* \"contracts/BuyToken.sol\":3430:3470  msg.sender.call{value: ownerBalance}(\"\") */\n      mload(0x40)\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_128\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_127)\n    tag_128:\n      0x60\n      swap2\n      pop\n    tag_127:\n      pop\n        /* \"contracts/BuyToken.sol\":3415:3470  (bool sent,) = msg.sender.call{value: ownerBalance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/BuyToken.sol\":3489:3493  sent */\n      dup1\n        /* \"contracts/BuyToken.sol\":3481:3543  require(sent, \"Failed to send user balance back to the owner\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"contracts/BuyToken.sol\":3274:3551  {... */\n      pop\n      pop\n        /* \"contracts/BuyToken.sol\":3237:3551  function withdraw() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/BuyToken.sol\":828:930  function setTokensPerCoin(uint256 newRate) public onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_133:\n        /* \"contracts/BuyToken.sol\":915:922  newRate */\n      dup1\n        /* \"contracts/BuyToken.sol\":899:912  tokensPerCoin */\n      0x02\n        /* \"contracts/BuyToken.sol\":899:922  tokensPerCoin = newRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyToken.sol\":828:930  function setTokensPerCoin(uint256 newRate) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/BuyToken.sol\":262:314  uint256 public maxTokensPerPurchase = 1000 *(10**18) */\n    tag_52:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/BuyToken.sol\":2343:3229  function sellTokens(uint256 tokenAmount) public returns (uint256 coinAmount) {... */\n    tag_57:\n        /* \"contracts/BuyToken.sol\":2400:2418  uint256 coinAmount */\n      0x00\n        /* \"contracts/BuyToken.sol\":2460:2468  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/BuyToken.sol\":2445:2456  tokenAmount */\n      dup3\n        /* \"contracts/BuyToken.sol\":2445:2469  tokenAmount * (10 ** 18) */\n      tag_136\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_136:\n        /* \"contracts/BuyToken.sol\":2431:2469  tokenAmount = tokenAmount * (10 ** 18) */\n      swap2\n      pop\n        /* \"contracts/BuyToken.sol\":2502:2503  0 */\n      0x00\n        /* \"contracts/BuyToken.sol\":2488:2499  tokenAmount */\n      dup3\n        /* \"contracts/BuyToken.sol\":2488:2503  tokenAmount > 0 */\n      gt\n        /* \"contracts/BuyToken.sol\":2480:2540  require(tokenAmount > 0, \"Specify amount of tokens to sell\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"contracts/BuyToken.sol\":2597:2608  tokenAmount */\n      dup2\n        /* \"contracts/BuyToken.sol\":2559:2571  minervaToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyToken.sol\":2559:2581  minervaToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/BuyToken.sol\":2582:2592  msg.sender */\n      caller\n        /* \"contracts/BuyToken.sol\":2559:2593  minervaToken.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_140:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_142:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_143:\n        /* \"contracts/BuyToken.sol\":2559:2608  minervaToken.balanceOf(msg.sender) >= tokenAmount */\n      lt\n      iszero\n        /* \"contracts/BuyToken.sol\":2551:2639  require(minervaToken.balanceOf(msg.sender) >= tokenAmount, \"Insufficient token balance\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"contracts/BuyToken.sol\":2652:2671  uint256 amountToPay */\n      0x00\n        /* \"contracts/BuyToken.sol\":2727:2740  tokensPerCoin */\n      sload(0x02)\n        /* \"contracts/BuyToken.sol\":2721:2724  100 */\n      0x64\n        /* \"contracts/BuyToken.sol\":2721:2740  100 * tokensPerCoin */\n      tag_147\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_147:\n        /* \"contracts/BuyToken.sol\":2696:2715  sellDiscountPercent */\n      sload(0x05)\n        /* \"contracts/BuyToken.sol\":2690:2693  100 */\n      0x64\n        /* \"contracts/BuyToken.sol\":2690:2715  100 - sellDiscountPercent */\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"contracts/BuyToken.sol\":2675:2686  tokenAmount */\n      dup5\n        /* \"contracts/BuyToken.sol\":2675:2716  tokenAmount * (100 - sellDiscountPercent) */\n      tag_150\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_150:\n        /* \"contracts/BuyToken.sol\":2674:2741  (tokenAmount * (100 - sellDiscountPercent)) / (100 * tokensPerCoin) */\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"contracts/BuyToken.sol\":2652:2741  uint256 amountToPay = (tokenAmount * (100 - sellDiscountPercent)) / (100 * tokensPerCoin) */\n      swap1\n      pop\n        /* \"contracts/BuyToken.sol\":2785:2796  amountToPay */\n      dup1\n        /* \"contracts/BuyToken.sol\":2760:2781  address(this).balance */\n      selfbalance\n        /* \"contracts/BuyToken.sol\":2760:2796  address(this).balance >= amountToPay */\n      lt\n      iszero\n        /* \"contracts/BuyToken.sol\":2752:2838  require(address(this).balance >= amountToPay, \"Insufficient Coin balance in contract\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"contracts/BuyToken.sol\":2852:2861  bool sent */\n      0x00\n        /* \"contracts/BuyToken.sol\":2865:2877  minervaToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyToken.sol\":2865:2890  minervaToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/BuyToken.sol\":2891:2901  msg.sender */\n      caller\n        /* \"contracts/BuyToken.sol\":2911:2915  this */\n      address\n        /* \"contracts/BuyToken.sol\":2918:2929  tokenAmount */\n      dup8\n        /* \"contracts/BuyToken.sol\":2865:2930  minervaToken.transferFrom(msg.sender, address(this), tokenAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_160\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_160:\n        /* \"contracts/BuyToken.sol\":2851:2930  (bool sent) = minervaToken.transferFrom(msg.sender, address(this), tokenAmount) */\n      swap1\n      pop\n        /* \"contracts/BuyToken.sol\":2949:2953  sent */\n      dup1\n        /* \"contracts/BuyToken.sol\":2941:2994  require(sent, \"Failed to transfer token to contract\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"contracts/BuyToken.sol\":3008:3021  bool coinSent */\n      0x00\n        /* \"contracts/BuyToken.sol\":3026:3036  msg.sender */\n      caller\n        /* \"contracts/BuyToken.sol\":3026:3041  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyToken.sol\":3049:3060  amountToPay */\n      dup4\n        /* \"contracts/BuyToken.sol\":3026:3065  msg.sender.call{value: amountToPay}(\"\") */\n      mload(0x40)\n      tag_164\n      swap1\n      tag_125\n      jump\t// in\n    tag_164:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_167\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_166)\n    tag_167:\n      0x60\n      swap2\n      pop\n    tag_166:\n      pop\n        /* \"contracts/BuyToken.sol\":3007:3065  (bool coinSent,) = msg.sender.call{value: amountToPay}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/BuyToken.sol\":3084:3092  coinSent */\n      dup1\n        /* \"contracts/BuyToken.sol\":3076:3124  require(coinSent, \"Failed to send Coin to user\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"contracts/BuyToken.sol\":3142:3190  SellTokens(msg.sender, tokenAmount, amountToPay) */\n      0xa24838acd4af5195a2396965dae5abf54e84e8c19f5698bb966ae64e29994ee5\n        /* \"contracts/BuyToken.sol\":3153:3163  msg.sender */\n      caller\n        /* \"contracts/BuyToken.sol\":3165:3176  tokenAmount */\n      dup7\n        /* \"contracts/BuyToken.sol\":3178:3189  amountToPay */\n      dup6\n        /* \"contracts/BuyToken.sol\":3142:3190  SellTokens(msg.sender, tokenAmount, amountToPay) */\n      mload(0x40)\n      tag_171\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/BuyToken.sol\":3210:3221  amountToPay */\n      dup3\n        /* \"contracts/BuyToken.sol\":3203:3221  return amountToPay */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/BuyToken.sol\":2343:3229  function sellTokens(uint256 tokenAmount) public returns (uint256 coinAmount) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BuyToken.sol\":1341:1448  function getContractBalance() public view returns (uint256) {... */\n    tag_61:\n        /* \"contracts/BuyToken.sol\":1392:1399  uint256 */\n      0x00\n        /* \"contracts/BuyToken.sol\":1419:1440  address(this).balance */\n      selfbalance\n        /* \"contracts/BuyToken.sol\":1412:1440  return address(this).balance */\n      swap1\n      pop\n        /* \"contracts/BuyToken.sol\":1341:1448  function getContractBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BuyToken.sol\":221:255  uint256 public tokensPerCoin = 100 */\n    tag_73:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/BuyToken.sol\":1458:2335  function buyTokens() public payable returns (uint256 tokenAmount) {... */\n    tag_76:\n        /* \"contracts/BuyToken.sol\":1503:1522  uint256 tokenAmount */\n      0x00\n        /* \"contracts/BuyToken.sol\":1555:1556  0 */\n      dup1\n        /* \"contracts/BuyToken.sol\":1543:1552  msg.value */\n      callvalue\n        /* \"contracts/BuyToken.sol\":1543:1556  msg.value > 0 */\n      gt\n        /* \"contracts/BuyToken.sol\":1535:1589  require(msg.value > 0, \"Send Coin to buy some tokens\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"contracts/BuyToken.sol\":1602:1621  uint256 amountToBuy */\n      0x00\n        /* \"contracts/BuyToken.sol\":1636:1649  tokensPerCoin */\n      sload(0x02)\n        /* \"contracts/BuyToken.sol\":1624:1633  msg.value */\n      callvalue\n        /* \"contracts/BuyToken.sol\":1624:1649  msg.value * tokensPerCoin */\n      tag_184\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_184:\n        /* \"contracts/BuyToken.sol\":1602:1649  uint256 amountToBuy = msg.value * tokensPerCoin */\n      swap1\n      pop\n        /* \"contracts/BuyToken.sol\":1683:1703  maxTokensPerPurchase */\n      sload(0x03)\n        /* \"contracts/BuyToken.sol\":1668:1679  amountToBuy */\n      dup2\n        /* \"contracts/BuyToken.sol\":1668:1703  amountToBuy <= maxTokensPerPurchase */\n      gt\n      iszero\n        /* \"contracts/BuyToken.sol\":1660:1743  require(amountToBuy <= maxTokensPerPurchase, \"Exceeds maximum tokens per purchase\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"contracts/BuyToken.sol\":1756:1779  uint256 contractBalance */\n      0x00\n        /* \"contracts/BuyToken.sol\":1782:1794  minervaToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyToken.sol\":1782:1804  minervaToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/BuyToken.sol\":1813:1817  this */\n      address\n        /* \"contracts/BuyToken.sol\":1782:1819  minervaToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_188:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_190\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_191\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_191:\n        /* \"contracts/BuyToken.sol\":1756:1819  uint256 contractBalance = minervaToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/BuyToken.sol\":1857:1868  amountToBuy */\n      dup2\n        /* \"contracts/BuyToken.sol\":1838:1853  contractBalance */\n      dup2\n        /* \"contracts/BuyToken.sol\":1838:1868  contractBalance >= amountToBuy */\n      lt\n      iszero\n        /* \"contracts/BuyToken.sol\":1830:1925  require(contractBalance >= amountToBuy, \"Vendor contract has not enough tokens in its balance\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"contracts/BuyToken.sol\":1938:1957  uint256 userBalance */\n      0x00\n        /* \"contracts/BuyToken.sol\":1960:1972  minervaToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyToken.sol\":1960:1982  minervaToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/BuyToken.sol\":1983:1993  msg.sender */\n      caller\n        /* \"contracts/BuyToken.sol\":1960:1994  minervaToken.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_195:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_197\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_197:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_198\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_198:\n        /* \"contracts/BuyToken.sol\":1938:1994  uint256 userBalance = minervaToken.balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/BuyToken.sol\":2042:2061  maxTokensPerAddress */\n      sload(0x04)\n        /* \"contracts/BuyToken.sol\":2027:2038  amountToBuy */\n      dup4\n        /* \"contracts/BuyToken.sol\":2013:2024  userBalance */\n      dup3\n        /* \"contracts/BuyToken.sol\":2013:2038  userBalance + amountToBuy */\n      tag_199\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"contracts/BuyToken.sol\":2013:2061  userBalance + amountToBuy <= maxTokensPerAddress */\n      gt\n      iszero\n        /* \"contracts/BuyToken.sol\":2005:2100  require(userBalance + amountToBuy <= maxTokensPerAddress, \"Exceeds maximum tokens per address\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"contracts/BuyToken.sol\":2114:2123  bool sent */\n      0x00\n        /* \"contracts/BuyToken.sol\":2127:2139  minervaToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyToken.sol\":2127:2148  minervaToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/BuyToken.sol\":2149:2159  msg.sender */\n      caller\n        /* \"contracts/BuyToken.sol\":2161:2172  amountToBuy */\n      dup7\n        /* \"contracts/BuyToken.sol\":2127:2173  minervaToken.transfer(msg.sender, amountToBuy) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap3\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_204:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_206\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_206:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_207\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_207:\n        /* \"contracts/BuyToken.sol\":2113:2173  (bool sent) = minervaToken.transfer(msg.sender, amountToBuy) */\n      swap1\n      pop\n        /* \"contracts/BuyToken.sol\":2192:2196  sent */\n      dup1\n        /* \"contracts/BuyToken.sol\":2184:2233  require(sent, \"Failed to transfer token to user\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"contracts/BuyToken.sol\":2251:2296  BuyTokens(msg.sender, msg.value, amountToBuy) */\n      0x0a37b72bb67eee30e09084cf386f8a17817c57f620c3ab95fb25d6a20356ec77\n        /* \"contracts/BuyToken.sol\":2261:2271  msg.sender */\n      caller\n        /* \"contracts/BuyToken.sol\":2273:2282  msg.value */\n      callvalue\n        /* \"contracts/BuyToken.sol\":2284:2295  amountToBuy */\n      dup7\n        /* \"contracts/BuyToken.sol\":2251:2296  BuyTokens(msg.sender, msg.value, amountToBuy) */\n      mload(0x40)\n      tag_211\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/BuyToken.sol\":2316:2327  amountToBuy */\n      dup4\n        /* \"contracts/BuyToken.sol\":2309:2327  return amountToBuy */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/BuyToken.sol\":1458:2335  function buyTokens() public payable returns (uint256 tokenAmount) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BuyToken.sol\":1075:1203  function setMaxTokensPerAddress(uint256 newLimit) public onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_213:\n        /* \"contracts/BuyToken.sol\":1186:1194  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/BuyToken.sol\":1175:1183  newLimit */\n      dup2\n        /* \"contracts/BuyToken.sol\":1175:1195  newLimit* (10 ** 18) */\n      tag_215\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_215:\n        /* \"contracts/BuyToken.sol\":1153:1172  maxTokensPerAddress */\n      0x04\n        /* \"contracts/BuyToken.sol\":1153:1195  maxTokensPerAddress = newLimit* (10 ** 18) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyToken.sol\":1075:1203  function setMaxTokensPerAddress(uint256 newLimit) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_221\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_223\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_224\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_225\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_227\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_224\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_231:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_232:\n        /* \"#utility.yul\":177:201   */\n      tag_284\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_231\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_25:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_286\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_232\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_234:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_236:\n        /* \"#utility.yul\":842:866   */\n      tag_291\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_231\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_292:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_237:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_294\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_236\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_29:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_297\n      tag_234\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":1118:1237   */\n    tag_296:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_298\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_237\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_238:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_239:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_301\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_238\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_240:\n        /* \"#utility.yul\":1698:1722   */\n      tag_303\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_239\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_70:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_305\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_240\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2085   */\n    tag_241:\n        /* \"#utility.yul\":2036:2060   */\n      tag_307\n        /* \"#utility.yul\":2054:2059   */\n      dup2\n        /* \"#utility.yul\":2036:2060   */\n      tag_239\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":2029:2034   */\n      dup2\n        /* \"#utility.yul\":2026:2061   */\n      eq\n        /* \"#utility.yul\":2016:2079   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":2075:2076   */\n      0x00\n        /* \"#utility.yul\":2072:2073   */\n      dup1\n        /* \"#utility.yul\":2065:2077   */\n      revert\n        /* \"#utility.yul\":2016:2079   */\n    tag_308:\n        /* \"#utility.yul\":1963:2085   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2230   */\n    tag_242:\n        /* \"#utility.yul\":2137:2142   */\n      0x00\n        /* \"#utility.yul\":2175:2181   */\n      dup2\n        /* \"#utility.yul\":2162:2182   */\n      calldataload\n        /* \"#utility.yul\":2153:2182   */\n      swap1\n      pop\n        /* \"#utility.yul\":2191:2224   */\n      tag_310\n        /* \"#utility.yul\":2218:2223   */\n      dup2\n        /* \"#utility.yul\":2191:2224   */\n      tag_241\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":2091:2230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2565   */\n    tag_85:\n        /* \"#utility.yul\":2295:2301   */\n      0x00\n        /* \"#utility.yul\":2344:2346   */\n      0x20\n        /* \"#utility.yul\":2332:2341   */\n      dup3\n        /* \"#utility.yul\":2323:2330   */\n      dup5\n        /* \"#utility.yul\":2319:2342   */\n      sub\n        /* \"#utility.yul\":2315:2347   */\n      slt\n        /* \"#utility.yul\":2312:2431   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":2350:2429   */\n      tag_313\n      tag_234\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":2312:2431   */\n    tag_312:\n        /* \"#utility.yul\":2470:2471   */\n      0x00\n        /* \"#utility.yul\":2495:2548   */\n      tag_314\n        /* \"#utility.yul\":2540:2547   */\n      dup5\n        /* \"#utility.yul\":2531:2537   */\n      dup3\n        /* \"#utility.yul\":2520:2529   */\n      dup6\n        /* \"#utility.yul\":2516:2538   */\n      add\n        /* \"#utility.yul\":2495:2548   */\n      tag_242\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":2485:2548   */\n      swap2\n      pop\n        /* \"#utility.yul\":2441:2558   */\n      pop\n        /* \"#utility.yul\":2236:2565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2751   */\n    tag_243:\n        /* \"#utility.yul\":2619:2696   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2616:2617   */\n      0x00\n        /* \"#utility.yul\":2609:2697   */\n      mstore\n        /* \"#utility.yul\":2716:2720   */\n      0x11\n        /* \"#utility.yul\":2713:2714   */\n      0x04\n        /* \"#utility.yul\":2706:2721   */\n      mstore\n        /* \"#utility.yul\":2740:2744   */\n      0x24\n        /* \"#utility.yul\":2737:2738   */\n      0x00\n        /* \"#utility.yul\":2730:2745   */\n      revert\n        /* \"#utility.yul\":2757:3167   */\n    tag_95:\n        /* \"#utility.yul\":2797:2804   */\n      0x00\n        /* \"#utility.yul\":2820:2840   */\n      tag_317\n        /* \"#utility.yul\":2838:2839   */\n      dup3\n        /* \"#utility.yul\":2820:2840   */\n      tag_231\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":2815:2840   */\n      swap2\n      pop\n        /* \"#utility.yul\":2854:2874   */\n      tag_318\n        /* \"#utility.yul\":2872:2873   */\n      dup4\n        /* \"#utility.yul\":2854:2874   */\n      tag_231\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":2849:2874   */\n      swap3\n      pop\n        /* \"#utility.yul\":2909:2910   */\n      dup3\n        /* \"#utility.yul\":2906:2907   */\n      dup3\n        /* \"#utility.yul\":2902:2911   */\n      mul\n        /* \"#utility.yul\":2931:2961   */\n      tag_319\n        /* \"#utility.yul\":2949:2960   */\n      dup2\n        /* \"#utility.yul\":2931:2961   */\n      tag_231\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":2920:2961   */\n      swap2\n      pop\n        /* \"#utility.yul\":3110:3111   */\n      dup3\n        /* \"#utility.yul\":3101:3108   */\n      dup3\n        /* \"#utility.yul\":3097:3112   */\n      div\n        /* \"#utility.yul\":3094:3095   */\n      dup5\n        /* \"#utility.yul\":3091:3113   */\n      eq\n        /* \"#utility.yul\":3071:3072   */\n      dup4\n        /* \"#utility.yul\":3064:3073   */\n      iszero\n        /* \"#utility.yul\":3044:3127   */\n      or\n        /* \"#utility.yul\":3021:3160   */\n      tag_320\n      jumpi\n        /* \"#utility.yul\":3140:3158   */\n      tag_321\n      tag_243\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":3021:3160   */\n    tag_320:\n        /* \"#utility.yul\":2805:3167   */\n      pop\n        /* \"#utility.yul\":2757:3167   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3173:3316   */\n    tag_244:\n        /* \"#utility.yul\":3230:3235   */\n      0x00\n        /* \"#utility.yul\":3261:3267   */\n      dup2\n        /* \"#utility.yul\":3255:3268   */\n      mload\n        /* \"#utility.yul\":3246:3268   */\n      swap1\n      pop\n        /* \"#utility.yul\":3277:3310   */\n      tag_323\n        /* \"#utility.yul\":3304:3309   */\n      dup2\n        /* \"#utility.yul\":3277:3310   */\n      tag_236\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":3173:3316   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3322:3673   */\n    tag_103:\n        /* \"#utility.yul\":3392:3398   */\n      0x00\n        /* \"#utility.yul\":3441:3443   */\n      0x20\n        /* \"#utility.yul\":3429:3438   */\n      dup3\n        /* \"#utility.yul\":3420:3427   */\n      dup5\n        /* \"#utility.yul\":3416:3439   */\n      sub\n        /* \"#utility.yul\":3412:3444   */\n      slt\n        /* \"#utility.yul\":3409:3528   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":3447:3526   */\n      tag_326\n      tag_234\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3409:3528   */\n    tag_325:\n        /* \"#utility.yul\":3567:3568   */\n      0x00\n        /* \"#utility.yul\":3592:3656   */\n      tag_327\n        /* \"#utility.yul\":3648:3655   */\n      dup5\n        /* \"#utility.yul\":3639:3645   */\n      dup3\n        /* \"#utility.yul\":3628:3637   */\n      dup6\n        /* \"#utility.yul\":3624:3646   */\n      add\n        /* \"#utility.yul\":3592:3656   */\n      tag_244\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":3582:3656   */\n      swap2\n      pop\n        /* \"#utility.yul\":3538:3666   */\n      pop\n        /* \"#utility.yul\":3322:3673   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3679:3848   */\n    tag_245:\n        /* \"#utility.yul\":3763:3774   */\n      0x00\n        /* \"#utility.yul\":3797:3803   */\n      dup3\n        /* \"#utility.yul\":3792:3795   */\n      dup3\n        /* \"#utility.yul\":3785:3804   */\n      mstore\n        /* \"#utility.yul\":3837:3841   */\n      0x20\n        /* \"#utility.yul\":3832:3835   */\n      dup3\n        /* \"#utility.yul\":3828:3842   */\n      add\n        /* \"#utility.yul\":3813:3842   */\n      swap1\n      pop\n        /* \"#utility.yul\":3679:3848   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3854:4090   */\n    tag_246:\n        /* \"#utility.yul\":3994:4028   */\n      0x56656e646f7220636f6e747261637420686173206e6f7420656e6f7567682074\n        /* \"#utility.yul\":3990:3991   */\n      0x00\n        /* \"#utility.yul\":3982:3988   */\n      dup3\n        /* \"#utility.yul\":3978:3992   */\n      add\n        /* \"#utility.yul\":3971:4029   */\n      mstore\n        /* \"#utility.yul\":4063:4082   */\n      0x6f6b656e7320746f207769746864726177000000000000000000000000000000\n        /* \"#utility.yul\":4058:4060   */\n      0x20\n        /* \"#utility.yul\":4050:4056   */\n      dup3\n        /* \"#utility.yul\":4046:4061   */\n      add\n        /* \"#utility.yul\":4039:4083   */\n      mstore\n        /* \"#utility.yul\":3854:4090   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4462   */\n    tag_247:\n        /* \"#utility.yul\":4238:4241   */\n      0x00\n        /* \"#utility.yul\":4259:4326   */\n      tag_331\n        /* \"#utility.yul\":4323:4325   */\n      0x31\n        /* \"#utility.yul\":4318:4321   */\n      dup4\n        /* \"#utility.yul\":4259:4326   */\n      tag_245\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":4252:4326   */\n      swap2\n      pop\n        /* \"#utility.yul\":4335:4428   */\n      tag_332\n        /* \"#utility.yul\":4424:4427   */\n      dup3\n        /* \"#utility.yul\":4335:4428   */\n      tag_246\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":4453:4455   */\n      0x40\n        /* \"#utility.yul\":4448:4451   */\n      dup3\n        /* \"#utility.yul\":4444:4456   */\n      add\n        /* \"#utility.yul\":4437:4456   */\n      swap1\n      pop\n        /* \"#utility.yul\":4096:4462   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4468:4887   */\n    tag_107:\n        /* \"#utility.yul\":4634:4638   */\n      0x00\n        /* \"#utility.yul\":4672:4674   */\n      0x20\n        /* \"#utility.yul\":4661:4670   */\n      dup3\n        /* \"#utility.yul\":4657:4675   */\n      add\n        /* \"#utility.yul\":4649:4675   */\n      swap1\n      pop\n        /* \"#utility.yul\":4721:4730   */\n      dup2\n        /* \"#utility.yul\":4715:4719   */\n      dup2\n        /* \"#utility.yul\":4711:4731   */\n      sub\n        /* \"#utility.yul\":4707:4708   */\n      0x00\n        /* \"#utility.yul\":4696:4705   */\n      dup4\n        /* \"#utility.yul\":4692:4709   */\n      add\n        /* \"#utility.yul\":4685:4732   */\n      mstore\n        /* \"#utility.yul\":4749:4880   */\n      tag_334\n        /* \"#utility.yul\":4875:4879   */\n      dup2\n        /* \"#utility.yul\":4749:4880   */\n      tag_247\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":4741:4880   */\n      swap1\n      pop\n        /* \"#utility.yul\":4468:4887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4893:5225   */\n    tag_110:\n        /* \"#utility.yul\":5014:5018   */\n      0x00\n        /* \"#utility.yul\":5052:5054   */\n      0x40\n        /* \"#utility.yul\":5041:5050   */\n      dup3\n        /* \"#utility.yul\":5037:5055   */\n      add\n        /* \"#utility.yul\":5029:5055   */\n      swap1\n      pop\n        /* \"#utility.yul\":5065:5136   */\n      tag_336\n        /* \"#utility.yul\":5133:5134   */\n      0x00\n        /* \"#utility.yul\":5122:5131   */\n      dup4\n        /* \"#utility.yul\":5118:5135   */\n      add\n        /* \"#utility.yul\":5109:5115   */\n      dup6\n        /* \"#utility.yul\":5065:5136   */\n      tag_240\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":5146:5218   */\n      tag_337\n        /* \"#utility.yul\":5214:5216   */\n      0x20\n        /* \"#utility.yul\":5203:5212   */\n      dup4\n        /* \"#utility.yul\":5199:5217   */\n      add\n        /* \"#utility.yul\":5190:5196   */\n      dup5\n        /* \"#utility.yul\":5146:5218   */\n      tag_232\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":4893:5225   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5231:5321   */\n    tag_248:\n        /* \"#utility.yul\":5265:5272   */\n      0x00\n        /* \"#utility.yul\":5308:5313   */\n      dup2\n        /* \"#utility.yul\":5301:5314   */\n      iszero\n        /* \"#utility.yul\":5294:5315   */\n      iszero\n        /* \"#utility.yul\":5283:5315   */\n      swap1\n      pop\n        /* \"#utility.yul\":5231:5321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5327:5443   */\n    tag_249:\n        /* \"#utility.yul\":5397:5418   */\n      tag_340\n        /* \"#utility.yul\":5412:5417   */\n      dup2\n        /* \"#utility.yul\":5397:5418   */\n      tag_248\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":5390:5395   */\n      dup2\n        /* \"#utility.yul\":5387:5419   */\n      eq\n        /* \"#utility.yul\":5377:5437   */\n      tag_341\n      jumpi\n        /* \"#utility.yul\":5433:5434   */\n      0x00\n        /* \"#utility.yul\":5430:5431   */\n      dup1\n        /* \"#utility.yul\":5423:5435   */\n      revert\n        /* \"#utility.yul\":5377:5437   */\n    tag_341:\n        /* \"#utility.yul\":5327:5443   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5449:5586   */\n    tag_250:\n        /* \"#utility.yul\":5503:5508   */\n      0x00\n        /* \"#utility.yul\":5534:5540   */\n      dup2\n        /* \"#utility.yul\":5528:5541   */\n      mload\n        /* \"#utility.yul\":5519:5541   */\n      swap1\n      pop\n        /* \"#utility.yul\":5550:5580   */\n      tag_343\n        /* \"#utility.yul\":5574:5579   */\n      dup2\n        /* \"#utility.yul\":5550:5580   */\n      tag_249\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":5449:5586   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5592:5937   */\n    tag_114:\n        /* \"#utility.yul\":5659:5665   */\n      0x00\n        /* \"#utility.yul\":5708:5710   */\n      0x20\n        /* \"#utility.yul\":5696:5705   */\n      dup3\n        /* \"#utility.yul\":5687:5694   */\n      dup5\n        /* \"#utility.yul\":5683:5706   */\n      sub\n        /* \"#utility.yul\":5679:5711   */\n      slt\n        /* \"#utility.yul\":5676:5795   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":5714:5793   */\n      tag_346\n      tag_234\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":5676:5795   */\n    tag_345:\n        /* \"#utility.yul\":5834:5835   */\n      0x00\n        /* \"#utility.yul\":5859:5920   */\n      tag_347\n        /* \"#utility.yul\":5912:5919   */\n      dup5\n        /* \"#utility.yul\":5903:5909   */\n      dup3\n        /* \"#utility.yul\":5892:5901   */\n      dup6\n        /* \"#utility.yul\":5888:5910   */\n      add\n        /* \"#utility.yul\":5859:5920   */\n      tag_250\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":5849:5920   */\n      swap2\n      pop\n        /* \"#utility.yul\":5805:5930   */\n      pop\n        /* \"#utility.yul\":5592:5937   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5943:6168   */\n    tag_251:\n        /* \"#utility.yul\":6083:6117   */\n      0x4661696c656420746f207472616e7366657220746f6b656e7320746f20746865\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6071:6077   */\n      dup3\n        /* \"#utility.yul\":6067:6081   */\n      add\n        /* \"#utility.yul\":6060:6118   */\n      mstore\n        /* \"#utility.yul\":6152:6160   */\n      0x206f776e65720000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6147:6149   */\n      0x20\n        /* \"#utility.yul\":6139:6145   */\n      dup3\n        /* \"#utility.yul\":6135:6150   */\n      add\n        /* \"#utility.yul\":6128:6161   */\n      mstore\n        /* \"#utility.yul\":5943:6168   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6174:6540   */\n    tag_252:\n        /* \"#utility.yul\":6316:6319   */\n      0x00\n        /* \"#utility.yul\":6337:6404   */\n      tag_350\n        /* \"#utility.yul\":6401:6403   */\n      0x26\n        /* \"#utility.yul\":6396:6399   */\n      dup4\n        /* \"#utility.yul\":6337:6404   */\n      tag_245\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":6330:6404   */\n      swap2\n      pop\n        /* \"#utility.yul\":6413:6506   */\n      tag_351\n        /* \"#utility.yul\":6502:6505   */\n      dup3\n        /* \"#utility.yul\":6413:6506   */\n      tag_251\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":6531:6533   */\n      0x40\n        /* \"#utility.yul\":6526:6529   */\n      dup3\n        /* \"#utility.yul\":6522:6534   */\n      add\n        /* \"#utility.yul\":6515:6534   */\n      swap1\n      pop\n        /* \"#utility.yul\":6174:6540   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6546:6965   */\n    tag_117:\n        /* \"#utility.yul\":6712:6716   */\n      0x00\n        /* \"#utility.yul\":6750:6752   */\n      0x20\n        /* \"#utility.yul\":6739:6748   */\n      dup3\n        /* \"#utility.yul\":6735:6753   */\n      add\n        /* \"#utility.yul\":6727:6753   */\n      swap1\n      pop\n        /* \"#utility.yul\":6799:6808   */\n      dup2\n        /* \"#utility.yul\":6793:6797   */\n      dup2\n        /* \"#utility.yul\":6789:6809   */\n      sub\n        /* \"#utility.yul\":6785:6786   */\n      0x00\n        /* \"#utility.yul\":6774:6783   */\n      dup4\n        /* \"#utility.yul\":6770:6787   */\n      add\n        /* \"#utility.yul\":6763:6810   */\n      mstore\n        /* \"#utility.yul\":6827:6958   */\n      tag_353\n        /* \"#utility.yul\":6953:6957   */\n      dup2\n        /* \"#utility.yul\":6827:6958   */\n      tag_252\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":6819:6958   */\n      swap1\n      pop\n        /* \"#utility.yul\":6546:6965   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6971:7191   */\n    tag_253:\n        /* \"#utility.yul\":7111:7145   */\n      0x4f776e657220686173206e6f742062616c616e636520746f2077697468647261\n        /* \"#utility.yul\":7107:7108   */\n      0x00\n        /* \"#utility.yul\":7099:7105   */\n      dup3\n        /* \"#utility.yul\":7095:7109   */\n      add\n        /* \"#utility.yul\":7088:7146   */\n      mstore\n        /* \"#utility.yul\":7180:7183   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7175:7177   */\n      0x20\n        /* \"#utility.yul\":7167:7173   */\n      dup3\n        /* \"#utility.yul\":7163:7178   */\n      add\n        /* \"#utility.yul\":7156:7184   */\n      mstore\n        /* \"#utility.yul\":6971:7191   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7197:7563   */\n    tag_254:\n        /* \"#utility.yul\":7339:7342   */\n      0x00\n        /* \"#utility.yul\":7360:7427   */\n      tag_356\n        /* \"#utility.yul\":7424:7426   */\n      0x21\n        /* \"#utility.yul\":7419:7422   */\n      dup4\n        /* \"#utility.yul\":7360:7427   */\n      tag_245\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":7353:7427   */\n      swap2\n      pop\n        /* \"#utility.yul\":7436:7529   */\n      tag_357\n        /* \"#utility.yul\":7525:7528   */\n      dup3\n        /* \"#utility.yul\":7436:7529   */\n      tag_253\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":7554:7556   */\n      0x40\n        /* \"#utility.yul\":7549:7552   */\n      dup3\n        /* \"#utility.yul\":7545:7557   */\n      add\n        /* \"#utility.yul\":7538:7557   */\n      swap1\n      pop\n        /* \"#utility.yul\":7197:7563   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7569:7988   */\n    tag_123:\n        /* \"#utility.yul\":7735:7739   */\n      0x00\n        /* \"#utility.yul\":7773:7775   */\n      0x20\n        /* \"#utility.yul\":7762:7771   */\n      dup3\n        /* \"#utility.yul\":7758:7776   */\n      add\n        /* \"#utility.yul\":7750:7776   */\n      swap1\n      pop\n        /* \"#utility.yul\":7822:7831   */\n      dup2\n        /* \"#utility.yul\":7816:7820   */\n      dup2\n        /* \"#utility.yul\":7812:7832   */\n      sub\n        /* \"#utility.yul\":7808:7809   */\n      0x00\n        /* \"#utility.yul\":7797:7806   */\n      dup4\n        /* \"#utility.yul\":7793:7810   */\n      add\n        /* \"#utility.yul\":7786:7833   */\n      mstore\n        /* \"#utility.yul\":7850:7981   */\n      tag_359\n        /* \"#utility.yul\":7976:7980   */\n      dup2\n        /* \"#utility.yul\":7850:7981   */\n      tag_254\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":7842:7981   */\n      swap1\n      pop\n        /* \"#utility.yul\":7569:7988   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7994:8141   */\n    tag_255:\n        /* \"#utility.yul\":8095:8106   */\n      0x00\n        /* \"#utility.yul\":8132:8135   */\n      dup2\n        /* \"#utility.yul\":8117:8135   */\n      swap1\n      pop\n        /* \"#utility.yul\":7994:8141   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8147:8261   */\n    tag_256:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8267:8665   */\n    tag_257:\n        /* \"#utility.yul\":8426:8429   */\n      0x00\n        /* \"#utility.yul\":8447:8530   */\n      tag_363\n        /* \"#utility.yul\":8528:8529   */\n      0x00\n        /* \"#utility.yul\":8523:8526   */\n      dup4\n        /* \"#utility.yul\":8447:8530   */\n      tag_255\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":8440:8530   */\n      swap2\n      pop\n        /* \"#utility.yul\":8539:8632   */\n      tag_364\n        /* \"#utility.yul\":8628:8631   */\n      dup3\n        /* \"#utility.yul\":8539:8632   */\n      tag_256\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":8657:8658   */\n      0x00\n        /* \"#utility.yul\":8652:8655   */\n      dup3\n        /* \"#utility.yul\":8648:8659   */\n      add\n        /* \"#utility.yul\":8641:8659   */\n      swap1\n      pop\n        /* \"#utility.yul\":8267:8665   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8671:9050   */\n    tag_125:\n        /* \"#utility.yul\":8855:8858   */\n      0x00\n        /* \"#utility.yul\":8877:9024   */\n      tag_366\n        /* \"#utility.yul\":9020:9023   */\n      dup3\n        /* \"#utility.yul\":8877:9024   */\n      tag_257\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":8870:9024   */\n      swap2\n      pop\n        /* \"#utility.yul\":9041:9044   */\n      dup2\n        /* \"#utility.yul\":9034:9044   */\n      swap1\n      pop\n        /* \"#utility.yul\":8671:9050   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9056:9288   */\n    tag_258:\n        /* \"#utility.yul\":9196:9230   */\n      0x4661696c656420746f2073656e6420757365722062616c616e6365206261636b\n        /* \"#utility.yul\":9192:9193   */\n      0x00\n        /* \"#utility.yul\":9184:9190   */\n      dup3\n        /* \"#utility.yul\":9180:9194   */\n      add\n        /* \"#utility.yul\":9173:9231   */\n      mstore\n        /* \"#utility.yul\":9265:9280   */\n      0x20746f20746865206f776e657200000000000000000000000000000000000000\n        /* \"#utility.yul\":9260:9262   */\n      0x20\n        /* \"#utility.yul\":9252:9258   */\n      dup3\n        /* \"#utility.yul\":9248:9263   */\n      add\n        /* \"#utility.yul\":9241:9281   */\n      mstore\n        /* \"#utility.yul\":9056:9288   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9294:9660   */\n    tag_259:\n        /* \"#utility.yul\":9436:9439   */\n      0x00\n        /* \"#utility.yul\":9457:9524   */\n      tag_369\n        /* \"#utility.yul\":9521:9523   */\n      0x2d\n        /* \"#utility.yul\":9516:9519   */\n      dup4\n        /* \"#utility.yul\":9457:9524   */\n      tag_245\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":9450:9524   */\n      swap2\n      pop\n        /* \"#utility.yul\":9533:9626   */\n      tag_370\n        /* \"#utility.yul\":9622:9625   */\n      dup3\n        /* \"#utility.yul\":9533:9626   */\n      tag_258\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":9651:9653   */\n      0x40\n        /* \"#utility.yul\":9646:9649   */\n      dup3\n        /* \"#utility.yul\":9642:9654   */\n      add\n        /* \"#utility.yul\":9635:9654   */\n      swap1\n      pop\n        /* \"#utility.yul\":9294:9660   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9666:10085   */\n    tag_131:\n        /* \"#utility.yul\":9832:9836   */\n      0x00\n        /* \"#utility.yul\":9870:9872   */\n      0x20\n        /* \"#utility.yul\":9859:9868   */\n      dup3\n        /* \"#utility.yul\":9855:9873   */\n      add\n        /* \"#utility.yul\":9847:9873   */\n      swap1\n      pop\n        /* \"#utility.yul\":9919:9928   */\n      dup2\n        /* \"#utility.yul\":9913:9917   */\n      dup2\n        /* \"#utility.yul\":9909:9929   */\n      sub\n        /* \"#utility.yul\":9905:9906   */\n      0x00\n        /* \"#utility.yul\":9894:9903   */\n      dup4\n        /* \"#utility.yul\":9890:9907   */\n      add\n        /* \"#utility.yul\":9883:9930   */\n      mstore\n        /* \"#utility.yul\":9947:10078   */\n      tag_372\n        /* \"#utility.yul\":10073:10077   */\n      dup2\n        /* \"#utility.yul\":9947:10078   */\n      tag_259\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":9939:10078   */\n      swap1\n      pop\n        /* \"#utility.yul\":9666:10085   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10091:10273   */\n    tag_260:\n        /* \"#utility.yul\":10231:10265   */\n      0x5370656369667920616d6f756e74206f6620746f6b656e7320746f2073656c6c\n        /* \"#utility.yul\":10227:10228   */\n      0x00\n        /* \"#utility.yul\":10219:10225   */\n      dup3\n        /* \"#utility.yul\":10215:10229   */\n      add\n        /* \"#utility.yul\":10208:10266   */\n      mstore\n        /* \"#utility.yul\":10091:10273   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10279:10645   */\n    tag_261:\n        /* \"#utility.yul\":10421:10424   */\n      0x00\n        /* \"#utility.yul\":10442:10509   */\n      tag_375\n        /* \"#utility.yul\":10506:10508   */\n      0x20\n        /* \"#utility.yul\":10501:10504   */\n      dup4\n        /* \"#utility.yul\":10442:10509   */\n      tag_245\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":10435:10509   */\n      swap2\n      pop\n        /* \"#utility.yul\":10518:10611   */\n      tag_376\n        /* \"#utility.yul\":10607:10610   */\n      dup3\n        /* \"#utility.yul\":10518:10611   */\n      tag_260\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":10636:10638   */\n      0x20\n        /* \"#utility.yul\":10631:10634   */\n      dup3\n        /* \"#utility.yul\":10627:10639   */\n      add\n        /* \"#utility.yul\":10620:10639   */\n      swap1\n      pop\n        /* \"#utility.yul\":10279:10645   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10651:11070   */\n    tag_139:\n        /* \"#utility.yul\":10817:10821   */\n      0x00\n        /* \"#utility.yul\":10855:10857   */\n      0x20\n        /* \"#utility.yul\":10844:10853   */\n      dup3\n        /* \"#utility.yul\":10840:10858   */\n      add\n        /* \"#utility.yul\":10832:10858   */\n      swap1\n      pop\n        /* \"#utility.yul\":10904:10913   */\n      dup2\n        /* \"#utility.yul\":10898:10902   */\n      dup2\n        /* \"#utility.yul\":10894:10914   */\n      sub\n        /* \"#utility.yul\":10890:10891   */\n      0x00\n        /* \"#utility.yul\":10879:10888   */\n      dup4\n        /* \"#utility.yul\":10875:10892   */\n      add\n        /* \"#utility.yul\":10868:10915   */\n      mstore\n        /* \"#utility.yul\":10932:11063   */\n      tag_378\n        /* \"#utility.yul\":11058:11062   */\n      dup2\n        /* \"#utility.yul\":10932:11063   */\n      tag_261\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":10924:11063   */\n      swap1\n      pop\n        /* \"#utility.yul\":10651:11070   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11076:11252   */\n    tag_262:\n        /* \"#utility.yul\":11216:11244   */\n      0x496e73756666696369656e7420746f6b656e2062616c616e6365000000000000\n        /* \"#utility.yul\":11212:11213   */\n      0x00\n        /* \"#utility.yul\":11204:11210   */\n      dup3\n        /* \"#utility.yul\":11200:11214   */\n      add\n        /* \"#utility.yul\":11193:11245   */\n      mstore\n        /* \"#utility.yul\":11076:11252   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11258:11624   */\n    tag_263:\n        /* \"#utility.yul\":11400:11403   */\n      0x00\n        /* \"#utility.yul\":11421:11488   */\n      tag_381\n        /* \"#utility.yul\":11485:11487   */\n      0x1a\n        /* \"#utility.yul\":11480:11483   */\n      dup4\n        /* \"#utility.yul\":11421:11488   */\n      tag_245\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":11414:11488   */\n      swap2\n      pop\n        /* \"#utility.yul\":11497:11590   */\n      tag_382\n        /* \"#utility.yul\":11586:11589   */\n      dup3\n        /* \"#utility.yul\":11497:11590   */\n      tag_262\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":11615:11617   */\n      0x20\n        /* \"#utility.yul\":11610:11613   */\n      dup3\n        /* \"#utility.yul\":11606:11618   */\n      add\n        /* \"#utility.yul\":11599:11618   */\n      swap1\n      pop\n        /* \"#utility.yul\":11258:11624   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11630:12049   */\n    tag_146:\n        /* \"#utility.yul\":11796:11800   */\n      0x00\n        /* \"#utility.yul\":11834:11836   */\n      0x20\n        /* \"#utility.yul\":11823:11832   */\n      dup3\n        /* \"#utility.yul\":11819:11837   */\n      add\n        /* \"#utility.yul\":11811:11837   */\n      swap1\n      pop\n        /* \"#utility.yul\":11883:11892   */\n      dup2\n        /* \"#utility.yul\":11877:11881   */\n      dup2\n        /* \"#utility.yul\":11873:11893   */\n      sub\n        /* \"#utility.yul\":11869:11870   */\n      0x00\n        /* \"#utility.yul\":11858:11867   */\n      dup4\n        /* \"#utility.yul\":11854:11871   */\n      add\n        /* \"#utility.yul\":11847:11894   */\n      mstore\n        /* \"#utility.yul\":11911:12042   */\n      tag_384\n        /* \"#utility.yul\":12037:12041   */\n      dup2\n        /* \"#utility.yul\":11911:12042   */\n      tag_263\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":11903:12042   */\n      swap1\n      pop\n        /* \"#utility.yul\":11630:12049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12055:12249   */\n    tag_149:\n        /* \"#utility.yul\":12095:12099   */\n      0x00\n        /* \"#utility.yul\":12115:12135   */\n      tag_386\n        /* \"#utility.yul\":12133:12134   */\n      dup3\n        /* \"#utility.yul\":12115:12135   */\n      tag_231\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":12110:12135   */\n      swap2\n      pop\n        /* \"#utility.yul\":12149:12169   */\n      tag_387\n        /* \"#utility.yul\":12167:12168   */\n      dup4\n        /* \"#utility.yul\":12149:12169   */\n      tag_231\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":12144:12169   */\n      swap3\n      pop\n        /* \"#utility.yul\":12193:12194   */\n      dup3\n        /* \"#utility.yul\":12190:12191   */\n      dup3\n        /* \"#utility.yul\":12186:12195   */\n      sub\n        /* \"#utility.yul\":12178:12195   */\n      swap1\n      pop\n        /* \"#utility.yul\":12217:12218   */\n      dup2\n        /* \"#utility.yul\":12211:12215   */\n      dup2\n        /* \"#utility.yul\":12208:12219   */\n      gt\n        /* \"#utility.yul\":12205:12242   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":12222:12240   */\n      tag_389\n      tag_243\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":12205:12242   */\n    tag_388:\n        /* \"#utility.yul\":12055:12249   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12255:12435   */\n    tag_264:\n        /* \"#utility.yul\":12303:12380   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12300:12301   */\n      0x00\n        /* \"#utility.yul\":12293:12381   */\n      mstore\n        /* \"#utility.yul\":12400:12404   */\n      0x12\n        /* \"#utility.yul\":12397:12398   */\n      0x04\n        /* \"#utility.yul\":12390:12405   */\n      mstore\n        /* \"#utility.yul\":12424:12428   */\n      0x24\n        /* \"#utility.yul\":12421:12422   */\n      0x00\n        /* \"#utility.yul\":12414:12429   */\n      revert\n        /* \"#utility.yul\":12441:12626   */\n    tag_152:\n        /* \"#utility.yul\":12481:12482   */\n      0x00\n        /* \"#utility.yul\":12498:12518   */\n      tag_392\n        /* \"#utility.yul\":12516:12517   */\n      dup3\n        /* \"#utility.yul\":12498:12518   */\n      tag_231\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":12493:12518   */\n      swap2\n      pop\n        /* \"#utility.yul\":12532:12552   */\n      tag_393\n        /* \"#utility.yul\":12550:12551   */\n      dup4\n        /* \"#utility.yul\":12532:12552   */\n      tag_231\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":12527:12552   */\n      swap3\n      pop\n        /* \"#utility.yul\":12571:12572   */\n      dup3\n        /* \"#utility.yul\":12561:12596   */\n      tag_394\n      jumpi\n        /* \"#utility.yul\":12576:12594   */\n      tag_395\n      tag_264\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":12561:12596   */\n    tag_394:\n        /* \"#utility.yul\":12618:12619   */\n      dup3\n        /* \"#utility.yul\":12615:12616   */\n      dup3\n        /* \"#utility.yul\":12611:12620   */\n      div\n        /* \"#utility.yul\":12606:12620   */\n      swap1\n      pop\n        /* \"#utility.yul\":12441:12626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12632:12856   */\n    tag_265:\n        /* \"#utility.yul\":12772:12806   */\n      0x496e73756666696369656e7420436f696e2062616c616e636520696e20636f6e\n        /* \"#utility.yul\":12768:12769   */\n      0x00\n        /* \"#utility.yul\":12760:12766   */\n      dup3\n        /* \"#utility.yul\":12756:12770   */\n      add\n        /* \"#utility.yul\":12749:12807   */\n      mstore\n        /* \"#utility.yul\":12841:12848   */\n      0x7472616374000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12836:12838   */\n      0x20\n        /* \"#utility.yul\":12828:12834   */\n      dup3\n        /* \"#utility.yul\":12824:12839   */\n      add\n        /* \"#utility.yul\":12817:12849   */\n      mstore\n        /* \"#utility.yul\":12632:12856   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12862:13228   */\n    tag_266:\n        /* \"#utility.yul\":13004:13007   */\n      0x00\n        /* \"#utility.yul\":13025:13092   */\n      tag_398\n        /* \"#utility.yul\":13089:13091   */\n      0x25\n        /* \"#utility.yul\":13084:13087   */\n      dup4\n        /* \"#utility.yul\":13025:13092   */\n      tag_245\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":13018:13092   */\n      swap2\n      pop\n        /* \"#utility.yul\":13101:13194   */\n      tag_399\n        /* \"#utility.yul\":13190:13193   */\n      dup3\n        /* \"#utility.yul\":13101:13194   */\n      tag_265\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":13219:13221   */\n      0x40\n        /* \"#utility.yul\":13214:13217   */\n      dup3\n        /* \"#utility.yul\":13210:13222   */\n      add\n        /* \"#utility.yul\":13203:13222   */\n      swap1\n      pop\n        /* \"#utility.yul\":12862:13228   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13234:13653   */\n    tag_155:\n        /* \"#utility.yul\":13400:13404   */\n      0x00\n        /* \"#utility.yul\":13438:13440   */\n      0x20\n        /* \"#utility.yul\":13427:13436   */\n      dup3\n        /* \"#utility.yul\":13423:13441   */\n      add\n        /* \"#utility.yul\":13415:13441   */\n      swap1\n      pop\n        /* \"#utility.yul\":13487:13496   */\n      dup2\n        /* \"#utility.yul\":13481:13485   */\n      dup2\n        /* \"#utility.yul\":13477:13497   */\n      sub\n        /* \"#utility.yul\":13473:13474   */\n      0x00\n        /* \"#utility.yul\":13462:13471   */\n      dup4\n        /* \"#utility.yul\":13458:13475   */\n      add\n        /* \"#utility.yul\":13451:13498   */\n      mstore\n        /* \"#utility.yul\":13515:13646   */\n      tag_401\n        /* \"#utility.yul\":13641:13645   */\n      dup2\n        /* \"#utility.yul\":13515:13646   */\n      tag_266\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":13507:13646   */\n      swap1\n      pop\n        /* \"#utility.yul\":13234:13653   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13659:14101   */\n    tag_157:\n        /* \"#utility.yul\":13808:13812   */\n      0x00\n        /* \"#utility.yul\":13846:13848   */\n      0x60\n        /* \"#utility.yul\":13835:13844   */\n      dup3\n        /* \"#utility.yul\":13831:13849   */\n      add\n        /* \"#utility.yul\":13823:13849   */\n      swap1\n      pop\n        /* \"#utility.yul\":13859:13930   */\n      tag_403\n        /* \"#utility.yul\":13927:13928   */\n      0x00\n        /* \"#utility.yul\":13916:13925   */\n      dup4\n        /* \"#utility.yul\":13912:13929   */\n      add\n        /* \"#utility.yul\":13903:13909   */\n      dup7\n        /* \"#utility.yul\":13859:13930   */\n      tag_240\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":13940:14012   */\n      tag_404\n        /* \"#utility.yul\":14008:14010   */\n      0x20\n        /* \"#utility.yul\":13997:14006   */\n      dup4\n        /* \"#utility.yul\":13993:14011   */\n      add\n        /* \"#utility.yul\":13984:13990   */\n      dup6\n        /* \"#utility.yul\":13940:14012   */\n      tag_240\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":14022:14094   */\n      tag_405\n        /* \"#utility.yul\":14090:14092   */\n      0x40\n        /* \"#utility.yul\":14079:14088   */\n      dup4\n        /* \"#utility.yul\":14075:14093   */\n      add\n        /* \"#utility.yul\":14066:14072   */\n      dup5\n        /* \"#utility.yul\":14022:14094   */\n      tag_232\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":13659:14101   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14107:14330   */\n    tag_267:\n        /* \"#utility.yul\":14247:14281   */\n      0x4661696c656420746f207472616e7366657220746f6b656e20746f20636f6e74\n        /* \"#utility.yul\":14243:14244   */\n      0x00\n        /* \"#utility.yul\":14235:14241   */\n      dup3\n        /* \"#utility.yul\":14231:14245   */\n      add\n        /* \"#utility.yul\":14224:14282   */\n      mstore\n        /* \"#utility.yul\":14316:14322   */\n      0x7261637400000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14311:14313   */\n      0x20\n        /* \"#utility.yul\":14303:14309   */\n      dup3\n        /* \"#utility.yul\":14299:14314   */\n      add\n        /* \"#utility.yul\":14292:14323   */\n      mstore\n        /* \"#utility.yul\":14107:14330   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14336:14702   */\n    tag_268:\n        /* \"#utility.yul\":14478:14481   */\n      0x00\n        /* \"#utility.yul\":14499:14566   */\n      tag_408\n        /* \"#utility.yul\":14563:14565   */\n      0x24\n        /* \"#utility.yul\":14558:14561   */\n      dup4\n        /* \"#utility.yul\":14499:14566   */\n      tag_245\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":14492:14566   */\n      swap2\n      pop\n        /* \"#utility.yul\":14575:14668   */\n      tag_409\n        /* \"#utility.yul\":14664:14667   */\n      dup3\n        /* \"#utility.yul\":14575:14668   */\n      tag_267\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":14693:14695   */\n      0x40\n        /* \"#utility.yul\":14688:14691   */\n      dup3\n        /* \"#utility.yul\":14684:14696   */\n      add\n        /* \"#utility.yul\":14677:14696   */\n      swap1\n      pop\n        /* \"#utility.yul\":14336:14702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14708:15127   */\n    tag_163:\n        /* \"#utility.yul\":14874:14878   */\n      0x00\n        /* \"#utility.yul\":14912:14914   */\n      0x20\n        /* \"#utility.yul\":14901:14910   */\n      dup3\n        /* \"#utility.yul\":14897:14915   */\n      add\n        /* \"#utility.yul\":14889:14915   */\n      swap1\n      pop\n        /* \"#utility.yul\":14961:14970   */\n      dup2\n        /* \"#utility.yul\":14955:14959   */\n      dup2\n        /* \"#utility.yul\":14951:14971   */\n      sub\n        /* \"#utility.yul\":14947:14948   */\n      0x00\n        /* \"#utility.yul\":14936:14945   */\n      dup4\n        /* \"#utility.yul\":14932:14949   */\n      add\n        /* \"#utility.yul\":14925:14972   */\n      mstore\n        /* \"#utility.yul\":14989:15120   */\n      tag_411\n        /* \"#utility.yul\":15115:15119   */\n      dup2\n        /* \"#utility.yul\":14989:15120   */\n      tag_268\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":14981:15120   */\n      swap1\n      pop\n        /* \"#utility.yul\":14708:15127   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15133:15310   */\n    tag_269:\n        /* \"#utility.yul\":15273:15302   */\n      0x4661696c656420746f2073656e6420436f696e20746f20757365720000000000\n        /* \"#utility.yul\":15269:15270   */\n      0x00\n        /* \"#utility.yul\":15261:15267   */\n      dup3\n        /* \"#utility.yul\":15257:15271   */\n      add\n        /* \"#utility.yul\":15250:15303   */\n      mstore\n        /* \"#utility.yul\":15133:15310   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15316:15682   */\n    tag_270:\n        /* \"#utility.yul\":15458:15461   */\n      0x00\n        /* \"#utility.yul\":15479:15546   */\n      tag_414\n        /* \"#utility.yul\":15543:15545   */\n      0x1b\n        /* \"#utility.yul\":15538:15541   */\n      dup4\n        /* \"#utility.yul\":15479:15546   */\n      tag_245\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":15472:15546   */\n      swap2\n      pop\n        /* \"#utility.yul\":15555:15648   */\n      tag_415\n        /* \"#utility.yul\":15644:15647   */\n      dup3\n        /* \"#utility.yul\":15555:15648   */\n      tag_269\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":15673:15675   */\n      0x20\n        /* \"#utility.yul\":15668:15671   */\n      dup3\n        /* \"#utility.yul\":15664:15676   */\n      add\n        /* \"#utility.yul\":15657:15676   */\n      swap1\n      pop\n        /* \"#utility.yul\":15316:15682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15688:16107   */\n    tag_170:\n        /* \"#utility.yul\":15854:15858   */\n      0x00\n        /* \"#utility.yul\":15892:15894   */\n      0x20\n        /* \"#utility.yul\":15881:15890   */\n      dup3\n        /* \"#utility.yul\":15877:15895   */\n      add\n        /* \"#utility.yul\":15869:15895   */\n      swap1\n      pop\n        /* \"#utility.yul\":15941:15950   */\n      dup2\n        /* \"#utility.yul\":15935:15939   */\n      dup2\n        /* \"#utility.yul\":15931:15951   */\n      sub\n        /* \"#utility.yul\":15927:15928   */\n      0x00\n        /* \"#utility.yul\":15916:15925   */\n      dup4\n        /* \"#utility.yul\":15912:15929   */\n      add\n        /* \"#utility.yul\":15905:15952   */\n      mstore\n        /* \"#utility.yul\":15969:16100   */\n      tag_417\n        /* \"#utility.yul\":16095:16099   */\n      dup2\n        /* \"#utility.yul\":15969:16100   */\n      tag_270\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":15961:16100   */\n      swap1\n      pop\n        /* \"#utility.yul\":15688:16107   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16113:16555   */\n    tag_172:\n        /* \"#utility.yul\":16262:16266   */\n      0x00\n        /* \"#utility.yul\":16300:16302   */\n      0x60\n        /* \"#utility.yul\":16289:16298   */\n      dup3\n        /* \"#utility.yul\":16285:16303   */\n      add\n        /* \"#utility.yul\":16277:16303   */\n      swap1\n      pop\n        /* \"#utility.yul\":16313:16384   */\n      tag_419\n        /* \"#utility.yul\":16381:16382   */\n      0x00\n        /* \"#utility.yul\":16370:16379   */\n      dup4\n        /* \"#utility.yul\":16366:16383   */\n      add\n        /* \"#utility.yul\":16357:16363   */\n      dup7\n        /* \"#utility.yul\":16313:16384   */\n      tag_240\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":16394:16466   */\n      tag_420\n        /* \"#utility.yul\":16462:16464   */\n      0x20\n        /* \"#utility.yul\":16451:16460   */\n      dup4\n        /* \"#utility.yul\":16447:16465   */\n      add\n        /* \"#utility.yul\":16438:16444   */\n      dup6\n        /* \"#utility.yul\":16394:16466   */\n      tag_232\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":16476:16548   */\n      tag_421\n        /* \"#utility.yul\":16544:16546   */\n      0x40\n        /* \"#utility.yul\":16533:16542   */\n      dup4\n        /* \"#utility.yul\":16529:16547   */\n      add\n        /* \"#utility.yul\":16520:16526   */\n      dup5\n        /* \"#utility.yul\":16476:16548   */\n      tag_232\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":16113:16555   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16561:16739   */\n    tag_271:\n        /* \"#utility.yul\":16701:16731   */\n      0x53656e6420436f696e20746f2062757920736f6d6520746f6b656e7300000000\n        /* \"#utility.yul\":16697:16698   */\n      0x00\n        /* \"#utility.yul\":16689:16695   */\n      dup3\n        /* \"#utility.yul\":16685:16699   */\n      add\n        /* \"#utility.yul\":16678:16732   */\n      mstore\n        /* \"#utility.yul\":16561:16739   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16745:17111   */\n    tag_272:\n        /* \"#utility.yul\":16887:16890   */\n      0x00\n        /* \"#utility.yul\":16908:16975   */\n      tag_424\n        /* \"#utility.yul\":16972:16974   */\n      0x1c\n        /* \"#utility.yul\":16967:16970   */\n      dup4\n        /* \"#utility.yul\":16908:16975   */\n      tag_245\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":16901:16975   */\n      swap2\n      pop\n        /* \"#utility.yul\":16984:17077   */\n      tag_425\n        /* \"#utility.yul\":17073:17076   */\n      dup3\n        /* \"#utility.yul\":16984:17077   */\n      tag_271\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":17102:17104   */\n      0x20\n        /* \"#utility.yul\":17097:17100   */\n      dup3\n        /* \"#utility.yul\":17093:17105   */\n      add\n        /* \"#utility.yul\":17086:17105   */\n      swap1\n      pop\n        /* \"#utility.yul\":16745:17111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17117:17536   */\n    tag_183:\n        /* \"#utility.yul\":17283:17287   */\n      0x00\n        /* \"#utility.yul\":17321:17323   */\n      0x20\n        /* \"#utility.yul\":17310:17319   */\n      dup3\n        /* \"#utility.yul\":17306:17324   */\n      add\n        /* \"#utility.yul\":17298:17324   */\n      swap1\n      pop\n        /* \"#utility.yul\":17370:17379   */\n      dup2\n        /* \"#utility.yul\":17364:17368   */\n      dup2\n        /* \"#utility.yul\":17360:17380   */\n      sub\n        /* \"#utility.yul\":17356:17357   */\n      0x00\n        /* \"#utility.yul\":17345:17354   */\n      dup4\n        /* \"#utility.yul\":17341:17358   */\n      add\n        /* \"#utility.yul\":17334:17381   */\n      mstore\n        /* \"#utility.yul\":17398:17529   */\n      tag_427\n        /* \"#utility.yul\":17524:17528   */\n      dup2\n        /* \"#utility.yul\":17398:17529   */\n      tag_272\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":17390:17529   */\n      swap1\n      pop\n        /* \"#utility.yul\":17117:17536   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17542:17764   */\n    tag_273:\n        /* \"#utility.yul\":17682:17716   */\n      0x45786365656473206d6178696d756d20746f6b656e7320706572207075726368\n        /* \"#utility.yul\":17678:17679   */\n      0x00\n        /* \"#utility.yul\":17670:17676   */\n      dup3\n        /* \"#utility.yul\":17666:17680   */\n      add\n        /* \"#utility.yul\":17659:17717   */\n      mstore\n        /* \"#utility.yul\":17751:17756   */\n      0x6173650000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17746:17748   */\n      0x20\n        /* \"#utility.yul\":17738:17744   */\n      dup3\n        /* \"#utility.yul\":17734:17749   */\n      add\n        /* \"#utility.yul\":17727:17757   */\n      mstore\n        /* \"#utility.yul\":17542:17764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17770:18136   */\n    tag_274:\n        /* \"#utility.yul\":17912:17915   */\n      0x00\n        /* \"#utility.yul\":17933:18000   */\n      tag_430\n        /* \"#utility.yul\":17997:17999   */\n      0x23\n        /* \"#utility.yul\":17992:17995   */\n      dup4\n        /* \"#utility.yul\":17933:18000   */\n      tag_245\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":17926:18000   */\n      swap2\n      pop\n        /* \"#utility.yul\":18009:18102   */\n      tag_431\n        /* \"#utility.yul\":18098:18101   */\n      dup3\n        /* \"#utility.yul\":18009:18102   */\n      tag_273\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":18127:18129   */\n      0x40\n        /* \"#utility.yul\":18122:18125   */\n      dup3\n        /* \"#utility.yul\":18118:18130   */\n      add\n        /* \"#utility.yul\":18111:18130   */\n      swap1\n      pop\n        /* \"#utility.yul\":17770:18136   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18142:18561   */\n    tag_187:\n        /* \"#utility.yul\":18308:18312   */\n      0x00\n        /* \"#utility.yul\":18346:18348   */\n      0x20\n        /* \"#utility.yul\":18335:18344   */\n      dup3\n        /* \"#utility.yul\":18331:18349   */\n      add\n        /* \"#utility.yul\":18323:18349   */\n      swap1\n      pop\n        /* \"#utility.yul\":18395:18404   */\n      dup2\n        /* \"#utility.yul\":18389:18393   */\n      dup2\n        /* \"#utility.yul\":18385:18405   */\n      sub\n        /* \"#utility.yul\":18381:18382   */\n      0x00\n        /* \"#utility.yul\":18370:18379   */\n      dup4\n        /* \"#utility.yul\":18366:18383   */\n      add\n        /* \"#utility.yul\":18359:18406   */\n      mstore\n        /* \"#utility.yul\":18423:18554   */\n      tag_433\n        /* \"#utility.yul\":18549:18553   */\n      dup2\n        /* \"#utility.yul\":18423:18554   */\n      tag_274\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":18415:18554   */\n      swap1\n      pop\n        /* \"#utility.yul\":18142:18561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18567:18806   */\n    tag_275:\n        /* \"#utility.yul\":18707:18741   */\n      0x56656e646f7220636f6e747261637420686173206e6f7420656e6f7567682074\n        /* \"#utility.yul\":18703:18704   */\n      0x00\n        /* \"#utility.yul\":18695:18701   */\n      dup3\n        /* \"#utility.yul\":18691:18705   */\n      add\n        /* \"#utility.yul\":18684:18742   */\n      mstore\n        /* \"#utility.yul\":18776:18798   */\n      0x6f6b656e7320696e206974732062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":18771:18773   */\n      0x20\n        /* \"#utility.yul\":18763:18769   */\n      dup3\n        /* \"#utility.yul\":18759:18774   */\n      add\n        /* \"#utility.yul\":18752:18799   */\n      mstore\n        /* \"#utility.yul\":18567:18806   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18812:19178   */\n    tag_276:\n        /* \"#utility.yul\":18954:18957   */\n      0x00\n        /* \"#utility.yul\":18975:19042   */\n      tag_436\n        /* \"#utility.yul\":19039:19041   */\n      0x34\n        /* \"#utility.yul\":19034:19037   */\n      dup4\n        /* \"#utility.yul\":18975:19042   */\n      tag_245\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":18968:19042   */\n      swap2\n      pop\n        /* \"#utility.yul\":19051:19144   */\n      tag_437\n        /* \"#utility.yul\":19140:19143   */\n      dup3\n        /* \"#utility.yul\":19051:19144   */\n      tag_275\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":19169:19171   */\n      0x40\n        /* \"#utility.yul\":19164:19167   */\n      dup3\n        /* \"#utility.yul\":19160:19172   */\n      add\n        /* \"#utility.yul\":19153:19172   */\n      swap1\n      pop\n        /* \"#utility.yul\":18812:19178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19184:19603   */\n    tag_194:\n        /* \"#utility.yul\":19350:19354   */\n      0x00\n        /* \"#utility.yul\":19388:19390   */\n      0x20\n        /* \"#utility.yul\":19377:19386   */\n      dup3\n        /* \"#utility.yul\":19373:19391   */\n      add\n        /* \"#utility.yul\":19365:19391   */\n      swap1\n      pop\n        /* \"#utility.yul\":19437:19446   */\n      dup2\n        /* \"#utility.yul\":19431:19435   */\n      dup2\n        /* \"#utility.yul\":19427:19447   */\n      sub\n        /* \"#utility.yul\":19423:19424   */\n      0x00\n        /* \"#utility.yul\":19412:19421   */\n      dup4\n        /* \"#utility.yul\":19408:19425   */\n      add\n        /* \"#utility.yul\":19401:19448   */\n      mstore\n        /* \"#utility.yul\":19465:19596   */\n      tag_439\n        /* \"#utility.yul\":19591:19595   */\n      dup2\n        /* \"#utility.yul\":19465:19596   */\n      tag_276\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":19457:19596   */\n      swap1\n      pop\n        /* \"#utility.yul\":19184:19603   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19609:19800   */\n    tag_200:\n        /* \"#utility.yul\":19649:19652   */\n      0x00\n        /* \"#utility.yul\":19668:19688   */\n      tag_441\n        /* \"#utility.yul\":19686:19687   */\n      dup3\n        /* \"#utility.yul\":19668:19688   */\n      tag_231\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":19663:19688   */\n      swap2\n      pop\n        /* \"#utility.yul\":19702:19722   */\n      tag_442\n        /* \"#utility.yul\":19720:19721   */\n      dup4\n        /* \"#utility.yul\":19702:19722   */\n      tag_231\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":19697:19722   */\n      swap3\n      pop\n        /* \"#utility.yul\":19745:19746   */\n      dup3\n        /* \"#utility.yul\":19742:19743   */\n      dup3\n        /* \"#utility.yul\":19738:19747   */\n      add\n        /* \"#utility.yul\":19731:19747   */\n      swap1\n      pop\n        /* \"#utility.yul\":19766:19769   */\n      dup1\n        /* \"#utility.yul\":19763:19764   */\n      dup3\n        /* \"#utility.yul\":19760:19770   */\n      gt\n        /* \"#utility.yul\":19757:19793   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":19773:19791   */\n      tag_444\n      tag_243\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":19757:19793   */\n    tag_443:\n        /* \"#utility.yul\":19609:19800   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19806:20027   */\n    tag_277:\n        /* \"#utility.yul\":19946:19980   */\n      0x45786365656473206d6178696d756d20746f6b656e7320706572206164647265\n        /* \"#utility.yul\":19942:19943   */\n      0x00\n        /* \"#utility.yul\":19934:19940   */\n      dup3\n        /* \"#utility.yul\":19930:19944   */\n      add\n        /* \"#utility.yul\":19923:19981   */\n      mstore\n        /* \"#utility.yul\":20015:20019   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20010:20012   */\n      0x20\n        /* \"#utility.yul\":20002:20008   */\n      dup3\n        /* \"#utility.yul\":19998:20013   */\n      add\n        /* \"#utility.yul\":19991:20020   */\n      mstore\n        /* \"#utility.yul\":19806:20027   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20033:20399   */\n    tag_278:\n        /* \"#utility.yul\":20175:20178   */\n      0x00\n        /* \"#utility.yul\":20196:20263   */\n      tag_447\n        /* \"#utility.yul\":20260:20262   */\n      0x22\n        /* \"#utility.yul\":20255:20258   */\n      dup4\n        /* \"#utility.yul\":20196:20263   */\n      tag_245\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":20189:20263   */\n      swap2\n      pop\n        /* \"#utility.yul\":20272:20365   */\n      tag_448\n        /* \"#utility.yul\":20361:20364   */\n      dup3\n        /* \"#utility.yul\":20272:20365   */\n      tag_277\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":20390:20392   */\n      0x40\n        /* \"#utility.yul\":20385:20388   */\n      dup3\n        /* \"#utility.yul\":20381:20393   */\n      add\n        /* \"#utility.yul\":20374:20393   */\n      swap1\n      pop\n        /* \"#utility.yul\":20033:20399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20405:20824   */\n    tag_203:\n        /* \"#utility.yul\":20571:20575   */\n      0x00\n        /* \"#utility.yul\":20609:20611   */\n      0x20\n        /* \"#utility.yul\":20598:20607   */\n      dup3\n        /* \"#utility.yul\":20594:20612   */\n      add\n        /* \"#utility.yul\":20586:20612   */\n      swap1\n      pop\n        /* \"#utility.yul\":20658:20667   */\n      dup2\n        /* \"#utility.yul\":20652:20656   */\n      dup2\n        /* \"#utility.yul\":20648:20668   */\n      sub\n        /* \"#utility.yul\":20644:20645   */\n      0x00\n        /* \"#utility.yul\":20633:20642   */\n      dup4\n        /* \"#utility.yul\":20629:20646   */\n      add\n        /* \"#utility.yul\":20622:20669   */\n      mstore\n        /* \"#utility.yul\":20686:20817   */\n      tag_450\n        /* \"#utility.yul\":20812:20816   */\n      dup2\n        /* \"#utility.yul\":20686:20817   */\n      tag_278\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":20678:20817   */\n      swap1\n      pop\n        /* \"#utility.yul\":20405:20824   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20830:21012   */\n    tag_279:\n        /* \"#utility.yul\":20970:21004   */\n      0x4661696c656420746f207472616e7366657220746f6b656e20746f2075736572\n        /* \"#utility.yul\":20966:20967   */\n      0x00\n        /* \"#utility.yul\":20958:20964   */\n      dup3\n        /* \"#utility.yul\":20954:20968   */\n      add\n        /* \"#utility.yul\":20947:21005   */\n      mstore\n        /* \"#utility.yul\":20830:21012   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21018:21384   */\n    tag_280:\n        /* \"#utility.yul\":21160:21163   */\n      0x00\n        /* \"#utility.yul\":21181:21248   */\n      tag_453\n        /* \"#utility.yul\":21245:21247   */\n      0x20\n        /* \"#utility.yul\":21240:21243   */\n      dup4\n        /* \"#utility.yul\":21181:21248   */\n      tag_245\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":21174:21248   */\n      swap2\n      pop\n        /* \"#utility.yul\":21257:21350   */\n      tag_454\n        /* \"#utility.yul\":21346:21349   */\n      dup3\n        /* \"#utility.yul\":21257:21350   */\n      tag_279\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":21375:21377   */\n      0x20\n        /* \"#utility.yul\":21370:21373   */\n      dup3\n        /* \"#utility.yul\":21366:21378   */\n      add\n        /* \"#utility.yul\":21359:21378   */\n      swap1\n      pop\n        /* \"#utility.yul\":21018:21384   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21390:21809   */\n    tag_210:\n        /* \"#utility.yul\":21556:21560   */\n      0x00\n        /* \"#utility.yul\":21594:21596   */\n      0x20\n        /* \"#utility.yul\":21583:21592   */\n      dup3\n        /* \"#utility.yul\":21579:21597   */\n      add\n        /* \"#utility.yul\":21571:21597   */\n      swap1\n      pop\n        /* \"#utility.yul\":21643:21652   */\n      dup2\n        /* \"#utility.yul\":21637:21641   */\n      dup2\n        /* \"#utility.yul\":21633:21653   */\n      sub\n        /* \"#utility.yul\":21629:21630   */\n      0x00\n        /* \"#utility.yul\":21618:21627   */\n      dup4\n        /* \"#utility.yul\":21614:21631   */\n      add\n        /* \"#utility.yul\":21607:21654   */\n      mstore\n        /* \"#utility.yul\":21671:21802   */\n      tag_456\n        /* \"#utility.yul\":21797:21801   */\n      dup2\n        /* \"#utility.yul\":21671:21802   */\n      tag_280\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":21663:21802   */\n      swap1\n      pop\n        /* \"#utility.yul\":21390:21809   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b58b0a86ed57721144977166b4487e9628c24678ebed5ecf01683f6b8b94f38764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_996": {
									"entryPoint": null,
									"id": 996,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 285,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 478,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1551:8",
										"nodeType": "YulBlock",
										"src": "0:1551:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:81:8",
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nativeSrc": "389:65:8",
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:8",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nativeSrc": "400:54:8",
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nativeSrc": "511:51:8",
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nativeSrc": "521:35:8",
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nativeSrc": "532:24:8",
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:8",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:8",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nativeSrc": "611:79:8",
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:8",
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:8",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:8",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nativeSrc": "670:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nativeSrc": "670:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nativeSrc": "641:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nativeSrc": "631:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nativeSrc": "624:43:8",
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nativeSrc": "621:63:8",
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:8",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nativeSrc": "759:80:8",
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nativeSrc": "769:22:8",
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nativeSrc": "778:13:8",
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nativeSrc": "800:33:8",
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nativeSrc": "800:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:8",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:8",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:8",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nativeSrc": "922:274:8",
													"nodeType": "YulBlock",
													"src": "922:274:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:8",
																"nodeType": "YulBlock",
																"src": "968:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:8"
																			},
																			"nativeSrc": "970:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:8"
																		},
																		"nativeSrc": "970:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:8"
																		},
																		"nativeSrc": "939:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:8",
																		"nodeType": "YulLiteral",
																		"src": "964:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:8"
																},
																"nativeSrc": "935:32:8",
																"nodeType": "YulFunctionCall",
																"src": "935:32:8"
															},
															"nativeSrc": "932:119:8",
															"nodeType": "YulIf",
															"src": "932:119:8"
														},
														{
															"nativeSrc": "1061:128:8",
															"nodeType": "YulBlock",
															"src": "1061:128:8",
															"statements": [
																{
																	"nativeSrc": "1076:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:8"
																				},
																				"nativeSrc": "1147:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:8"
																		},
																		"nativeSrc": "1115:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:8",
														"nodeType": "YulTypedName",
														"src": "892:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:8",
														"nodeType": "YulTypedName",
														"src": "903:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:8",
														"nodeType": "YulTypedName",
														"src": "915:6:8",
														"type": ""
													}
												],
												"src": "845:351:8"
											},
											{
												"body": {
													"nativeSrc": "1267:53:8",
													"nodeType": "YulBlock",
													"src": "1267:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:8"
																		},
																		"nativeSrc": "1289:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:8"
																},
																"nativeSrc": "1277:37:8",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:8"
															},
															"nativeSrc": "1277:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:8",
														"nodeType": "YulTypedName",
														"src": "1255:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:8",
														"nodeType": "YulTypedName",
														"src": "1262:3:8",
														"type": ""
													}
												],
												"src": "1202:118:8"
											},
											{
												"body": {
													"nativeSrc": "1424:124:8",
													"nodeType": "YulBlock",
													"src": "1424:124:8",
													"statements": [
														{
															"nativeSrc": "1434:26:8",
															"nodeType": "YulAssignment",
															"src": "1434:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:8"
																},
																"nativeSrc": "1442:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:8"
																		},
																		"nativeSrc": "1523:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:8"
																},
																"nativeSrc": "1470:71:8",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:8"
															},
															"nativeSrc": "1470:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:8",
														"nodeType": "YulTypedName",
														"src": "1396:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:8",
														"nodeType": "YulTypedName",
														"src": "1408:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:8",
														"nodeType": "YulTypedName",
														"src": "1419:4:8",
														"type": ""
													}
												],
												"src": "1326:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526064600255683635c9adc5dea0000060035569010f0cf064dd592000006004556002600555348015610034575f80fd5b50604051611db2380380611db28339818101604052810190610056919061023c565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c7575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100be9190610276565b60405180910390fd5b6100d68161011d60201b60201c565b508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061028f565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61020b826101e2565b9050919050565b61021b81610201565b8114610225575f80fd5b50565b5f8151905061023681610212565b92915050565b5f60208284031215610251576102506101de565b5b5f61025e84828501610228565b91505092915050565b61027081610201565b82525050565b5f6020820190506102895f830184610267565b92915050565b611b168061029c5f395ff3fe6080604052600436106100f2575f3560e01c80636c11bcd311610089578063cb23284211610058578063cb232842146102d0578063d0febe4c146102fa578063dbb84f1114610318578063f2fde38b14610340576100f2565b80636c11bcd31461022a5780636f9fb98a14610266578063715018a6146102905780638da5cb5b146102a6576100f2565b8063315a095d116100c5578063315a095d1461019a5780633ccfd60b146101c2578063453989b2146101d85780635771520714610200576100f2565b80630a431e52146100f65780631369bfee146101205780631b326fad1461014857806323a1baaa14610170575b5f80fd5b348015610101575f80fd5b5061010a610368565b6040516101179190611009565b60405180910390f35b34801561012b575f80fd5b5061014660048036038101906101419190611050565b61036e565b005b348015610153575f80fd5b5061016e60048036038101906101699190611050565b610380565b005b34801561017b575f80fd5b506101846103a5565b6040516101919190611009565b60405180910390f35b3480156101a5575f80fd5b506101c060048036038101906101bb9190611050565b6103ab565b005b3480156101cd575f80fd5b506101d661059c565b005b3480156101e3575f80fd5b506101fe60048036038101906101f99190611050565b610696565b005b34801561020b575f80fd5b506102146106a8565b6040516102219190611009565b60405180910390f35b348015610235575f80fd5b50610250600480360381019061024b9190611050565b6106ae565b60405161025d9190611009565b60405180910390f35b348015610271575f80fd5b5061027a610a2a565b6040516102879190611009565b60405180910390f35b34801561029b575f80fd5b506102a4610a31565b005b3480156102b1575f80fd5b506102ba610a44565b6040516102c791906110ba565b60405180910390f35b3480156102db575f80fd5b506102e4610a6b565b6040516102f19190611009565b60405180910390f35b610302610a71565b60405161030f9190611009565b60405180910390f35b348015610323575f80fd5b5061033e60048036038101906103399190611050565b610df9565b005b34801561034b575f80fd5b50610366600480360381019061036191906110fd565b610e1e565b005b60055481565b610376610ea2565b8060058190555050565b610388610ea2565b670de0b6b3a76400008161039c9190611155565b60038190555050565b60045481565b6103b3610ea2565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161040e91906110ba565b602060405180830381865afa158015610429573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061044d91906111aa565b9050670de0b6b3a7640000826104639190611155565b8110156104a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049c90611255565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33670de0b6b3a7640000866104f89190611155565b6040518363ffffffff1660e01b8152600401610515929190611273565b6020604051808303815f875af1158015610531573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061055591906112cf565b905080610597576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058e9061136a565b60405180910390fd5b505050565b6105a4610ea2565b5f4790505f81116105ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e1906113f8565b60405180910390fd5b5f3373ffffffffffffffffffffffffffffffffffffffff168260405161060f90611443565b5f6040518083038185875af1925050503d805f8114610649576040519150601f19603f3d011682016040523d82523d5f602084013e61064e565b606091505b5050905080610692576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610689906114c7565b60405180910390fd5b5050565b61069e610ea2565b8060028190555050565b60035481565b5f670de0b6b3a7640000826106c39190611155565b91505f8211610707576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fe9061152f565b60405180910390fd5b8160015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161076291906110ba565b602060405180830381865afa15801561077d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107a191906111aa565b10156107e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d990611597565b60405180910390fd5b5f60025460646107f29190611155565b600554606461080191906115b5565b8461080c9190611155565b6108169190611615565b90508047101561085b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610852906116b5565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016108ba939291906116d3565b6020604051808303815f875af11580156108d6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108fa91906112cf565b90508061093c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093390611778565b60405180910390fd5b5f3373ffffffffffffffffffffffffffffffffffffffff168360405161096190611443565b5f6040518083038185875af1925050503d805f811461099b576040519150601f19603f3d011682016040523d82523d5f602084013e6109a0565b606091505b50509050806109e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109db906117e0565b60405180910390fd5b7fa24838acd4af5195a2396965dae5abf54e84e8c19f5698bb966ae64e29994ee5338685604051610a17939291906117fe565b60405180910390a1829350505050919050565b5f47905090565b610a39610ea2565b610a425f610f29565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b5f803411610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aab9061187d565b60405180910390fd5b5f60025434610ac39190611155565b9050600354811115610b0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b019061190b565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b6591906110ba565b602060405180830381865afa158015610b80573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ba491906111aa565b905081811015610be9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be090611999565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610c4491906110ba565b602060405180830381865afa158015610c5f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c8391906111aa565b90506004548382610c9491906119b7565b1115610cd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccc90611a5a565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610d32929190611273565b6020604051808303815f875af1158015610d4e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d7291906112cf565b905080610db4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dab90611ac2565b60405180910390fd5b7f0a37b72bb67eee30e09084cf386f8a17817c57f620c3ab95fb25d6a20356ec77333486604051610de7939291906117fe565b60405180910390a18394505050505090565b610e01610ea2565b670de0b6b3a764000081610e159190611155565b60048190555050565b610e26610ea2565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e96575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e8d91906110ba565b60405180910390fd5b610e9f81610f29565b50565b610eaa610fea565b73ffffffffffffffffffffffffffffffffffffffff16610ec8610a44565b73ffffffffffffffffffffffffffffffffffffffff1614610f2757610eeb610fea565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f1e91906110ba565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f819050919050565b61100381610ff1565b82525050565b5f60208201905061101c5f830184610ffa565b92915050565b5f80fd5b61102f81610ff1565b8114611039575f80fd5b50565b5f8135905061104a81611026565b92915050565b5f6020828403121561106557611064611022565b5b5f6110728482850161103c565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110a48261107b565b9050919050565b6110b48161109a565b82525050565b5f6020820190506110cd5f8301846110ab565b92915050565b6110dc8161109a565b81146110e6575f80fd5b50565b5f813590506110f7816110d3565b92915050565b5f6020828403121561111257611111611022565b5b5f61111f848285016110e9565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61115f82610ff1565b915061116a83610ff1565b925082820261117881610ff1565b9150828204841483151761118f5761118e611128565b5b5092915050565b5f815190506111a481611026565b92915050565b5f602082840312156111bf576111be611022565b5b5f6111cc84828501611196565b91505092915050565b5f82825260208201905092915050565b7f56656e646f7220636f6e747261637420686173206e6f7420656e6f75676820745f8201527f6f6b656e7320746f207769746864726177000000000000000000000000000000602082015250565b5f61123f6031836111d5565b915061124a826111e5565b604082019050919050565b5f6020820190508181035f83015261126c81611233565b9050919050565b5f6040820190506112865f8301856110ab565b6112936020830184610ffa565b9392505050565b5f8115159050919050565b6112ae8161129a565b81146112b8575f80fd5b50565b5f815190506112c9816112a5565b92915050565b5f602082840312156112e4576112e3611022565b5b5f6112f1848285016112bb565b91505092915050565b7f4661696c656420746f207472616e7366657220746f6b656e7320746f207468655f8201527f206f776e65720000000000000000000000000000000000000000000000000000602082015250565b5f6113546026836111d5565b915061135f826112fa565b604082019050919050565b5f6020820190508181035f83015261138181611348565b9050919050565b7f4f776e657220686173206e6f742062616c616e636520746f20776974686472615f8201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b5f6113e26021836111d5565b91506113ed82611388565b604082019050919050565b5f6020820190508181035f83015261140f816113d6565b9050919050565b5f81905092915050565b50565b5f61142e5f83611416565b915061143982611420565b5f82019050919050565b5f61144d82611423565b9150819050919050565b7f4661696c656420746f2073656e6420757365722062616c616e6365206261636b5f8201527f20746f20746865206f776e657200000000000000000000000000000000000000602082015250565b5f6114b1602d836111d5565b91506114bc82611457565b604082019050919050565b5f6020820190508181035f8301526114de816114a5565b9050919050565b7f5370656369667920616d6f756e74206f6620746f6b656e7320746f2073656c6c5f82015250565b5f6115196020836111d5565b9150611524826114e5565b602082019050919050565b5f6020820190508181035f8301526115468161150d565b9050919050565b7f496e73756666696369656e7420746f6b656e2062616c616e63650000000000005f82015250565b5f611581601a836111d5565b915061158c8261154d565b602082019050919050565b5f6020820190508181035f8301526115ae81611575565b9050919050565b5f6115bf82610ff1565b91506115ca83610ff1565b92508282039050818111156115e2576115e1611128565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61161f82610ff1565b915061162a83610ff1565b92508261163a576116396115e8565b5b828204905092915050565b7f496e73756666696369656e7420436f696e2062616c616e636520696e20636f6e5f8201527f7472616374000000000000000000000000000000000000000000000000000000602082015250565b5f61169f6025836111d5565b91506116aa82611645565b604082019050919050565b5f6020820190508181035f8301526116cc81611693565b9050919050565b5f6060820190506116e65f8301866110ab565b6116f360208301856110ab565b6117006040830184610ffa565b949350505050565b7f4661696c656420746f207472616e7366657220746f6b656e20746f20636f6e745f8201527f7261637400000000000000000000000000000000000000000000000000000000602082015250565b5f6117626024836111d5565b915061176d82611708565b604082019050919050565b5f6020820190508181035f83015261178f81611756565b9050919050565b7f4661696c656420746f2073656e6420436f696e20746f207573657200000000005f82015250565b5f6117ca601b836111d5565b91506117d582611796565b602082019050919050565b5f6020820190508181035f8301526117f7816117be565b9050919050565b5f6060820190506118115f8301866110ab565b61181e6020830185610ffa565b61182b6040830184610ffa565b949350505050565b7f53656e6420436f696e20746f2062757920736f6d6520746f6b656e73000000005f82015250565b5f611867601c836111d5565b915061187282611833565b602082019050919050565b5f6020820190508181035f8301526118948161185b565b9050919050565b7f45786365656473206d6178696d756d20746f6b656e73207065722070757263685f8201527f6173650000000000000000000000000000000000000000000000000000000000602082015250565b5f6118f56023836111d5565b91506119008261189b565b604082019050919050565b5f6020820190508181035f830152611922816118e9565b9050919050565b7f56656e646f7220636f6e747261637420686173206e6f7420656e6f75676820745f8201527f6f6b656e7320696e206974732062616c616e6365000000000000000000000000602082015250565b5f6119836034836111d5565b915061198e82611929565b604082019050919050565b5f6020820190508181035f8301526119b081611977565b9050919050565b5f6119c182610ff1565b91506119cc83610ff1565b92508282019050808211156119e4576119e3611128565b5b92915050565b7f45786365656473206d6178696d756d20746f6b656e73207065722061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f611a446022836111d5565b9150611a4f826119ea565b604082019050919050565b5f6020820190508181035f830152611a7181611a38565b9050919050565b7f4661696c656420746f207472616e7366657220746f6b656e20746f20757365725f82015250565b5f611aac6020836111d5565b9150611ab782611a78565b602082019050919050565b5f6020820190508181035f830152611ad981611aa0565b905091905056fea2646970667358221220b58b0a86ed57721144977166b4487e9628c24678ebed5ecf01683f6b8b94f38764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x2 SSTORE PUSH9 0x3635C9ADC5DEA00000 PUSH1 0x3 SSTORE PUSH10 0x10F0CF064DD59200000 PUSH1 0x4 SSTORE PUSH1 0x2 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1DB2 CODESIZE SUB DUP1 PUSH2 0x1DB2 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x56 SWAP2 SWAP1 PUSH2 0x23C JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD6 DUP2 PUSH2 0x11D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x28F JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20B DUP3 PUSH2 0x1E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21B DUP2 PUSH2 0x201 JUMP JUMPDEST DUP2 EQ PUSH2 0x225 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x236 DUP2 PUSH2 0x212 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x251 JUMPI PUSH2 0x250 PUSH2 0x1DE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25E DUP5 DUP3 DUP6 ADD PUSH2 0x228 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x270 DUP2 PUSH2 0x201 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x289 PUSH0 DUP4 ADD DUP5 PUSH2 0x267 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B16 DUP1 PUSH2 0x29C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C11BCD3 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xCB232842 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xCB232842 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xDBB84F11 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x340 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x6C11BCD3 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A6 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x315A095D GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x315A095D EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x453989B2 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x57715207 EQ PUSH2 0x200 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0xA431E52 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x1369BFEE EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x1B326FAD EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x23A1BAAA EQ PUSH2 0x170 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x368 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x36E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x153 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x380 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x59C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x696 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A4 PUSH2 0xA31 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BA PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E4 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0xDF9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x10FD JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x376 PUSH2 0xEA2 JUMP JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x388 PUSH2 0xEA2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3B3 PUSH2 0xEA2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x429 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49C SWAP1 PUSH2 0x1255 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP3 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x531 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x555 SWAP2 SWAP1 PUSH2 0x12CF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58E SWAP1 PUSH2 0x136A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5A4 PUSH2 0xEA2 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E1 SWAP1 PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x60F SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x64E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x692 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x689 SWAP1 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x69E PUSH2 0xEA2 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x6C3 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 GT PUSH2 0x707 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x152F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x762 SWAP2 SWAP1 PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x77D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A1 SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST LT ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D9 SWAP1 PUSH2 0x1597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 SLOAD PUSH1 0x64 PUSH2 0x7F2 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x64 PUSH2 0x801 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST DUP5 PUSH2 0x80C SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH2 0x816 SWAP2 SWAP1 PUSH2 0x1615 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x85B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x852 SWAP1 PUSH2 0x16B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16D3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8D6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8FA SWAP2 SWAP1 PUSH2 0x12CF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x93C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x933 SWAP1 PUSH2 0x1778 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x961 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x99B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x9E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DB SWAP1 PUSH2 0x17E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xA24838ACD4AF5195A2396965DAE5ABF54E84E8C19F5698BB966AE64E29994EE5 CALLER DUP7 DUP6 PUSH1 0x40 MLOAD PUSH2 0xA17 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP3 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA39 PUSH2 0xEA2 JUMP JUMPDEST PUSH2 0xA42 PUSH0 PUSH2 0xF29 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 CALLVALUE GT PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAB SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 SLOAD CALLVALUE PUSH2 0xAC3 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0xB0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB01 SWAP1 PUSH2 0x190B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB65 SWAP2 SWAP1 PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB80 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA4 SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xBE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE0 SWAP1 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC44 SWAP2 SWAP1 PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC5F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC83 SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST SWAP1 POP PUSH1 0x4 SLOAD DUP4 DUP3 PUSH2 0xC94 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST GT ISZERO PUSH2 0xCD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCC SWAP1 PUSH2 0x1A5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD32 SWAP3 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD4E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD72 SWAP2 SWAP1 PUSH2 0x12CF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xDB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAB SWAP1 PUSH2 0x1AC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xA37B72BB67EEE30E09084CF386F8A17817C57F620C3AB95FB25D6A20356EC77 CALLER CALLVALUE DUP7 PUSH1 0x40 MLOAD PUSH2 0xDE7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP4 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xE01 PUSH2 0xEA2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0xE15 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xE26 PUSH2 0xEA2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE96 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8D SWAP2 SWAP1 PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE9F DUP2 PUSH2 0xF29 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xEAA PUSH2 0xFEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEC8 PUSH2 0xA44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF27 JUMPI PUSH2 0xEEB PUSH2 0xFEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1E SWAP2 SWAP1 PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1003 DUP2 PUSH2 0xFF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x101C PUSH0 DUP4 ADD DUP5 PUSH2 0xFFA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x102F DUP2 PUSH2 0xFF1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1039 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x104A DUP2 PUSH2 0x1026 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1065 JUMPI PUSH2 0x1064 PUSH2 0x1022 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1072 DUP5 DUP3 DUP6 ADD PUSH2 0x103C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10A4 DUP3 PUSH2 0x107B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B4 DUP2 PUSH2 0x109A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10CD PUSH0 DUP4 ADD DUP5 PUSH2 0x10AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10DC DUP2 PUSH2 0x109A JUMP JUMPDEST DUP2 EQ PUSH2 0x10E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10F7 DUP2 PUSH2 0x10D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1112 JUMPI PUSH2 0x1111 PUSH2 0x1022 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x111F DUP5 DUP3 DUP6 ADD PUSH2 0x10E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x115F DUP3 PUSH2 0xFF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x116A DUP4 PUSH2 0xFF1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1178 DUP2 PUSH2 0xFF1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x118F JUMPI PUSH2 0x118E PUSH2 0x1128 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x11A4 DUP2 PUSH2 0x1026 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11BF JUMPI PUSH2 0x11BE PUSH2 0x1022 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11CC DUP5 DUP3 DUP6 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x56656E646F7220636F6E747261637420686173206E6F7420656E6F7567682074 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6B656E7320746F207769746864726177000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x123F PUSH1 0x31 DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x124A DUP3 PUSH2 0x11E5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x126C DUP2 PUSH2 0x1233 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1286 PUSH0 DUP4 ADD DUP6 PUSH2 0x10AB JUMP JUMPDEST PUSH2 0x1293 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFFA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12AE DUP2 PUSH2 0x129A JUMP JUMPDEST DUP2 EQ PUSH2 0x12B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x12C9 DUP2 PUSH2 0x12A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E4 JUMPI PUSH2 0x12E3 PUSH2 0x1022 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12F1 DUP5 DUP3 DUP6 ADD PUSH2 0x12BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207472616E7366657220746F6B656E7320746F20746865 PUSH0 DUP3 ADD MSTORE PUSH32 0x206F776E65720000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1354 PUSH1 0x26 DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x135F DUP3 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1381 DUP2 PUSH2 0x1348 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E657220686173206E6F742062616C616E636520746F2077697468647261 PUSH0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13E2 PUSH1 0x21 DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x13ED DUP3 PUSH2 0x1388 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x140F DUP2 PUSH2 0x13D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x142E PUSH0 DUP4 PUSH2 0x1416 JUMP JUMPDEST SWAP2 POP PUSH2 0x1439 DUP3 PUSH2 0x1420 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x144D DUP3 PUSH2 0x1423 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E6420757365722062616C616E6365206261636B PUSH0 DUP3 ADD MSTORE PUSH32 0x20746F20746865206F776E657200000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14B1 PUSH1 0x2D DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x14BC DUP3 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14DE DUP2 PUSH2 0x14A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5370656369667920616D6F756E74206F6620746F6B656E7320746F2073656C6C PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1519 PUSH1 0x20 DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1524 DUP3 PUSH2 0x14E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1546 DUP2 PUSH2 0x150D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E6365000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1581 PUSH1 0x1A DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x158C DUP3 PUSH2 0x154D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15AE DUP2 PUSH2 0x1575 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15BF DUP3 PUSH2 0xFF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x15CA DUP4 PUSH2 0xFF1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x15E2 JUMPI PUSH2 0x15E1 PUSH2 0x1128 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x161F DUP3 PUSH2 0xFF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x162A DUP4 PUSH2 0xFF1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x163A JUMPI PUSH2 0x1639 PUSH2 0x15E8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420436F696E2062616C616E636520696E20636F6E PUSH0 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x169F PUSH1 0x25 DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x16AA DUP3 PUSH2 0x1645 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16CC DUP2 PUSH2 0x1693 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x16E6 PUSH0 DUP4 ADD DUP7 PUSH2 0x10AB JUMP JUMPDEST PUSH2 0x16F3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10AB JUMP JUMPDEST PUSH2 0x1700 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFFA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207472616E7366657220746F6B656E20746F20636F6E74 PUSH0 DUP3 ADD MSTORE PUSH32 0x7261637400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1762 PUSH1 0x24 DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x176D DUP3 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x178F DUP2 PUSH2 0x1756 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E6420436F696E20746F20757365720000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17CA PUSH1 0x1B DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x17D5 DUP3 PUSH2 0x1796 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17F7 DUP2 PUSH2 0x17BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1811 PUSH0 DUP4 ADD DUP7 PUSH2 0x10AB JUMP JUMPDEST PUSH2 0x181E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFFA JUMP JUMPDEST PUSH2 0x182B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFFA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x53656E6420436F696E20746F2062757920736F6D6520746F6B656E7300000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1867 PUSH1 0x1C DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1872 DUP3 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1894 DUP2 PUSH2 0x185B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178696D756D20746F6B656E7320706572207075726368 PUSH0 DUP3 ADD MSTORE PUSH32 0x6173650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18F5 PUSH1 0x23 DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1900 DUP3 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1922 DUP2 PUSH2 0x18E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56656E646F7220636F6E747261637420686173206E6F7420656E6F7567682074 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6B656E7320696E206974732062616C616E6365000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1983 PUSH1 0x34 DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x198E DUP3 PUSH2 0x1929 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19B0 DUP2 PUSH2 0x1977 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19C1 DUP3 PUSH2 0xFF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x19CC DUP4 PUSH2 0xFF1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x19E4 JUMPI PUSH2 0x19E3 PUSH2 0x1128 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178696D756D20746F6B656E7320706572206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A44 PUSH1 0x22 DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4F DUP3 PUSH2 0x19EA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A71 DUP2 PUSH2 0x1A38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207472616E7366657220746F6B656E20746F2075736572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AAC PUSH1 0x20 DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB7 DUP3 PUSH2 0x1A78 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AD9 DUP2 PUSH2 0x1AA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 DUP12 EXP DUP7 0xED JUMPI PUSH19 0x1144977166B4487E9628C24678EBED5ECF0168 EXTCODEHASH PUSH12 0x8B94F38764736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "147:3802:6:-:0;;;252:3;221:34;;300:14;262:52;;405:15;368:52;;511:1;474:38;;706:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;748:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;799:12:6::1;771;;:41;;;;;;;;;;;;;;;;;;706:114:::0;147:3802;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;147:3802:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 3746,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 4074,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 3881,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyTokens_1152": {
									"entryPoint": 2673,
									"id": 1152,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getContractBalance_1066": {
									"entryPoint": 2602,
									"id": 1066,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@maxTokensPerAddress_961": {
									"entryPoint": 933,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxTokensPerPurchase_953": {
									"entryPoint": 1704,
									"id": 953,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 2628,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2609,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellDiscountPercent_964": {
									"entryPoint": 872,
									"id": 964,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellTokens_1255": {
									"entryPoint": 1710,
									"id": 1255,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setMaxTokensPerAddress_1042": {
									"entryPoint": 3577,
									"id": 1042,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMaxTokensPerPurchase_1025": {
									"entryPoint": 896,
									"id": 1025,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSellDiscountPercent_1054": {
									"entryPoint": 878,
									"id": 1054,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTokensPerCoin_1008": {
									"entryPoint": 1686,
									"id": 1008,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tokensPerCoin_945": {
									"entryPoint": 2667,
									"id": 945,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3614,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawTokens_1340": {
									"entryPoint": 939,
									"id": 1340,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1291": {
									"entryPoint": 1436,
									"id": 1291,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0423aa1eee4f0a53ec9ada5463242621bb79b11b092fc933afd96176da84d685_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5c0b16933219a11e126acac4bdc517d3b683c9ecefce62e995b71ef7d2bce23b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_67f2e659058ef888541c8c99ecc7f16c7718ac8cd22dc7327ffb45028052372f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_777dbadb3df903f1fcc5211d7b6eb6190bc70fecfae0faab0b322a8f9af4f0eb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8f0f6f6f3a705f803e66a028235bd6580e0294fb768d8213f67a27249c5bb7b5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_94fe289ce449ee5120ac248b9ed2219226b7a1bc207fe3b8256adbd886108043_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a2d8682ef54860c1ef3cd46fa53d91bbbf858d0baf98ddfcb7a9b09f0394a5c6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a3c239de946079d2d0118e3c5cd67afef89696a15aebde596059fa4a511c966c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b74ddd97d67f1c1431d609f8321e1007c3c10e04f4b6ab7f03cb3c358aae04a9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ba7ff9bdfaf761c37e9c731eecdaca20fa9dd014fad94a489dcf802907a23131_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bd94085211bc56519ad77c66936b2e9317d42596b4c6cc457eca1e820b3c66a5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ccebbaa4e3f31f90a91c12c4cfe9a07663574616db39774c30bc82381a7d7e78_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e2144b0476a7562194fa6b400c34b53ef7696dbbbad349dc4312e34d3f08dfe4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5843,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4723,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6142,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0423aa1eee4f0a53ec9ada5463242621bb79b11b092fc933afd96176da84d685__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5c0b16933219a11e126acac4bdc517d3b683c9ecefce62e995b71ef7d2bce23b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67f2e659058ef888541c8c99ecc7f16c7718ac8cd22dc7327ffb45028052372f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_777dbadb3df903f1fcc5211d7b6eb6190bc70fecfae0faab0b322a8f9af4f0eb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8f0f6f6f3a705f803e66a028235bd6580e0294fb768d8213f67a27249c5bb7b5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_94fe289ce449ee5120ac248b9ed2219226b7a1bc207fe3b8256adbd886108043__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d8682ef54860c1ef3cd46fa53d91bbbf858d0baf98ddfcb7a9b09f0394a5c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a3c239de946079d2d0118e3c5cd67afef89696a15aebde596059fa4a511c966c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b74ddd97d67f1c1431d609f8321e1007c3c10e04f4b6ab7f03cb3c358aae04a9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ba7ff9bdfaf761c37e9c731eecdaca20fa9dd014fad94a489dcf802907a23131__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bd94085211bc56519ad77c66936b2e9317d42596b4c6cc457eca1e820b3c66a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ccebbaa4e3f31f90a91c12c4cfe9a07663574616db39774c30bc82381a7d7e78__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e2144b0476a7562194fa6b400c34b53ef7696dbbbad349dc4312e34d3f08dfe4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4392,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5608,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4130,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0423aa1eee4f0a53ec9ada5463242621bb79b11b092fc933afd96176da84d685": {
									"entryPoint": 6299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5c0b16933219a11e126acac4bdc517d3b683c9ecefce62e995b71ef7d2bce23b": {
									"entryPoint": 5701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_67f2e659058ef888541c8c99ecc7f16c7718ac8cd22dc7327ffb45028052372f": {
									"entryPoint": 5896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_777dbadb3df903f1fcc5211d7b6eb6190bc70fecfae0faab0b322a8f9af4f0eb": {
									"entryPoint": 6441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8f0f6f6f3a705f803e66a028235bd6580e0294fb768d8213f67a27249c5bb7b5": {
									"entryPoint": 6195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_94fe289ce449ee5120ac248b9ed2219226b7a1bc207fe3b8256adbd886108043": {
									"entryPoint": 6038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a2d8682ef54860c1ef3cd46fa53d91bbbf858d0baf98ddfcb7a9b09f0394a5c6": {
									"entryPoint": 4581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a3c239de946079d2d0118e3c5cd67afef89696a15aebde596059fa4a511c966c": {
									"entryPoint": 5349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192": {
									"entryPoint": 5453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b74ddd97d67f1c1431d609f8321e1007c3c10e04f4b6ab7f03cb3c358aae04a9": {
									"entryPoint": 6634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ba7ff9bdfaf761c37e9c731eecdaca20fa9dd014fad94a489dcf802907a23131": {
									"entryPoint": 4858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bd94085211bc56519ad77c66936b2e9317d42596b4c6cc457eca1e820b3c66a5": {
									"entryPoint": 5207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 5152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ccebbaa4e3f31f90a91c12c4cfe9a07663574616db39774c30bc82381a7d7e78": {
									"entryPoint": 5000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e2144b0476a7562194fa6b400c34b53ef7696dbbbad349dc4312e34d3f08dfe4": {
									"entryPoint": 6776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21812:8",
										"nodeType": "YulBlock",
										"src": "0:21812:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:8",
													"nodeType": "YulBlock",
													"src": "52:32:8",
													"statements": [
														{
															"nativeSrc": "62:16:8",
															"nodeType": "YulAssignment",
															"src": "62:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:8",
																"nodeType": "YulIdentifier",
																"src": "73:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:8",
														"nodeType": "YulTypedName",
														"src": "34:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:8",
														"nodeType": "YulTypedName",
														"src": "44:7:8",
														"type": ""
													}
												],
												"src": "7:77:8"
											},
											{
												"body": {
													"nativeSrc": "155:53:8",
													"nodeType": "YulBlock",
													"src": "155:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:8"
																		},
																		"nativeSrc": "177:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:8"
																},
																"nativeSrc": "165:37:8",
																"nodeType": "YulFunctionCall",
																"src": "165:37:8"
															},
															"nativeSrc": "165:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:8",
														"nodeType": "YulTypedName",
														"src": "143:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:8",
														"nodeType": "YulTypedName",
														"src": "150:3:8",
														"type": ""
													}
												],
												"src": "90:118:8"
											},
											{
												"body": {
													"nativeSrc": "312:124:8",
													"nodeType": "YulBlock",
													"src": "312:124:8",
													"statements": [
														{
															"nativeSrc": "322:26:8",
															"nodeType": "YulAssignment",
															"src": "322:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:8",
																		"nodeType": "YulLiteral",
																		"src": "345:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:8"
																},
																"nativeSrc": "330:18:8",
																"nodeType": "YulFunctionCall",
																"src": "330:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:8",
																				"nodeType": "YulLiteral",
																				"src": "426:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:8"
																		},
																		"nativeSrc": "411:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:8"
																},
																"nativeSrc": "358:71:8",
																"nodeType": "YulFunctionCall",
																"src": "358:71:8"
															},
															"nativeSrc": "358:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:8",
														"nodeType": "YulTypedName",
														"src": "284:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:8",
														"nodeType": "YulTypedName",
														"src": "296:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:8",
														"nodeType": "YulTypedName",
														"src": "307:4:8",
														"type": ""
													}
												],
												"src": "214:222:8"
											},
											{
												"body": {
													"nativeSrc": "482:35:8",
													"nodeType": "YulBlock",
													"src": "482:35:8",
													"statements": [
														{
															"nativeSrc": "492:19:8",
															"nodeType": "YulAssignment",
															"src": "492:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:8",
																		"nodeType": "YulLiteral",
																		"src": "508:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:8"
																},
																"nativeSrc": "502:9:8",
																"nodeType": "YulFunctionCall",
																"src": "502:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:8",
														"nodeType": "YulTypedName",
														"src": "475:6:8",
														"type": ""
													}
												],
												"src": "442:75:8"
											},
											{
												"body": {
													"nativeSrc": "612:28:8",
													"nodeType": "YulBlock",
													"src": "612:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:8",
																		"nodeType": "YulLiteral",
																		"src": "629:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:8",
																		"nodeType": "YulLiteral",
																		"src": "632:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:8"
																},
																"nativeSrc": "622:12:8",
																"nodeType": "YulFunctionCall",
																"src": "622:12:8"
															},
															"nativeSrc": "622:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:8"
											},
											{
												"body": {
													"nativeSrc": "735:28:8",
													"nodeType": "YulBlock",
													"src": "735:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:8",
																		"nodeType": "YulLiteral",
																		"src": "752:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:8",
																		"nodeType": "YulLiteral",
																		"src": "755:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:8"
																},
																"nativeSrc": "745:12:8",
																"nodeType": "YulFunctionCall",
																"src": "745:12:8"
															},
															"nativeSrc": "745:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:8"
											},
											{
												"body": {
													"nativeSrc": "812:79:8",
													"nodeType": "YulBlock",
													"src": "812:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:16:8",
																"nodeType": "YulBlock",
																"src": "869:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "878:1:8",
																					"nodeType": "YulLiteral",
																					"src": "878:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "881:1:8",
																					"nodeType": "YulLiteral",
																					"src": "881:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "871:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:8"
																			},
																			"nativeSrc": "871:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:8"
																		},
																		"nativeSrc": "871:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "835:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "860:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "842:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:8"
																				},
																				"nativeSrc": "842:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "832:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:8"
																		},
																		"nativeSrc": "832:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "825:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:8"
																},
																"nativeSrc": "825:43:8",
																"nodeType": "YulFunctionCall",
																"src": "825:43:8"
															},
															"nativeSrc": "822:63:8",
															"nodeType": "YulIf",
															"src": "822:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "769:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "805:5:8",
														"nodeType": "YulTypedName",
														"src": "805:5:8",
														"type": ""
													}
												],
												"src": "769:122:8"
											},
											{
												"body": {
													"nativeSrc": "949:87:8",
													"nodeType": "YulBlock",
													"src": "949:87:8",
													"statements": [
														{
															"nativeSrc": "959:29:8",
															"nodeType": "YulAssignment",
															"src": "959:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "981:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "968:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:8"
																},
																"nativeSrc": "968:20:8",
																"nodeType": "YulFunctionCall",
																"src": "968:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "959:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "997:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:8"
																},
																"nativeSrc": "997:33:8",
																"nodeType": "YulFunctionCall",
																"src": "997:33:8"
															},
															"nativeSrc": "997:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "997:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "897:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "927:6:8",
														"nodeType": "YulTypedName",
														"src": "927:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "935:3:8",
														"nodeType": "YulTypedName",
														"src": "935:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "943:5:8",
														"nodeType": "YulTypedName",
														"src": "943:5:8",
														"type": ""
													}
												],
												"src": "897:139:8"
											},
											{
												"body": {
													"nativeSrc": "1108:263:8",
													"nodeType": "YulBlock",
													"src": "1108:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:8",
																"nodeType": "YulBlock",
																"src": "1154:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:8"
																			},
																			"nativeSrc": "1156:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:8"
																		},
																		"nativeSrc": "1156:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:8"
																		},
																		"nativeSrc": "1125:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:8"
																},
																"nativeSrc": "1121:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:8"
															},
															"nativeSrc": "1118:119:8",
															"nodeType": "YulIf",
															"src": "1118:119:8"
														},
														{
															"nativeSrc": "1247:117:8",
															"nodeType": "YulBlock",
															"src": "1247:117:8",
															"statements": [
																{
																	"nativeSrc": "1262:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:63:8",
																	"nodeType": "YulAssignment",
																	"src": "1291:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1326:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1337:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1322:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:8"
																				},
																				"nativeSrc": "1322:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1346:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1301:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:8"
																		},
																		"nativeSrc": "1301:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1042:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:8",
														"nodeType": "YulTypedName",
														"src": "1078:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:8",
														"nodeType": "YulTypedName",
														"src": "1089:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:8",
														"nodeType": "YulTypedName",
														"src": "1101:6:8",
														"type": ""
													}
												],
												"src": "1042:329:8"
											},
											{
												"body": {
													"nativeSrc": "1422:81:8",
													"nodeType": "YulBlock",
													"src": "1422:81:8",
													"statements": [
														{
															"nativeSrc": "1432:65:8",
															"nodeType": "YulAssignment",
															"src": "1432:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1447:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1443:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:8"
																},
																"nativeSrc": "1443:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1443:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1432:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1377:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1404:5:8",
														"nodeType": "YulTypedName",
														"src": "1404:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1414:7:8",
														"nodeType": "YulTypedName",
														"src": "1414:7:8",
														"type": ""
													}
												],
												"src": "1377:126:8"
											},
											{
												"body": {
													"nativeSrc": "1554:51:8",
													"nodeType": "YulBlock",
													"src": "1554:51:8",
													"statements": [
														{
															"nativeSrc": "1564:35:8",
															"nodeType": "YulAssignment",
															"src": "1564:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1593:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1575:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:8"
																},
																"nativeSrc": "1575:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1575:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1564:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1509:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1536:5:8",
														"nodeType": "YulTypedName",
														"src": "1536:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1546:7:8",
														"nodeType": "YulTypedName",
														"src": "1546:7:8",
														"type": ""
													}
												],
												"src": "1509:96:8"
											},
											{
												"body": {
													"nativeSrc": "1676:53:8",
													"nodeType": "YulBlock",
													"src": "1676:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1693:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1716:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1698:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:8"
																		},
																		"nativeSrc": "1698:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1686:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:8"
																},
																"nativeSrc": "1686:37:8",
																"nodeType": "YulFunctionCall",
																"src": "1686:37:8"
															},
															"nativeSrc": "1686:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1611:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1664:5:8",
														"nodeType": "YulTypedName",
														"src": "1664:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1671:3:8",
														"nodeType": "YulTypedName",
														"src": "1671:3:8",
														"type": ""
													}
												],
												"src": "1611:118:8"
											},
											{
												"body": {
													"nativeSrc": "1833:124:8",
													"nodeType": "YulBlock",
													"src": "1833:124:8",
													"statements": [
														{
															"nativeSrc": "1843:26:8",
															"nodeType": "YulAssignment",
															"src": "1843:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1855:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1866:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1851:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:8"
																},
																"nativeSrc": "1851:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1851:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1843:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1923:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1936:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1947:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1932:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:8"
																		},
																		"nativeSrc": "1932:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1879:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:8"
																},
																"nativeSrc": "1879:71:8",
																"nodeType": "YulFunctionCall",
																"src": "1879:71:8"
															},
															"nativeSrc": "1879:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1735:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1805:9:8",
														"nodeType": "YulTypedName",
														"src": "1805:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1817:6:8",
														"nodeType": "YulTypedName",
														"src": "1817:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1828:4:8",
														"nodeType": "YulTypedName",
														"src": "1828:4:8",
														"type": ""
													}
												],
												"src": "1735:222:8"
											},
											{
												"body": {
													"nativeSrc": "2006:79:8",
													"nodeType": "YulBlock",
													"src": "2006:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2063:16:8",
																"nodeType": "YulBlock",
																"src": "2063:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2072:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2072:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2075:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2075:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2065:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2065:6:8"
																			},
																			"nativeSrc": "2065:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2065:12:8"
																		},
																		"nativeSrc": "2065:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2065:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2029:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2029:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2054:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2054:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2036:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2036:17:8"
																				},
																				"nativeSrc": "2036:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2036:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2026:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2026:2:8"
																		},
																		"nativeSrc": "2026:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2026:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2019:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:8"
																},
																"nativeSrc": "2019:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2019:43:8"
															},
															"nativeSrc": "2016:63:8",
															"nodeType": "YulIf",
															"src": "2016:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1963:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1999:5:8",
														"nodeType": "YulTypedName",
														"src": "1999:5:8",
														"type": ""
													}
												],
												"src": "1963:122:8"
											},
											{
												"body": {
													"nativeSrc": "2143:87:8",
													"nodeType": "YulBlock",
													"src": "2143:87:8",
													"statements": [
														{
															"nativeSrc": "2153:29:8",
															"nodeType": "YulAssignment",
															"src": "2153:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2175:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2175:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2162:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2162:12:8"
																},
																"nativeSrc": "2162:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2162:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2153:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2153:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2218:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2218:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2191:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2191:26:8"
																},
																"nativeSrc": "2191:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2191:33:8"
															},
															"nativeSrc": "2191:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2191:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2091:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2121:6:8",
														"nodeType": "YulTypedName",
														"src": "2121:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2129:3:8",
														"nodeType": "YulTypedName",
														"src": "2129:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2137:5:8",
														"nodeType": "YulTypedName",
														"src": "2137:5:8",
														"type": ""
													}
												],
												"src": "2091:139:8"
											},
											{
												"body": {
													"nativeSrc": "2302:263:8",
													"nodeType": "YulBlock",
													"src": "2302:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2348:83:8",
																"nodeType": "YulBlock",
																"src": "2348:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2350:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2350:77:8"
																			},
																			"nativeSrc": "2350:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2350:79:8"
																		},
																		"nativeSrc": "2350:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2350:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2323:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2323:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2332:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2332:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2319:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2319:3:8"
																		},
																		"nativeSrc": "2319:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2319:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2344:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2344:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2315:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2315:3:8"
																},
																"nativeSrc": "2315:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2315:32:8"
															},
															"nativeSrc": "2312:119:8",
															"nodeType": "YulIf",
															"src": "2312:119:8"
														},
														{
															"nativeSrc": "2441:117:8",
															"nodeType": "YulBlock",
															"src": "2441:117:8",
															"statements": [
																{
																	"nativeSrc": "2456:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2456:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2470:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2470:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2460:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2460:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2485:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2485:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2520:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2520:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2531:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2531:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2516:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2516:3:8"
																				},
																				"nativeSrc": "2516:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2516:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2540:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2540:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2495:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2495:20:8"
																		},
																		"nativeSrc": "2495:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2495:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2485:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2485:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2236:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2272:9:8",
														"nodeType": "YulTypedName",
														"src": "2272:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2283:7:8",
														"nodeType": "YulTypedName",
														"src": "2283:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2295:6:8",
														"nodeType": "YulTypedName",
														"src": "2295:6:8",
														"type": ""
													}
												],
												"src": "2236:329:8"
											},
											{
												"body": {
													"nativeSrc": "2599:152:8",
													"nodeType": "YulBlock",
													"src": "2599:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2616:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2616:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2619:77:8",
																		"nodeType": "YulLiteral",
																		"src": "2619:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2609:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2609:6:8"
																},
																"nativeSrc": "2609:88:8",
																"nodeType": "YulFunctionCall",
																"src": "2609:88:8"
															},
															"nativeSrc": "2609:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "2609:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2713:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2713:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2716:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2716:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2706:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2706:6:8"
																},
																"nativeSrc": "2706:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2706:15:8"
															},
															"nativeSrc": "2706:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2706:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2737:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2737:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2740:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2740:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2730:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2730:6:8"
																},
																"nativeSrc": "2730:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2730:15:8"
															},
															"nativeSrc": "2730:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2730:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2571:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "2571:180:8"
											},
											{
												"body": {
													"nativeSrc": "2805:362:8",
													"nodeType": "YulBlock",
													"src": "2805:362:8",
													"statements": [
														{
															"nativeSrc": "2815:25:8",
															"nodeType": "YulAssignment",
															"src": "2815:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2838:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "2838:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2820:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2820:17:8"
																},
																"nativeSrc": "2820:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2820:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2815:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "2815:1:8"
																}
															]
														},
														{
															"nativeSrc": "2849:25:8",
															"nodeType": "YulAssignment",
															"src": "2849:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2872:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "2872:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2854:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2854:17:8"
																},
																"nativeSrc": "2854:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2854:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2849:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "2849:1:8"
																}
															]
														},
														{
															"nativeSrc": "2883:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2883:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2906:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "2906:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2909:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "2909:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2902:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2902:3:8"
																},
																"nativeSrc": "2902:9:8",
																"nodeType": "YulFunctionCall",
																"src": "2902:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "2887:11:8",
																	"nodeType": "YulTypedName",
																	"src": "2887:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2920:41:8",
															"nodeType": "YulAssignment",
															"src": "2920:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "2949:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "2949:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2931:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2931:17:8"
																},
																"nativeSrc": "2931:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2931:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2920:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2920:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3138:22:8",
																"nodeType": "YulBlock",
																"src": "3138:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3140:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "3140:16:8"
																			},
																			"nativeSrc": "3140:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3140:18:8"
																		},
																		"nativeSrc": "3140:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3140:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3071:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "3071:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3064:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "3064:6:8"
																				},
																				"nativeSrc": "3064:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3064:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3094:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "3094:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3101:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "3101:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3110:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "3110:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3097:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3097:3:8"
																						},
																						"nativeSrc": "3097:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3097:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3091:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "3091:2:8"
																				},
																				"nativeSrc": "3091:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3091:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3044:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3044:2:8"
																		},
																		"nativeSrc": "3044:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3044:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3024:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3024:6:8"
																},
																"nativeSrc": "3024:113:8",
																"nodeType": "YulFunctionCall",
																"src": "3024:113:8"
															},
															"nativeSrc": "3021:139:8",
															"nodeType": "YulIf",
															"src": "3021:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "2757:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2788:1:8",
														"nodeType": "YulTypedName",
														"src": "2788:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2791:1:8",
														"nodeType": "YulTypedName",
														"src": "2791:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2797:7:8",
														"nodeType": "YulTypedName",
														"src": "2797:7:8",
														"type": ""
													}
												],
												"src": "2757:410:8"
											},
											{
												"body": {
													"nativeSrc": "3236:80:8",
													"nodeType": "YulBlock",
													"src": "3236:80:8",
													"statements": [
														{
															"nativeSrc": "3246:22:8",
															"nodeType": "YulAssignment",
															"src": "3246:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3261:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3261:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3255:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3255:5:8"
																},
																"nativeSrc": "3255:13:8",
																"nodeType": "YulFunctionCall",
																"src": "3255:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3246:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3246:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3304:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3304:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3277:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "3277:26:8"
																},
																"nativeSrc": "3277:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3277:33:8"
															},
															"nativeSrc": "3277:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "3277:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3173:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3214:6:8",
														"nodeType": "YulTypedName",
														"src": "3214:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3222:3:8",
														"nodeType": "YulTypedName",
														"src": "3222:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3230:5:8",
														"nodeType": "YulTypedName",
														"src": "3230:5:8",
														"type": ""
													}
												],
												"src": "3173:143:8"
											},
											{
												"body": {
													"nativeSrc": "3399:274:8",
													"nodeType": "YulBlock",
													"src": "3399:274:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3445:83:8",
																"nodeType": "YulBlock",
																"src": "3445:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3447:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3447:77:8"
																			},
																			"nativeSrc": "3447:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3447:79:8"
																		},
																		"nativeSrc": "3447:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3447:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3420:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3420:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3429:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3429:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3416:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3416:3:8"
																		},
																		"nativeSrc": "3416:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3416:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3441:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3441:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3412:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3412:3:8"
																},
																"nativeSrc": "3412:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3412:32:8"
															},
															"nativeSrc": "3409:119:8",
															"nodeType": "YulIf",
															"src": "3409:119:8"
														},
														{
															"nativeSrc": "3538:128:8",
															"nodeType": "YulBlock",
															"src": "3538:128:8",
															"statements": [
																{
																	"nativeSrc": "3553:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3553:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3567:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3567:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3557:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3557:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3582:74:8",
																	"nodeType": "YulAssignment",
																	"src": "3582:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3628:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3628:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3639:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3639:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3624:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3624:3:8"
																				},
																				"nativeSrc": "3624:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3624:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3648:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3648:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3592:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "3592:31:8"
																		},
																		"nativeSrc": "3592:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3592:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3582:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3582:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3322:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3369:9:8",
														"nodeType": "YulTypedName",
														"src": "3369:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3380:7:8",
														"nodeType": "YulTypedName",
														"src": "3380:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3392:6:8",
														"nodeType": "YulTypedName",
														"src": "3392:6:8",
														"type": ""
													}
												],
												"src": "3322:351:8"
											},
											{
												"body": {
													"nativeSrc": "3775:73:8",
													"nodeType": "YulBlock",
													"src": "3775:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3792:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3792:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3797:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3797:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3785:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3785:6:8"
																},
																"nativeSrc": "3785:19:8",
																"nodeType": "YulFunctionCall",
																"src": "3785:19:8"
															},
															"nativeSrc": "3785:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "3785:19:8"
														},
														{
															"nativeSrc": "3813:29:8",
															"nodeType": "YulAssignment",
															"src": "3813:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3832:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3832:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3837:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3837:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3828:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3828:3:8"
																},
																"nativeSrc": "3828:14:8",
																"nodeType": "YulFunctionCall",
																"src": "3828:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3813:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "3813:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3679:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3747:3:8",
														"nodeType": "YulTypedName",
														"src": "3747:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3752:6:8",
														"nodeType": "YulTypedName",
														"src": "3752:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3763:11:8",
														"nodeType": "YulTypedName",
														"src": "3763:11:8",
														"type": ""
													}
												],
												"src": "3679:169:8"
											},
											{
												"body": {
													"nativeSrc": "3960:130:8",
													"nodeType": "YulBlock",
													"src": "3960:130:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3982:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3982:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3990:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3990:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3978:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3978:3:8"
																		},
																		"nativeSrc": "3978:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3978:14:8"
																	},
																	{
																		"hexValue": "56656e646f7220636f6e747261637420686173206e6f7420656e6f7567682074",
																		"kind": "string",
																		"nativeSrc": "3994:34:8",
																		"nodeType": "YulLiteral",
																		"src": "3994:34:8",
																		"type": "",
																		"value": "Vendor contract has not enough t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3971:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3971:6:8"
																},
																"nativeSrc": "3971:58:8",
																"nodeType": "YulFunctionCall",
																"src": "3971:58:8"
															},
															"nativeSrc": "3971:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "3971:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4050:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4050:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4058:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4058:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4046:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4046:3:8"
																		},
																		"nativeSrc": "4046:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4046:15:8"
																	},
																	{
																		"hexValue": "6f6b656e7320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "4063:19:8",
																		"nodeType": "YulLiteral",
																		"src": "4063:19:8",
																		"type": "",
																		"value": "okens to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4039:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4039:6:8"
																},
																"nativeSrc": "4039:44:8",
																"nodeType": "YulFunctionCall",
																"src": "4039:44:8"
															},
															"nativeSrc": "4039:44:8",
															"nodeType": "YulExpressionStatement",
															"src": "4039:44:8"
														}
													]
												},
												"name": "store_literal_in_memory_a2d8682ef54860c1ef3cd46fa53d91bbbf858d0baf98ddfcb7a9b09f0394a5c6",
												"nativeSrc": "3854:236:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3952:6:8",
														"nodeType": "YulTypedName",
														"src": "3952:6:8",
														"type": ""
													}
												],
												"src": "3854:236:8"
											},
											{
												"body": {
													"nativeSrc": "4242:220:8",
													"nodeType": "YulBlock",
													"src": "4242:220:8",
													"statements": [
														{
															"nativeSrc": "4252:74:8",
															"nodeType": "YulAssignment",
															"src": "4252:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4318:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4318:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4323:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4323:2:8",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4259:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "4259:58:8"
																},
																"nativeSrc": "4259:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4259:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4252:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4252:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4424:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4424:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a2d8682ef54860c1ef3cd46fa53d91bbbf858d0baf98ddfcb7a9b09f0394a5c6",
																	"nativeSrc": "4335:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "4335:88:8"
																},
																"nativeSrc": "4335:93:8",
																"nodeType": "YulFunctionCall",
																"src": "4335:93:8"
															},
															"nativeSrc": "4335:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "4335:93:8"
														},
														{
															"nativeSrc": "4437:19:8",
															"nodeType": "YulAssignment",
															"src": "4437:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4448:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4448:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4453:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4453:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4444:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4444:3:8"
																},
																"nativeSrc": "4444:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4444:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4437:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4437:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a2d8682ef54860c1ef3cd46fa53d91bbbf858d0baf98ddfcb7a9b09f0394a5c6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4096:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4230:3:8",
														"nodeType": "YulTypedName",
														"src": "4230:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4238:3:8",
														"nodeType": "YulTypedName",
														"src": "4238:3:8",
														"type": ""
													}
												],
												"src": "4096:366:8"
											},
											{
												"body": {
													"nativeSrc": "4639:248:8",
													"nodeType": "YulBlock",
													"src": "4639:248:8",
													"statements": [
														{
															"nativeSrc": "4649:26:8",
															"nodeType": "YulAssignment",
															"src": "4649:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4661:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4661:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4672:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4672:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4657:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4657:3:8"
																},
																"nativeSrc": "4657:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4657:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4649:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4649:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4696:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4696:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4707:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4707:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4692:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4692:3:8"
																		},
																		"nativeSrc": "4692:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4692:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4715:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "4715:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4721:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4721:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4711:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4711:3:8"
																		},
																		"nativeSrc": "4711:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4711:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4685:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4685:6:8"
																},
																"nativeSrc": "4685:47:8",
																"nodeType": "YulFunctionCall",
																"src": "4685:47:8"
															},
															"nativeSrc": "4685:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "4685:47:8"
														},
														{
															"nativeSrc": "4741:139:8",
															"nodeType": "YulAssignment",
															"src": "4741:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4875:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4875:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a2d8682ef54860c1ef3cd46fa53d91bbbf858d0baf98ddfcb7a9b09f0394a5c6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4749:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "4749:124:8"
																},
																"nativeSrc": "4749:131:8",
																"nodeType": "YulFunctionCall",
																"src": "4749:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4741:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4741:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d8682ef54860c1ef3cd46fa53d91bbbf858d0baf98ddfcb7a9b09f0394a5c6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4468:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4619:9:8",
														"nodeType": "YulTypedName",
														"src": "4619:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4634:4:8",
														"nodeType": "YulTypedName",
														"src": "4634:4:8",
														"type": ""
													}
												],
												"src": "4468:419:8"
											},
											{
												"body": {
													"nativeSrc": "5019:206:8",
													"nodeType": "YulBlock",
													"src": "5019:206:8",
													"statements": [
														{
															"nativeSrc": "5029:26:8",
															"nodeType": "YulAssignment",
															"src": "5029:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5041:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5041:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5052:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5052:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5037:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5037:3:8"
																},
																"nativeSrc": "5037:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5037:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5029:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5029:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5109:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5109:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5122:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5122:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5133:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5133:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5118:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5118:3:8"
																		},
																		"nativeSrc": "5118:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5118:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5065:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5065:43:8"
																},
																"nativeSrc": "5065:71:8",
																"nodeType": "YulFunctionCall",
																"src": "5065:71:8"
															},
															"nativeSrc": "5065:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "5065:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5190:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5190:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5203:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5203:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5214:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5214:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5199:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5199:3:8"
																		},
																		"nativeSrc": "5199:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5199:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5146:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5146:43:8"
																},
																"nativeSrc": "5146:72:8",
																"nodeType": "YulFunctionCall",
																"src": "5146:72:8"
															},
															"nativeSrc": "5146:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "5146:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4893:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4983:9:8",
														"nodeType": "YulTypedName",
														"src": "4983:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4995:6:8",
														"nodeType": "YulTypedName",
														"src": "4995:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5003:6:8",
														"nodeType": "YulTypedName",
														"src": "5003:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5014:4:8",
														"nodeType": "YulTypedName",
														"src": "5014:4:8",
														"type": ""
													}
												],
												"src": "4893:332:8"
											},
											{
												"body": {
													"nativeSrc": "5273:48:8",
													"nodeType": "YulBlock",
													"src": "5273:48:8",
													"statements": [
														{
															"nativeSrc": "5283:32:8",
															"nodeType": "YulAssignment",
															"src": "5283:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5308:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5308:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5301:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:8"
																		},
																		"nativeSrc": "5301:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5301:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5294:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5294:6:8"
																},
																"nativeSrc": "5294:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5294:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5283:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "5283:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5231:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5255:5:8",
														"nodeType": "YulTypedName",
														"src": "5255:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5265:7:8",
														"nodeType": "YulTypedName",
														"src": "5265:7:8",
														"type": ""
													}
												],
												"src": "5231:90:8"
											},
											{
												"body": {
													"nativeSrc": "5367:76:8",
													"nodeType": "YulBlock",
													"src": "5367:76:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5421:16:8",
																"nodeType": "YulBlock",
																"src": "5421:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5430:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5430:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5433:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5433:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5423:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5423:6:8"
																			},
																			"nativeSrc": "5423:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5423:12:8"
																		},
																		"nativeSrc": "5423:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5423:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5390:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5390:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5412:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5412:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5397:14:8",
																					"nodeType": "YulIdentifier",
																					"src": "5397:14:8"
																				},
																				"nativeSrc": "5397:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5397:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5387:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "5387:2:8"
																		},
																		"nativeSrc": "5387:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5387:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5380:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5380:6:8"
																},
																"nativeSrc": "5380:40:8",
																"nodeType": "YulFunctionCall",
																"src": "5380:40:8"
															},
															"nativeSrc": "5377:60:8",
															"nodeType": "YulIf",
															"src": "5377:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5327:116:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5360:5:8",
														"nodeType": "YulTypedName",
														"src": "5360:5:8",
														"type": ""
													}
												],
												"src": "5327:116:8"
											},
											{
												"body": {
													"nativeSrc": "5509:77:8",
													"nodeType": "YulBlock",
													"src": "5509:77:8",
													"statements": [
														{
															"nativeSrc": "5519:22:8",
															"nodeType": "YulAssignment",
															"src": "5519:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5534:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5534:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5528:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5528:5:8"
																},
																"nativeSrc": "5528:13:8",
																"nodeType": "YulFunctionCall",
																"src": "5528:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5519:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5519:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5574:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5574:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5550:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "5550:23:8"
																},
																"nativeSrc": "5550:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5550:30:8"
															},
															"nativeSrc": "5550:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5550:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "5449:137:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5487:6:8",
														"nodeType": "YulTypedName",
														"src": "5487:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5495:3:8",
														"nodeType": "YulTypedName",
														"src": "5495:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5503:5:8",
														"nodeType": "YulTypedName",
														"src": "5503:5:8",
														"type": ""
													}
												],
												"src": "5449:137:8"
											},
											{
												"body": {
													"nativeSrc": "5666:271:8",
													"nodeType": "YulBlock",
													"src": "5666:271:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5712:83:8",
																"nodeType": "YulBlock",
																"src": "5712:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5714:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5714:77:8"
																			},
																			"nativeSrc": "5714:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5714:79:8"
																		},
																		"nativeSrc": "5714:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5714:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5687:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5687:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5696:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5696:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5683:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5683:3:8"
																		},
																		"nativeSrc": "5683:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5683:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5708:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5708:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5679:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5679:3:8"
																},
																"nativeSrc": "5679:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5679:32:8"
															},
															"nativeSrc": "5676:119:8",
															"nodeType": "YulIf",
															"src": "5676:119:8"
														},
														{
															"nativeSrc": "5805:125:8",
															"nodeType": "YulBlock",
															"src": "5805:125:8",
															"statements": [
																{
																	"nativeSrc": "5820:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5820:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5834:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5834:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5824:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5824:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5849:71:8",
																	"nodeType": "YulAssignment",
																	"src": "5849:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5892:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5892:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5903:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5903:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5888:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5888:3:8"
																				},
																				"nativeSrc": "5888:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5888:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5912:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5912:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "5859:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "5859:28:8"
																		},
																		"nativeSrc": "5859:61:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5859:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5849:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5849:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5592:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5636:9:8",
														"nodeType": "YulTypedName",
														"src": "5636:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5647:7:8",
														"nodeType": "YulTypedName",
														"src": "5647:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5659:6:8",
														"nodeType": "YulTypedName",
														"src": "5659:6:8",
														"type": ""
													}
												],
												"src": "5592:345:8"
											},
											{
												"body": {
													"nativeSrc": "6049:119:8",
													"nodeType": "YulBlock",
													"src": "6049:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6071:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6071:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6079:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6079:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6067:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6067:3:8"
																		},
																		"nativeSrc": "6067:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6067:14:8"
																	},
																	{
																		"hexValue": "4661696c656420746f207472616e7366657220746f6b656e7320746f20746865",
																		"kind": "string",
																		"nativeSrc": "6083:34:8",
																		"nodeType": "YulLiteral",
																		"src": "6083:34:8",
																		"type": "",
																		"value": "Failed to transfer tokens to the"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6060:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6060:6:8"
																},
																"nativeSrc": "6060:58:8",
																"nodeType": "YulFunctionCall",
																"src": "6060:58:8"
															},
															"nativeSrc": "6060:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "6060:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6139:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6139:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6147:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6147:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6135:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6135:3:8"
																		},
																		"nativeSrc": "6135:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6135:15:8"
																	},
																	{
																		"hexValue": "206f776e6572",
																		"kind": "string",
																		"nativeSrc": "6152:8:8",
																		"nodeType": "YulLiteral",
																		"src": "6152:8:8",
																		"type": "",
																		"value": " owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6128:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6128:6:8"
																},
																"nativeSrc": "6128:33:8",
																"nodeType": "YulFunctionCall",
																"src": "6128:33:8"
															},
															"nativeSrc": "6128:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "6128:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_ba7ff9bdfaf761c37e9c731eecdaca20fa9dd014fad94a489dcf802907a23131",
												"nativeSrc": "5943:225:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6041:6:8",
														"nodeType": "YulTypedName",
														"src": "6041:6:8",
														"type": ""
													}
												],
												"src": "5943:225:8"
											},
											{
												"body": {
													"nativeSrc": "6320:220:8",
													"nodeType": "YulBlock",
													"src": "6320:220:8",
													"statements": [
														{
															"nativeSrc": "6330:74:8",
															"nodeType": "YulAssignment",
															"src": "6330:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6396:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6396:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6401:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6401:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6337:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "6337:58:8"
																},
																"nativeSrc": "6337:67:8",
																"nodeType": "YulFunctionCall",
																"src": "6337:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6330:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6330:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6502:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6502:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ba7ff9bdfaf761c37e9c731eecdaca20fa9dd014fad94a489dcf802907a23131",
																	"nativeSrc": "6413:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "6413:88:8"
																},
																"nativeSrc": "6413:93:8",
																"nodeType": "YulFunctionCall",
																"src": "6413:93:8"
															},
															"nativeSrc": "6413:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "6413:93:8"
														},
														{
															"nativeSrc": "6515:19:8",
															"nodeType": "YulAssignment",
															"src": "6515:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6526:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6526:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6531:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6531:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6522:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6522:3:8"
																},
																"nativeSrc": "6522:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6522:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6515:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6515:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ba7ff9bdfaf761c37e9c731eecdaca20fa9dd014fad94a489dcf802907a23131_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6174:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6308:3:8",
														"nodeType": "YulTypedName",
														"src": "6308:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6316:3:8",
														"nodeType": "YulTypedName",
														"src": "6316:3:8",
														"type": ""
													}
												],
												"src": "6174:366:8"
											},
											{
												"body": {
													"nativeSrc": "6717:248:8",
													"nodeType": "YulBlock",
													"src": "6717:248:8",
													"statements": [
														{
															"nativeSrc": "6727:26:8",
															"nodeType": "YulAssignment",
															"src": "6727:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6739:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6739:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6750:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6750:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6735:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6735:3:8"
																},
																"nativeSrc": "6735:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6735:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6727:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6727:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6774:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6774:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6785:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6785:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6770:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6770:3:8"
																		},
																		"nativeSrc": "6770:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6770:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6793:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "6793:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6799:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6799:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6789:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6789:3:8"
																		},
																		"nativeSrc": "6789:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6789:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6763:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6763:6:8"
																},
																"nativeSrc": "6763:47:8",
																"nodeType": "YulFunctionCall",
																"src": "6763:47:8"
															},
															"nativeSrc": "6763:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "6763:47:8"
														},
														{
															"nativeSrc": "6819:139:8",
															"nodeType": "YulAssignment",
															"src": "6819:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6953:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6953:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ba7ff9bdfaf761c37e9c731eecdaca20fa9dd014fad94a489dcf802907a23131_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6827:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "6827:124:8"
																},
																"nativeSrc": "6827:131:8",
																"nodeType": "YulFunctionCall",
																"src": "6827:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6819:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6819:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ba7ff9bdfaf761c37e9c731eecdaca20fa9dd014fad94a489dcf802907a23131__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6546:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6697:9:8",
														"nodeType": "YulTypedName",
														"src": "6697:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6712:4:8",
														"nodeType": "YulTypedName",
														"src": "6712:4:8",
														"type": ""
													}
												],
												"src": "6546:419:8"
											},
											{
												"body": {
													"nativeSrc": "7077:114:8",
													"nodeType": "YulBlock",
													"src": "7077:114:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7099:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7099:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7107:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7107:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7095:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7095:3:8"
																		},
																		"nativeSrc": "7095:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7095:14:8"
																	},
																	{
																		"hexValue": "4f776e657220686173206e6f742062616c616e636520746f2077697468647261",
																		"kind": "string",
																		"nativeSrc": "7111:34:8",
																		"nodeType": "YulLiteral",
																		"src": "7111:34:8",
																		"type": "",
																		"value": "Owner has not balance to withdra"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7088:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7088:6:8"
																},
																"nativeSrc": "7088:58:8",
																"nodeType": "YulFunctionCall",
																"src": "7088:58:8"
															},
															"nativeSrc": "7088:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "7088:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7167:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7167:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7175:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7175:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7163:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7163:3:8"
																		},
																		"nativeSrc": "7163:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7163:15:8"
																	},
																	{
																		"hexValue": "77",
																		"kind": "string",
																		"nativeSrc": "7180:3:8",
																		"nodeType": "YulLiteral",
																		"src": "7180:3:8",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7156:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7156:6:8"
																},
																"nativeSrc": "7156:28:8",
																"nodeType": "YulFunctionCall",
																"src": "7156:28:8"
															},
															"nativeSrc": "7156:28:8",
															"nodeType": "YulExpressionStatement",
															"src": "7156:28:8"
														}
													]
												},
												"name": "store_literal_in_memory_ccebbaa4e3f31f90a91c12c4cfe9a07663574616db39774c30bc82381a7d7e78",
												"nativeSrc": "6971:220:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7069:6:8",
														"nodeType": "YulTypedName",
														"src": "7069:6:8",
														"type": ""
													}
												],
												"src": "6971:220:8"
											},
											{
												"body": {
													"nativeSrc": "7343:220:8",
													"nodeType": "YulBlock",
													"src": "7343:220:8",
													"statements": [
														{
															"nativeSrc": "7353:74:8",
															"nodeType": "YulAssignment",
															"src": "7353:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7419:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7419:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7424:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7424:2:8",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7360:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "7360:58:8"
																},
																"nativeSrc": "7360:67:8",
																"nodeType": "YulFunctionCall",
																"src": "7360:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7353:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7353:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7525:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7525:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ccebbaa4e3f31f90a91c12c4cfe9a07663574616db39774c30bc82381a7d7e78",
																	"nativeSrc": "7436:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "7436:88:8"
																},
																"nativeSrc": "7436:93:8",
																"nodeType": "YulFunctionCall",
																"src": "7436:93:8"
															},
															"nativeSrc": "7436:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "7436:93:8"
														},
														{
															"nativeSrc": "7538:19:8",
															"nodeType": "YulAssignment",
															"src": "7538:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7549:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7549:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7554:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7554:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7545:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7545:3:8"
																},
																"nativeSrc": "7545:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7545:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7538:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7538:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ccebbaa4e3f31f90a91c12c4cfe9a07663574616db39774c30bc82381a7d7e78_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7197:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7331:3:8",
														"nodeType": "YulTypedName",
														"src": "7331:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7339:3:8",
														"nodeType": "YulTypedName",
														"src": "7339:3:8",
														"type": ""
													}
												],
												"src": "7197:366:8"
											},
											{
												"body": {
													"nativeSrc": "7740:248:8",
													"nodeType": "YulBlock",
													"src": "7740:248:8",
													"statements": [
														{
															"nativeSrc": "7750:26:8",
															"nodeType": "YulAssignment",
															"src": "7750:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7762:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7762:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7773:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7773:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7758:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7758:3:8"
																},
																"nativeSrc": "7758:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7758:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7750:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7750:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7797:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7797:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7808:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7808:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7793:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7793:3:8"
																		},
																		"nativeSrc": "7793:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7793:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7816:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7816:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7822:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7822:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7812:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7812:3:8"
																		},
																		"nativeSrc": "7812:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7812:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7786:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7786:6:8"
																},
																"nativeSrc": "7786:47:8",
																"nodeType": "YulFunctionCall",
																"src": "7786:47:8"
															},
															"nativeSrc": "7786:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "7786:47:8"
														},
														{
															"nativeSrc": "7842:139:8",
															"nodeType": "YulAssignment",
															"src": "7842:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7976:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7976:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ccebbaa4e3f31f90a91c12c4cfe9a07663574616db39774c30bc82381a7d7e78_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7850:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "7850:124:8"
																},
																"nativeSrc": "7850:131:8",
																"nodeType": "YulFunctionCall",
																"src": "7850:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7842:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7842:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ccebbaa4e3f31f90a91c12c4cfe9a07663574616db39774c30bc82381a7d7e78__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7569:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7720:9:8",
														"nodeType": "YulTypedName",
														"src": "7720:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7735:4:8",
														"nodeType": "YulTypedName",
														"src": "7735:4:8",
														"type": ""
													}
												],
												"src": "7569:419:8"
											},
											{
												"body": {
													"nativeSrc": "8107:34:8",
													"nodeType": "YulBlock",
													"src": "8107:34:8",
													"statements": [
														{
															"nativeSrc": "8117:18:8",
															"nodeType": "YulAssignment",
															"src": "8117:18:8",
															"value": {
																"name": "pos",
																"nativeSrc": "8132:3:8",
																"nodeType": "YulIdentifier",
																"src": "8132:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8117:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "8117:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "7994:147:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8079:3:8",
														"nodeType": "YulTypedName",
														"src": "8079:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8084:6:8",
														"nodeType": "YulTypedName",
														"src": "8084:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8095:11:8",
														"nodeType": "YulTypedName",
														"src": "8095:11:8",
														"type": ""
													}
												],
												"src": "7994:147:8"
											},
											{
												"body": {
													"nativeSrc": "8253:8:8",
													"nodeType": "YulBlock",
													"src": "8253:8:8",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "8147:114:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8245:6:8",
														"nodeType": "YulTypedName",
														"src": "8245:6:8",
														"type": ""
													}
												],
												"src": "8147:114:8"
											},
											{
												"body": {
													"nativeSrc": "8430:235:8",
													"nodeType": "YulBlock",
													"src": "8430:235:8",
													"statements": [
														{
															"nativeSrc": "8440:90:8",
															"nodeType": "YulAssignment",
															"src": "8440:90:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8523:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8523:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8528:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8528:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "8447:75:8",
																	"nodeType": "YulIdentifier",
																	"src": "8447:75:8"
																},
																"nativeSrc": "8447:83:8",
																"nodeType": "YulFunctionCall",
																"src": "8447:83:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8440:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8440:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8628:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8628:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "8539:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "8539:88:8"
																},
																"nativeSrc": "8539:93:8",
																"nodeType": "YulFunctionCall",
																"src": "8539:93:8"
															},
															"nativeSrc": "8539:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "8539:93:8"
														},
														{
															"nativeSrc": "8641:18:8",
															"nodeType": "YulAssignment",
															"src": "8641:18:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8652:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8652:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8657:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8657:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8648:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8648:3:8"
																},
																"nativeSrc": "8648:11:8",
																"nodeType": "YulFunctionCall",
																"src": "8648:11:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8641:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8641:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "8267:398:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8418:3:8",
														"nodeType": "YulTypedName",
														"src": "8418:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8426:3:8",
														"nodeType": "YulTypedName",
														"src": "8426:3:8",
														"type": ""
													}
												],
												"src": "8267:398:8"
											},
											{
												"body": {
													"nativeSrc": "8859:191:8",
													"nodeType": "YulBlock",
													"src": "8859:191:8",
													"statements": [
														{
															"nativeSrc": "8870:154:8",
															"nodeType": "YulAssignment",
															"src": "8870:154:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9020:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9020:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "8877:141:8",
																	"nodeType": "YulIdentifier",
																	"src": "8877:141:8"
																},
																"nativeSrc": "8877:147:8",
																"nodeType": "YulFunctionCall",
																"src": "8877:147:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8870:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8870:3:8"
																}
															]
														},
														{
															"nativeSrc": "9034:10:8",
															"nodeType": "YulAssignment",
															"src": "9034:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "9041:3:8",
																"nodeType": "YulIdentifier",
																"src": "9041:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9034:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9034:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "8671:379:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8846:3:8",
														"nodeType": "YulTypedName",
														"src": "8846:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8855:3:8",
														"nodeType": "YulTypedName",
														"src": "8855:3:8",
														"type": ""
													}
												],
												"src": "8671:379:8"
											},
											{
												"body": {
													"nativeSrc": "9162:126:8",
													"nodeType": "YulBlock",
													"src": "9162:126:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9184:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9184:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9192:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9192:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9180:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9180:3:8"
																		},
																		"nativeSrc": "9180:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9180:14:8"
																	},
																	{
																		"hexValue": "4661696c656420746f2073656e6420757365722062616c616e6365206261636b",
																		"kind": "string",
																		"nativeSrc": "9196:34:8",
																		"nodeType": "YulLiteral",
																		"src": "9196:34:8",
																		"type": "",
																		"value": "Failed to send user balance back"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9173:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9173:6:8"
																},
																"nativeSrc": "9173:58:8",
																"nodeType": "YulFunctionCall",
																"src": "9173:58:8"
															},
															"nativeSrc": "9173:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "9173:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9252:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9252:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9260:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9260:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9248:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9248:3:8"
																		},
																		"nativeSrc": "9248:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9248:15:8"
																	},
																	{
																		"hexValue": "20746f20746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "9265:15:8",
																		"nodeType": "YulLiteral",
																		"src": "9265:15:8",
																		"type": "",
																		"value": " to the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9241:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9241:6:8"
																},
																"nativeSrc": "9241:40:8",
																"nodeType": "YulFunctionCall",
																"src": "9241:40:8"
															},
															"nativeSrc": "9241:40:8",
															"nodeType": "YulExpressionStatement",
															"src": "9241:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_bd94085211bc56519ad77c66936b2e9317d42596b4c6cc457eca1e820b3c66a5",
												"nativeSrc": "9056:232:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9154:6:8",
														"nodeType": "YulTypedName",
														"src": "9154:6:8",
														"type": ""
													}
												],
												"src": "9056:232:8"
											},
											{
												"body": {
													"nativeSrc": "9440:220:8",
													"nodeType": "YulBlock",
													"src": "9440:220:8",
													"statements": [
														{
															"nativeSrc": "9450:74:8",
															"nodeType": "YulAssignment",
															"src": "9450:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9516:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9516:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9521:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9521:2:8",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9457:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "9457:58:8"
																},
																"nativeSrc": "9457:67:8",
																"nodeType": "YulFunctionCall",
																"src": "9457:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9450:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9450:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9622:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9622:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bd94085211bc56519ad77c66936b2e9317d42596b4c6cc457eca1e820b3c66a5",
																	"nativeSrc": "9533:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "9533:88:8"
																},
																"nativeSrc": "9533:93:8",
																"nodeType": "YulFunctionCall",
																"src": "9533:93:8"
															},
															"nativeSrc": "9533:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "9533:93:8"
														},
														{
															"nativeSrc": "9635:19:8",
															"nodeType": "YulAssignment",
															"src": "9635:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9646:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9646:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9651:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9651:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9642:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9642:3:8"
																},
																"nativeSrc": "9642:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9642:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9635:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bd94085211bc56519ad77c66936b2e9317d42596b4c6cc457eca1e820b3c66a5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9294:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9428:3:8",
														"nodeType": "YulTypedName",
														"src": "9428:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9436:3:8",
														"nodeType": "YulTypedName",
														"src": "9436:3:8",
														"type": ""
													}
												],
												"src": "9294:366:8"
											},
											{
												"body": {
													"nativeSrc": "9837:248:8",
													"nodeType": "YulBlock",
													"src": "9837:248:8",
													"statements": [
														{
															"nativeSrc": "9847:26:8",
															"nodeType": "YulAssignment",
															"src": "9847:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9859:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9859:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9870:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9870:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9855:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9855:3:8"
																},
																"nativeSrc": "9855:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9855:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9847:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9847:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9894:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9894:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9905:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9905:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9890:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9890:3:8"
																		},
																		"nativeSrc": "9890:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9890:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9913:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9913:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9919:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9919:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9909:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9909:3:8"
																		},
																		"nativeSrc": "9909:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9909:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9883:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9883:6:8"
																},
																"nativeSrc": "9883:47:8",
																"nodeType": "YulFunctionCall",
																"src": "9883:47:8"
															},
															"nativeSrc": "9883:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "9883:47:8"
														},
														{
															"nativeSrc": "9939:139:8",
															"nodeType": "YulAssignment",
															"src": "9939:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10073:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10073:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bd94085211bc56519ad77c66936b2e9317d42596b4c6cc457eca1e820b3c66a5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9947:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "9947:124:8"
																},
																"nativeSrc": "9947:131:8",
																"nodeType": "YulFunctionCall",
																"src": "9947:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9939:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9939:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bd94085211bc56519ad77c66936b2e9317d42596b4c6cc457eca1e820b3c66a5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9666:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9817:9:8",
														"nodeType": "YulTypedName",
														"src": "9817:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9832:4:8",
														"nodeType": "YulTypedName",
														"src": "9832:4:8",
														"type": ""
													}
												],
												"src": "9666:419:8"
											},
											{
												"body": {
													"nativeSrc": "10197:76:8",
													"nodeType": "YulBlock",
													"src": "10197:76:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10219:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10219:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10227:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10227:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10215:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10215:3:8"
																		},
																		"nativeSrc": "10215:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10215:14:8"
																	},
																	{
																		"hexValue": "5370656369667920616d6f756e74206f6620746f6b656e7320746f2073656c6c",
																		"kind": "string",
																		"nativeSrc": "10231:34:8",
																		"nodeType": "YulLiteral",
																		"src": "10231:34:8",
																		"type": "",
																		"value": "Specify amount of tokens to sell"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10208:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10208:6:8"
																},
																"nativeSrc": "10208:58:8",
																"nodeType": "YulFunctionCall",
																"src": "10208:58:8"
															},
															"nativeSrc": "10208:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "10208:58:8"
														}
													]
												},
												"name": "store_literal_in_memory_a3c239de946079d2d0118e3c5cd67afef89696a15aebde596059fa4a511c966c",
												"nativeSrc": "10091:182:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10189:6:8",
														"nodeType": "YulTypedName",
														"src": "10189:6:8",
														"type": ""
													}
												],
												"src": "10091:182:8"
											},
											{
												"body": {
													"nativeSrc": "10425:220:8",
													"nodeType": "YulBlock",
													"src": "10425:220:8",
													"statements": [
														{
															"nativeSrc": "10435:74:8",
															"nodeType": "YulAssignment",
															"src": "10435:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10501:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10501:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10506:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10506:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10442:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "10442:58:8"
																},
																"nativeSrc": "10442:67:8",
																"nodeType": "YulFunctionCall",
																"src": "10442:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10435:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10435:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10607:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10607:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a3c239de946079d2d0118e3c5cd67afef89696a15aebde596059fa4a511c966c",
																	"nativeSrc": "10518:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "10518:88:8"
																},
																"nativeSrc": "10518:93:8",
																"nodeType": "YulFunctionCall",
																"src": "10518:93:8"
															},
															"nativeSrc": "10518:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "10518:93:8"
														},
														{
															"nativeSrc": "10620:19:8",
															"nodeType": "YulAssignment",
															"src": "10620:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10631:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10631:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10636:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10636:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10627:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10627:3:8"
																},
																"nativeSrc": "10627:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10627:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10620:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10620:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a3c239de946079d2d0118e3c5cd67afef89696a15aebde596059fa4a511c966c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10279:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10413:3:8",
														"nodeType": "YulTypedName",
														"src": "10413:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10421:3:8",
														"nodeType": "YulTypedName",
														"src": "10421:3:8",
														"type": ""
													}
												],
												"src": "10279:366:8"
											},
											{
												"body": {
													"nativeSrc": "10822:248:8",
													"nodeType": "YulBlock",
													"src": "10822:248:8",
													"statements": [
														{
															"nativeSrc": "10832:26:8",
															"nodeType": "YulAssignment",
															"src": "10832:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10844:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10844:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10855:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10855:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10840:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10840:3:8"
																},
																"nativeSrc": "10840:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10840:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10832:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10832:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10879:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10879:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10890:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10890:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10875:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10875:3:8"
																		},
																		"nativeSrc": "10875:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10875:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10898:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10898:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10904:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10904:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10894:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10894:3:8"
																		},
																		"nativeSrc": "10894:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10894:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10868:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10868:6:8"
																},
																"nativeSrc": "10868:47:8",
																"nodeType": "YulFunctionCall",
																"src": "10868:47:8"
															},
															"nativeSrc": "10868:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "10868:47:8"
														},
														{
															"nativeSrc": "10924:139:8",
															"nodeType": "YulAssignment",
															"src": "10924:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11058:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11058:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a3c239de946079d2d0118e3c5cd67afef89696a15aebde596059fa4a511c966c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10932:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "10932:124:8"
																},
																"nativeSrc": "10932:131:8",
																"nodeType": "YulFunctionCall",
																"src": "10932:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10924:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10924:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a3c239de946079d2d0118e3c5cd67afef89696a15aebde596059fa4a511c966c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10651:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10802:9:8",
														"nodeType": "YulTypedName",
														"src": "10802:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10817:4:8",
														"nodeType": "YulTypedName",
														"src": "10817:4:8",
														"type": ""
													}
												],
												"src": "10651:419:8"
											},
											{
												"body": {
													"nativeSrc": "11182:70:8",
													"nodeType": "YulBlock",
													"src": "11182:70:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11204:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11204:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11212:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11212:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11200:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11200:3:8"
																		},
																		"nativeSrc": "11200:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11200:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420746f6b656e2062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "11216:28:8",
																		"nodeType": "YulLiteral",
																		"src": "11216:28:8",
																		"type": "",
																		"value": "Insufficient token balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11193:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11193:6:8"
																},
																"nativeSrc": "11193:52:8",
																"nodeType": "YulFunctionCall",
																"src": "11193:52:8"
															},
															"nativeSrc": "11193:52:8",
															"nodeType": "YulExpressionStatement",
															"src": "11193:52:8"
														}
													]
												},
												"name": "store_literal_in_memory_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192",
												"nativeSrc": "11076:176:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11174:6:8",
														"nodeType": "YulTypedName",
														"src": "11174:6:8",
														"type": ""
													}
												],
												"src": "11076:176:8"
											},
											{
												"body": {
													"nativeSrc": "11404:220:8",
													"nodeType": "YulBlock",
													"src": "11404:220:8",
													"statements": [
														{
															"nativeSrc": "11414:74:8",
															"nodeType": "YulAssignment",
															"src": "11414:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11480:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11480:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11485:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11485:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11421:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "11421:58:8"
																},
																"nativeSrc": "11421:67:8",
																"nodeType": "YulFunctionCall",
																"src": "11421:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11414:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11414:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11586:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11586:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192",
																	"nativeSrc": "11497:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "11497:88:8"
																},
																"nativeSrc": "11497:93:8",
																"nodeType": "YulFunctionCall",
																"src": "11497:93:8"
															},
															"nativeSrc": "11497:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "11497:93:8"
														},
														{
															"nativeSrc": "11599:19:8",
															"nodeType": "YulAssignment",
															"src": "11599:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11610:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11610:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11615:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11615:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11606:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11606:3:8"
																},
																"nativeSrc": "11606:12:8",
																"nodeType": "YulFunctionCall",
																"src": "11606:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11599:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11599:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11258:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11392:3:8",
														"nodeType": "YulTypedName",
														"src": "11392:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11400:3:8",
														"nodeType": "YulTypedName",
														"src": "11400:3:8",
														"type": ""
													}
												],
												"src": "11258:366:8"
											},
											{
												"body": {
													"nativeSrc": "11801:248:8",
													"nodeType": "YulBlock",
													"src": "11801:248:8",
													"statements": [
														{
															"nativeSrc": "11811:26:8",
															"nodeType": "YulAssignment",
															"src": "11811:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11823:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11823:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11834:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11834:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11819:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11819:3:8"
																},
																"nativeSrc": "11819:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11819:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11811:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11811:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11858:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11858:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11869:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11869:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11854:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11854:3:8"
																		},
																		"nativeSrc": "11854:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11854:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11877:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "11877:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11883:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11883:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11873:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11873:3:8"
																		},
																		"nativeSrc": "11873:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11873:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11847:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11847:6:8"
																},
																"nativeSrc": "11847:47:8",
																"nodeType": "YulFunctionCall",
																"src": "11847:47:8"
															},
															"nativeSrc": "11847:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "11847:47:8"
														},
														{
															"nativeSrc": "11903:139:8",
															"nodeType": "YulAssignment",
															"src": "11903:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12037:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12037:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11911:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "11911:124:8"
																},
																"nativeSrc": "11911:131:8",
																"nodeType": "YulFunctionCall",
																"src": "11911:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11903:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11903:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11630:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11781:9:8",
														"nodeType": "YulTypedName",
														"src": "11781:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11796:4:8",
														"nodeType": "YulTypedName",
														"src": "11796:4:8",
														"type": ""
													}
												],
												"src": "11630:419:8"
											},
											{
												"body": {
													"nativeSrc": "12100:149:8",
													"nodeType": "YulBlock",
													"src": "12100:149:8",
													"statements": [
														{
															"nativeSrc": "12110:25:8",
															"nodeType": "YulAssignment",
															"src": "12110:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12133:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12133:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12115:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "12115:17:8"
																},
																"nativeSrc": "12115:20:8",
																"nodeType": "YulFunctionCall",
																"src": "12115:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12110:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12110:1:8"
																}
															]
														},
														{
															"nativeSrc": "12144:25:8",
															"nodeType": "YulAssignment",
															"src": "12144:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12167:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12167:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12149:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "12149:17:8"
																},
																"nativeSrc": "12149:20:8",
																"nodeType": "YulFunctionCall",
																"src": "12149:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12144:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12144:1:8"
																}
															]
														},
														{
															"nativeSrc": "12178:17:8",
															"nodeType": "YulAssignment",
															"src": "12178:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12190:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12190:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12193:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12193:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12186:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12186:3:8"
																},
																"nativeSrc": "12186:9:8",
																"nodeType": "YulFunctionCall",
																"src": "12186:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12178:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12178:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12220:22:8",
																"nodeType": "YulBlock",
																"src": "12220:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12222:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "12222:16:8"
																			},
																			"nativeSrc": "12222:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12222:18:8"
																		},
																		"nativeSrc": "12222:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12222:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "12211:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12211:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "12217:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12217:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12208:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "12208:2:8"
																},
																"nativeSrc": "12208:11:8",
																"nodeType": "YulFunctionCall",
																"src": "12208:11:8"
															},
															"nativeSrc": "12205:37:8",
															"nodeType": "YulIf",
															"src": "12205:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "12055:194:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12086:1:8",
														"nodeType": "YulTypedName",
														"src": "12086:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12089:1:8",
														"nodeType": "YulTypedName",
														"src": "12089:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12095:4:8",
														"nodeType": "YulTypedName",
														"src": "12095:4:8",
														"type": ""
													}
												],
												"src": "12055:194:8"
											},
											{
												"body": {
													"nativeSrc": "12283:152:8",
													"nodeType": "YulBlock",
													"src": "12283:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12300:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12300:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12303:77:8",
																		"nodeType": "YulLiteral",
																		"src": "12303:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12293:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12293:6:8"
																},
																"nativeSrc": "12293:88:8",
																"nodeType": "YulFunctionCall",
																"src": "12293:88:8"
															},
															"nativeSrc": "12293:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "12293:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12397:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12397:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12400:4:8",
																		"nodeType": "YulLiteral",
																		"src": "12400:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12390:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12390:6:8"
																},
																"nativeSrc": "12390:15:8",
																"nodeType": "YulFunctionCall",
																"src": "12390:15:8"
															},
															"nativeSrc": "12390:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "12390:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12421:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12421:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12424:4:8",
																		"nodeType": "YulLiteral",
																		"src": "12424:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12414:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12414:6:8"
																},
																"nativeSrc": "12414:15:8",
																"nodeType": "YulFunctionCall",
																"src": "12414:15:8"
															},
															"nativeSrc": "12414:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "12414:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "12255:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "12255:180:8"
											},
											{
												"body": {
													"nativeSrc": "12483:143:8",
													"nodeType": "YulBlock",
													"src": "12483:143:8",
													"statements": [
														{
															"nativeSrc": "12493:25:8",
															"nodeType": "YulAssignment",
															"src": "12493:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12516:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12516:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12498:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "12498:17:8"
																},
																"nativeSrc": "12498:20:8",
																"nodeType": "YulFunctionCall",
																"src": "12498:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12493:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12493:1:8"
																}
															]
														},
														{
															"nativeSrc": "12527:25:8",
															"nodeType": "YulAssignment",
															"src": "12527:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12550:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12550:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "12532:17:8"
																},
																"nativeSrc": "12532:20:8",
																"nodeType": "YulFunctionCall",
																"src": "12532:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12527:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12527:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12574:22:8",
																"nodeType": "YulBlock",
																"src": "12574:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "12576:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "12576:16:8"
																			},
																			"nativeSrc": "12576:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12576:18:8"
																		},
																		"nativeSrc": "12576:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12576:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12571:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12571:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12564:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12564:6:8"
																},
																"nativeSrc": "12564:9:8",
																"nodeType": "YulFunctionCall",
																"src": "12564:9:8"
															},
															"nativeSrc": "12561:35:8",
															"nodeType": "YulIf",
															"src": "12561:35:8"
														},
														{
															"nativeSrc": "12606:14:8",
															"nodeType": "YulAssignment",
															"src": "12606:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12615:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12615:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12618:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12618:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12611:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12611:3:8"
																},
																"nativeSrc": "12611:9:8",
																"nodeType": "YulFunctionCall",
																"src": "12611:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12606:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12606:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "12441:185:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12472:1:8",
														"nodeType": "YulTypedName",
														"src": "12472:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12475:1:8",
														"nodeType": "YulTypedName",
														"src": "12475:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12481:1:8",
														"nodeType": "YulTypedName",
														"src": "12481:1:8",
														"type": ""
													}
												],
												"src": "12441:185:8"
											},
											{
												"body": {
													"nativeSrc": "12738:118:8",
													"nodeType": "YulBlock",
													"src": "12738:118:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12760:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12760:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12768:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12768:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12756:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12756:3:8"
																		},
																		"nativeSrc": "12756:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12756:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420436f696e2062616c616e636520696e20636f6e",
																		"kind": "string",
																		"nativeSrc": "12772:34:8",
																		"nodeType": "YulLiteral",
																		"src": "12772:34:8",
																		"type": "",
																		"value": "Insufficient Coin balance in con"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12749:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12749:6:8"
																},
																"nativeSrc": "12749:58:8",
																"nodeType": "YulFunctionCall",
																"src": "12749:58:8"
															},
															"nativeSrc": "12749:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "12749:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12828:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12828:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12836:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12836:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12824:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12824:3:8"
																		},
																		"nativeSrc": "12824:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12824:15:8"
																	},
																	{
																		"hexValue": "7472616374",
																		"kind": "string",
																		"nativeSrc": "12841:7:8",
																		"nodeType": "YulLiteral",
																		"src": "12841:7:8",
																		"type": "",
																		"value": "tract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12817:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12817:6:8"
																},
																"nativeSrc": "12817:32:8",
																"nodeType": "YulFunctionCall",
																"src": "12817:32:8"
															},
															"nativeSrc": "12817:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "12817:32:8"
														}
													]
												},
												"name": "store_literal_in_memory_5c0b16933219a11e126acac4bdc517d3b683c9ecefce62e995b71ef7d2bce23b",
												"nativeSrc": "12632:224:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12730:6:8",
														"nodeType": "YulTypedName",
														"src": "12730:6:8",
														"type": ""
													}
												],
												"src": "12632:224:8"
											},
											{
												"body": {
													"nativeSrc": "13008:220:8",
													"nodeType": "YulBlock",
													"src": "13008:220:8",
													"statements": [
														{
															"nativeSrc": "13018:74:8",
															"nodeType": "YulAssignment",
															"src": "13018:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13084:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13084:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13089:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13089:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13025:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "13025:58:8"
																},
																"nativeSrc": "13025:67:8",
																"nodeType": "YulFunctionCall",
																"src": "13025:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13018:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13018:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13190:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13190:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5c0b16933219a11e126acac4bdc517d3b683c9ecefce62e995b71ef7d2bce23b",
																	"nativeSrc": "13101:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "13101:88:8"
																},
																"nativeSrc": "13101:93:8",
																"nodeType": "YulFunctionCall",
																"src": "13101:93:8"
															},
															"nativeSrc": "13101:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "13101:93:8"
														},
														{
															"nativeSrc": "13203:19:8",
															"nodeType": "YulAssignment",
															"src": "13203:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13214:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13214:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13219:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13219:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13210:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13210:3:8"
																},
																"nativeSrc": "13210:12:8",
																"nodeType": "YulFunctionCall",
																"src": "13210:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13203:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13203:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5c0b16933219a11e126acac4bdc517d3b683c9ecefce62e995b71ef7d2bce23b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12862:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12996:3:8",
														"nodeType": "YulTypedName",
														"src": "12996:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13004:3:8",
														"nodeType": "YulTypedName",
														"src": "13004:3:8",
														"type": ""
													}
												],
												"src": "12862:366:8"
											},
											{
												"body": {
													"nativeSrc": "13405:248:8",
													"nodeType": "YulBlock",
													"src": "13405:248:8",
													"statements": [
														{
															"nativeSrc": "13415:26:8",
															"nodeType": "YulAssignment",
															"src": "13415:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13427:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13427:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13438:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13438:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13423:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13423:3:8"
																},
																"nativeSrc": "13423:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13423:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13415:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13415:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13462:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13462:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13473:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13473:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13458:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13458:3:8"
																		},
																		"nativeSrc": "13458:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13458:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13481:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "13481:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13487:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13487:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13477:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13477:3:8"
																		},
																		"nativeSrc": "13477:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13477:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13451:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13451:6:8"
																},
																"nativeSrc": "13451:47:8",
																"nodeType": "YulFunctionCall",
																"src": "13451:47:8"
															},
															"nativeSrc": "13451:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "13451:47:8"
														},
														{
															"nativeSrc": "13507:139:8",
															"nodeType": "YulAssignment",
															"src": "13507:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13641:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13641:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5c0b16933219a11e126acac4bdc517d3b683c9ecefce62e995b71ef7d2bce23b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13515:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "13515:124:8"
																},
																"nativeSrc": "13515:131:8",
																"nodeType": "YulFunctionCall",
																"src": "13515:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13507:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13507:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5c0b16933219a11e126acac4bdc517d3b683c9ecefce62e995b71ef7d2bce23b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13234:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13385:9:8",
														"nodeType": "YulTypedName",
														"src": "13385:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13400:4:8",
														"nodeType": "YulTypedName",
														"src": "13400:4:8",
														"type": ""
													}
												],
												"src": "13234:419:8"
											},
											{
												"body": {
													"nativeSrc": "13813:288:8",
													"nodeType": "YulBlock",
													"src": "13813:288:8",
													"statements": [
														{
															"nativeSrc": "13823:26:8",
															"nodeType": "YulAssignment",
															"src": "13823:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13835:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13835:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13846:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13846:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13831:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13831:3:8"
																},
																"nativeSrc": "13831:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13831:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13823:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13823:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13903:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13903:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13916:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13916:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13927:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13927:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13912:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13912:3:8"
																		},
																		"nativeSrc": "13912:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13912:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13859:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "13859:43:8"
																},
																"nativeSrc": "13859:71:8",
																"nodeType": "YulFunctionCall",
																"src": "13859:71:8"
															},
															"nativeSrc": "13859:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "13859:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13984:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13984:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13997:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13997:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14008:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14008:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13993:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13993:3:8"
																		},
																		"nativeSrc": "13993:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13993:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13940:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "13940:43:8"
																},
																"nativeSrc": "13940:72:8",
																"nodeType": "YulFunctionCall",
																"src": "13940:72:8"
															},
															"nativeSrc": "13940:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "13940:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14066:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14066:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14079:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14079:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14090:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14090:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14075:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14075:3:8"
																		},
																		"nativeSrc": "14075:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14075:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14022:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "14022:43:8"
																},
																"nativeSrc": "14022:72:8",
																"nodeType": "YulFunctionCall",
																"src": "14022:72:8"
															},
															"nativeSrc": "14022:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "14022:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13659:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13769:9:8",
														"nodeType": "YulTypedName",
														"src": "13769:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13781:6:8",
														"nodeType": "YulTypedName",
														"src": "13781:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13789:6:8",
														"nodeType": "YulTypedName",
														"src": "13789:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13797:6:8",
														"nodeType": "YulTypedName",
														"src": "13797:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13808:4:8",
														"nodeType": "YulTypedName",
														"src": "13808:4:8",
														"type": ""
													}
												],
												"src": "13659:442:8"
											},
											{
												"body": {
													"nativeSrc": "14213:117:8",
													"nodeType": "YulBlock",
													"src": "14213:117:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14235:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "14235:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14243:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14243:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14231:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14231:3:8"
																		},
																		"nativeSrc": "14231:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14231:14:8"
																	},
																	{
																		"hexValue": "4661696c656420746f207472616e7366657220746f6b656e20746f20636f6e74",
																		"kind": "string",
																		"nativeSrc": "14247:34:8",
																		"nodeType": "YulLiteral",
																		"src": "14247:34:8",
																		"type": "",
																		"value": "Failed to transfer token to cont"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14224:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14224:6:8"
																},
																"nativeSrc": "14224:58:8",
																"nodeType": "YulFunctionCall",
																"src": "14224:58:8"
															},
															"nativeSrc": "14224:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "14224:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14303:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "14303:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14311:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14311:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14299:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14299:3:8"
																		},
																		"nativeSrc": "14299:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14299:15:8"
																	},
																	{
																		"hexValue": "72616374",
																		"kind": "string",
																		"nativeSrc": "14316:6:8",
																		"nodeType": "YulLiteral",
																		"src": "14316:6:8",
																		"type": "",
																		"value": "ract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14292:6:8"
																},
																"nativeSrc": "14292:31:8",
																"nodeType": "YulFunctionCall",
																"src": "14292:31:8"
															},
															"nativeSrc": "14292:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "14292:31:8"
														}
													]
												},
												"name": "store_literal_in_memory_67f2e659058ef888541c8c99ecc7f16c7718ac8cd22dc7327ffb45028052372f",
												"nativeSrc": "14107:223:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14205:6:8",
														"nodeType": "YulTypedName",
														"src": "14205:6:8",
														"type": ""
													}
												],
												"src": "14107:223:8"
											},
											{
												"body": {
													"nativeSrc": "14482:220:8",
													"nodeType": "YulBlock",
													"src": "14482:220:8",
													"statements": [
														{
															"nativeSrc": "14492:74:8",
															"nodeType": "YulAssignment",
															"src": "14492:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14558:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14558:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14563:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14563:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14499:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "14499:58:8"
																},
																"nativeSrc": "14499:67:8",
																"nodeType": "YulFunctionCall",
																"src": "14499:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14492:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14492:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14664:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14664:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_67f2e659058ef888541c8c99ecc7f16c7718ac8cd22dc7327ffb45028052372f",
																	"nativeSrc": "14575:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "14575:88:8"
																},
																"nativeSrc": "14575:93:8",
																"nodeType": "YulFunctionCall",
																"src": "14575:93:8"
															},
															"nativeSrc": "14575:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "14575:93:8"
														},
														{
															"nativeSrc": "14677:19:8",
															"nodeType": "YulAssignment",
															"src": "14677:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14688:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14688:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14693:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14693:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14684:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14684:3:8"
																},
																"nativeSrc": "14684:12:8",
																"nodeType": "YulFunctionCall",
																"src": "14684:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14677:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14677:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_67f2e659058ef888541c8c99ecc7f16c7718ac8cd22dc7327ffb45028052372f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14336:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14470:3:8",
														"nodeType": "YulTypedName",
														"src": "14470:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14478:3:8",
														"nodeType": "YulTypedName",
														"src": "14478:3:8",
														"type": ""
													}
												],
												"src": "14336:366:8"
											},
											{
												"body": {
													"nativeSrc": "14879:248:8",
													"nodeType": "YulBlock",
													"src": "14879:248:8",
													"statements": [
														{
															"nativeSrc": "14889:26:8",
															"nodeType": "YulAssignment",
															"src": "14889:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14901:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14901:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14912:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14912:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14897:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14897:3:8"
																},
																"nativeSrc": "14897:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14897:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14889:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14889:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14936:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14936:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14947:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14947:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14932:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14932:3:8"
																		},
																		"nativeSrc": "14932:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14932:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14955:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "14955:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14961:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14961:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14951:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14951:3:8"
																		},
																		"nativeSrc": "14951:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14951:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14925:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14925:6:8"
																},
																"nativeSrc": "14925:47:8",
																"nodeType": "YulFunctionCall",
																"src": "14925:47:8"
															},
															"nativeSrc": "14925:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "14925:47:8"
														},
														{
															"nativeSrc": "14981:139:8",
															"nodeType": "YulAssignment",
															"src": "14981:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15115:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "15115:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_67f2e659058ef888541c8c99ecc7f16c7718ac8cd22dc7327ffb45028052372f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14989:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "14989:124:8"
																},
																"nativeSrc": "14989:131:8",
																"nodeType": "YulFunctionCall",
																"src": "14989:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14981:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14981:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67f2e659058ef888541c8c99ecc7f16c7718ac8cd22dc7327ffb45028052372f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14708:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14859:9:8",
														"nodeType": "YulTypedName",
														"src": "14859:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14874:4:8",
														"nodeType": "YulTypedName",
														"src": "14874:4:8",
														"type": ""
													}
												],
												"src": "14708:419:8"
											},
											{
												"body": {
													"nativeSrc": "15239:71:8",
													"nodeType": "YulBlock",
													"src": "15239:71:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "15261:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15269:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15269:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15257:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15257:3:8"
																		},
																		"nativeSrc": "15257:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15257:14:8"
																	},
																	{
																		"hexValue": "4661696c656420746f2073656e6420436f696e20746f2075736572",
																		"kind": "string",
																		"nativeSrc": "15273:29:8",
																		"nodeType": "YulLiteral",
																		"src": "15273:29:8",
																		"type": "",
																		"value": "Failed to send Coin to user"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15250:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15250:6:8"
																},
																"nativeSrc": "15250:53:8",
																"nodeType": "YulFunctionCall",
																"src": "15250:53:8"
															},
															"nativeSrc": "15250:53:8",
															"nodeType": "YulExpressionStatement",
															"src": "15250:53:8"
														}
													]
												},
												"name": "store_literal_in_memory_94fe289ce449ee5120ac248b9ed2219226b7a1bc207fe3b8256adbd886108043",
												"nativeSrc": "15133:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15231:6:8",
														"nodeType": "YulTypedName",
														"src": "15231:6:8",
														"type": ""
													}
												],
												"src": "15133:177:8"
											},
											{
												"body": {
													"nativeSrc": "15462:220:8",
													"nodeType": "YulBlock",
													"src": "15462:220:8",
													"statements": [
														{
															"nativeSrc": "15472:74:8",
															"nodeType": "YulAssignment",
															"src": "15472:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15538:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15538:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15543:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15543:2:8",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15479:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "15479:58:8"
																},
																"nativeSrc": "15479:67:8",
																"nodeType": "YulFunctionCall",
																"src": "15479:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15472:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15472:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15644:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15644:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_94fe289ce449ee5120ac248b9ed2219226b7a1bc207fe3b8256adbd886108043",
																	"nativeSrc": "15555:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "15555:88:8"
																},
																"nativeSrc": "15555:93:8",
																"nodeType": "YulFunctionCall",
																"src": "15555:93:8"
															},
															"nativeSrc": "15555:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "15555:93:8"
														},
														{
															"nativeSrc": "15657:19:8",
															"nodeType": "YulAssignment",
															"src": "15657:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15668:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15668:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15673:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15673:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15664:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15664:3:8"
																},
																"nativeSrc": "15664:12:8",
																"nodeType": "YulFunctionCall",
																"src": "15664:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15657:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15657:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_94fe289ce449ee5120ac248b9ed2219226b7a1bc207fe3b8256adbd886108043_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15316:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15450:3:8",
														"nodeType": "YulTypedName",
														"src": "15450:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15458:3:8",
														"nodeType": "YulTypedName",
														"src": "15458:3:8",
														"type": ""
													}
												],
												"src": "15316:366:8"
											},
											{
												"body": {
													"nativeSrc": "15859:248:8",
													"nodeType": "YulBlock",
													"src": "15859:248:8",
													"statements": [
														{
															"nativeSrc": "15869:26:8",
															"nodeType": "YulAssignment",
															"src": "15869:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15881:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "15881:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15892:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15892:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15877:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15877:3:8"
																},
																"nativeSrc": "15877:18:8",
																"nodeType": "YulFunctionCall",
																"src": "15877:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15869:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15869:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15916:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15916:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15927:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15927:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15912:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15912:3:8"
																		},
																		"nativeSrc": "15912:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15912:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15935:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "15935:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15941:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15941:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15931:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15931:3:8"
																		},
																		"nativeSrc": "15931:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15931:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15905:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15905:6:8"
																},
																"nativeSrc": "15905:47:8",
																"nodeType": "YulFunctionCall",
																"src": "15905:47:8"
															},
															"nativeSrc": "15905:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "15905:47:8"
														},
														{
															"nativeSrc": "15961:139:8",
															"nodeType": "YulAssignment",
															"src": "15961:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16095:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "16095:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_94fe289ce449ee5120ac248b9ed2219226b7a1bc207fe3b8256adbd886108043_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15969:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "15969:124:8"
																},
																"nativeSrc": "15969:131:8",
																"nodeType": "YulFunctionCall",
																"src": "15969:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15961:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15961:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_94fe289ce449ee5120ac248b9ed2219226b7a1bc207fe3b8256adbd886108043__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15688:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15839:9:8",
														"nodeType": "YulTypedName",
														"src": "15839:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15854:4:8",
														"nodeType": "YulTypedName",
														"src": "15854:4:8",
														"type": ""
													}
												],
												"src": "15688:419:8"
											},
											{
												"body": {
													"nativeSrc": "16267:288:8",
													"nodeType": "YulBlock",
													"src": "16267:288:8",
													"statements": [
														{
															"nativeSrc": "16277:26:8",
															"nodeType": "YulAssignment",
															"src": "16277:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16289:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "16289:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16300:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16300:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16285:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16285:3:8"
																},
																"nativeSrc": "16285:18:8",
																"nodeType": "YulFunctionCall",
																"src": "16285:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16277:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "16277:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16357:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16357:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16370:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16370:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16381:1:8",
																				"nodeType": "YulLiteral",
																				"src": "16381:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16366:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16366:3:8"
																		},
																		"nativeSrc": "16366:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16366:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16313:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "16313:43:8"
																},
																"nativeSrc": "16313:71:8",
																"nodeType": "YulFunctionCall",
																"src": "16313:71:8"
															},
															"nativeSrc": "16313:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "16313:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16438:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16438:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16451:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16451:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16462:2:8",
																				"nodeType": "YulLiteral",
																				"src": "16462:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16447:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16447:3:8"
																		},
																		"nativeSrc": "16447:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16447:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16394:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "16394:43:8"
																},
																"nativeSrc": "16394:72:8",
																"nodeType": "YulFunctionCall",
																"src": "16394:72:8"
															},
															"nativeSrc": "16394:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "16394:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16520:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16520:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16533:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16533:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16544:2:8",
																				"nodeType": "YulLiteral",
																				"src": "16544:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16529:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16529:3:8"
																		},
																		"nativeSrc": "16529:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16529:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16476:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "16476:43:8"
																},
																"nativeSrc": "16476:72:8",
																"nodeType": "YulFunctionCall",
																"src": "16476:72:8"
															},
															"nativeSrc": "16476:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "16476:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "16113:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16223:9:8",
														"nodeType": "YulTypedName",
														"src": "16223:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16235:6:8",
														"nodeType": "YulTypedName",
														"src": "16235:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16243:6:8",
														"nodeType": "YulTypedName",
														"src": "16243:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16251:6:8",
														"nodeType": "YulTypedName",
														"src": "16251:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16262:4:8",
														"nodeType": "YulTypedName",
														"src": "16262:4:8",
														"type": ""
													}
												],
												"src": "16113:442:8"
											},
											{
												"body": {
													"nativeSrc": "16667:72:8",
													"nodeType": "YulBlock",
													"src": "16667:72:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16689:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "16689:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16697:1:8",
																				"nodeType": "YulLiteral",
																				"src": "16697:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16685:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16685:3:8"
																		},
																		"nativeSrc": "16685:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16685:14:8"
																	},
																	{
																		"hexValue": "53656e6420436f696e20746f2062757920736f6d6520746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "16701:30:8",
																		"nodeType": "YulLiteral",
																		"src": "16701:30:8",
																		"type": "",
																		"value": "Send Coin to buy some tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16678:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16678:6:8"
																},
																"nativeSrc": "16678:54:8",
																"nodeType": "YulFunctionCall",
																"src": "16678:54:8"
															},
															"nativeSrc": "16678:54:8",
															"nodeType": "YulExpressionStatement",
															"src": "16678:54:8"
														}
													]
												},
												"name": "store_literal_in_memory_8f0f6f6f3a705f803e66a028235bd6580e0294fb768d8213f67a27249c5bb7b5",
												"nativeSrc": "16561:178:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16659:6:8",
														"nodeType": "YulTypedName",
														"src": "16659:6:8",
														"type": ""
													}
												],
												"src": "16561:178:8"
											},
											{
												"body": {
													"nativeSrc": "16891:220:8",
													"nodeType": "YulBlock",
													"src": "16891:220:8",
													"statements": [
														{
															"nativeSrc": "16901:74:8",
															"nodeType": "YulAssignment",
															"src": "16901:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16967:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16967:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16972:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16972:2:8",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16908:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "16908:58:8"
																},
																"nativeSrc": "16908:67:8",
																"nodeType": "YulFunctionCall",
																"src": "16908:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16901:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16901:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17073:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17073:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8f0f6f6f3a705f803e66a028235bd6580e0294fb768d8213f67a27249c5bb7b5",
																	"nativeSrc": "16984:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "16984:88:8"
																},
																"nativeSrc": "16984:93:8",
																"nodeType": "YulFunctionCall",
																"src": "16984:93:8"
															},
															"nativeSrc": "16984:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "16984:93:8"
														},
														{
															"nativeSrc": "17086:19:8",
															"nodeType": "YulAssignment",
															"src": "17086:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17097:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17097:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17102:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17102:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17093:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17093:3:8"
																},
																"nativeSrc": "17093:12:8",
																"nodeType": "YulFunctionCall",
																"src": "17093:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17086:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17086:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8f0f6f6f3a705f803e66a028235bd6580e0294fb768d8213f67a27249c5bb7b5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16745:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16879:3:8",
														"nodeType": "YulTypedName",
														"src": "16879:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16887:3:8",
														"nodeType": "YulTypedName",
														"src": "16887:3:8",
														"type": ""
													}
												],
												"src": "16745:366:8"
											},
											{
												"body": {
													"nativeSrc": "17288:248:8",
													"nodeType": "YulBlock",
													"src": "17288:248:8",
													"statements": [
														{
															"nativeSrc": "17298:26:8",
															"nodeType": "YulAssignment",
															"src": "17298:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17310:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "17310:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17321:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17321:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17306:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17306:3:8"
																},
																"nativeSrc": "17306:18:8",
																"nodeType": "YulFunctionCall",
																"src": "17306:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17298:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17298:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17345:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17345:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17356:1:8",
																				"nodeType": "YulLiteral",
																				"src": "17356:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17341:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17341:3:8"
																		},
																		"nativeSrc": "17341:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17341:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17364:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "17364:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17370:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17370:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17360:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17360:3:8"
																		},
																		"nativeSrc": "17360:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17360:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17334:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17334:6:8"
																},
																"nativeSrc": "17334:47:8",
																"nodeType": "YulFunctionCall",
																"src": "17334:47:8"
															},
															"nativeSrc": "17334:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "17334:47:8"
														},
														{
															"nativeSrc": "17390:139:8",
															"nodeType": "YulAssignment",
															"src": "17390:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17524:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "17524:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8f0f6f6f3a705f803e66a028235bd6580e0294fb768d8213f67a27249c5bb7b5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17398:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "17398:124:8"
																},
																"nativeSrc": "17398:131:8",
																"nodeType": "YulFunctionCall",
																"src": "17398:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17390:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17390:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8f0f6f6f3a705f803e66a028235bd6580e0294fb768d8213f67a27249c5bb7b5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17117:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17268:9:8",
														"nodeType": "YulTypedName",
														"src": "17268:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17283:4:8",
														"nodeType": "YulTypedName",
														"src": "17283:4:8",
														"type": ""
													}
												],
												"src": "17117:419:8"
											},
											{
												"body": {
													"nativeSrc": "17648:116:8",
													"nodeType": "YulBlock",
													"src": "17648:116:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17670:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "17670:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17678:1:8",
																				"nodeType": "YulLiteral",
																				"src": "17678:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17666:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17666:3:8"
																		},
																		"nativeSrc": "17666:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17666:14:8"
																	},
																	{
																		"hexValue": "45786365656473206d6178696d756d20746f6b656e7320706572207075726368",
																		"kind": "string",
																		"nativeSrc": "17682:34:8",
																		"nodeType": "YulLiteral",
																		"src": "17682:34:8",
																		"type": "",
																		"value": "Exceeds maximum tokens per purch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17659:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17659:6:8"
																},
																"nativeSrc": "17659:58:8",
																"nodeType": "YulFunctionCall",
																"src": "17659:58:8"
															},
															"nativeSrc": "17659:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "17659:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17738:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "17738:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17746:2:8",
																				"nodeType": "YulLiteral",
																				"src": "17746:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17734:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17734:3:8"
																		},
																		"nativeSrc": "17734:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17734:15:8"
																	},
																	{
																		"hexValue": "617365",
																		"kind": "string",
																		"nativeSrc": "17751:5:8",
																		"nodeType": "YulLiteral",
																		"src": "17751:5:8",
																		"type": "",
																		"value": "ase"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17727:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17727:6:8"
																},
																"nativeSrc": "17727:30:8",
																"nodeType": "YulFunctionCall",
																"src": "17727:30:8"
															},
															"nativeSrc": "17727:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "17727:30:8"
														}
													]
												},
												"name": "store_literal_in_memory_0423aa1eee4f0a53ec9ada5463242621bb79b11b092fc933afd96176da84d685",
												"nativeSrc": "17542:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17640:6:8",
														"nodeType": "YulTypedName",
														"src": "17640:6:8",
														"type": ""
													}
												],
												"src": "17542:222:8"
											},
											{
												"body": {
													"nativeSrc": "17916:220:8",
													"nodeType": "YulBlock",
													"src": "17916:220:8",
													"statements": [
														{
															"nativeSrc": "17926:74:8",
															"nodeType": "YulAssignment",
															"src": "17926:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17992:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17992:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17997:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17997:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17933:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "17933:58:8"
																},
																"nativeSrc": "17933:67:8",
																"nodeType": "YulFunctionCall",
																"src": "17933:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17926:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17926:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18098:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18098:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0423aa1eee4f0a53ec9ada5463242621bb79b11b092fc933afd96176da84d685",
																	"nativeSrc": "18009:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "18009:88:8"
																},
																"nativeSrc": "18009:93:8",
																"nodeType": "YulFunctionCall",
																"src": "18009:93:8"
															},
															"nativeSrc": "18009:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "18009:93:8"
														},
														{
															"nativeSrc": "18111:19:8",
															"nodeType": "YulAssignment",
															"src": "18111:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18122:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18122:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18127:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18127:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18118:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18118:3:8"
																},
																"nativeSrc": "18118:12:8",
																"nodeType": "YulFunctionCall",
																"src": "18118:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18111:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18111:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0423aa1eee4f0a53ec9ada5463242621bb79b11b092fc933afd96176da84d685_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17770:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17904:3:8",
														"nodeType": "YulTypedName",
														"src": "17904:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17912:3:8",
														"nodeType": "YulTypedName",
														"src": "17912:3:8",
														"type": ""
													}
												],
												"src": "17770:366:8"
											},
											{
												"body": {
													"nativeSrc": "18313:248:8",
													"nodeType": "YulBlock",
													"src": "18313:248:8",
													"statements": [
														{
															"nativeSrc": "18323:26:8",
															"nodeType": "YulAssignment",
															"src": "18323:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18335:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "18335:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18346:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18346:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18331:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18331:3:8"
																},
																"nativeSrc": "18331:18:8",
																"nodeType": "YulFunctionCall",
																"src": "18331:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18323:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "18323:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18370:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "18370:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18381:1:8",
																				"nodeType": "YulLiteral",
																				"src": "18381:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18366:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18366:3:8"
																		},
																		"nativeSrc": "18366:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18366:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18389:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "18389:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18395:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "18395:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18385:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18385:3:8"
																		},
																		"nativeSrc": "18385:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18385:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18359:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18359:6:8"
																},
																"nativeSrc": "18359:47:8",
																"nodeType": "YulFunctionCall",
																"src": "18359:47:8"
															},
															"nativeSrc": "18359:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "18359:47:8"
														},
														{
															"nativeSrc": "18415:139:8",
															"nodeType": "YulAssignment",
															"src": "18415:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18549:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "18549:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0423aa1eee4f0a53ec9ada5463242621bb79b11b092fc933afd96176da84d685_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18423:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "18423:124:8"
																},
																"nativeSrc": "18423:131:8",
																"nodeType": "YulFunctionCall",
																"src": "18423:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18415:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "18415:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0423aa1eee4f0a53ec9ada5463242621bb79b11b092fc933afd96176da84d685__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18142:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18293:9:8",
														"nodeType": "YulTypedName",
														"src": "18293:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18308:4:8",
														"nodeType": "YulTypedName",
														"src": "18308:4:8",
														"type": ""
													}
												],
												"src": "18142:419:8"
											},
											{
												"body": {
													"nativeSrc": "18673:133:8",
													"nodeType": "YulBlock",
													"src": "18673:133:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18695:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "18695:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18703:1:8",
																				"nodeType": "YulLiteral",
																				"src": "18703:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18691:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18691:3:8"
																		},
																		"nativeSrc": "18691:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18691:14:8"
																	},
																	{
																		"hexValue": "56656e646f7220636f6e747261637420686173206e6f7420656e6f7567682074",
																		"kind": "string",
																		"nativeSrc": "18707:34:8",
																		"nodeType": "YulLiteral",
																		"src": "18707:34:8",
																		"type": "",
																		"value": "Vendor contract has not enough t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18684:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18684:6:8"
																},
																"nativeSrc": "18684:58:8",
																"nodeType": "YulFunctionCall",
																"src": "18684:58:8"
															},
															"nativeSrc": "18684:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "18684:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18763:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "18763:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18771:2:8",
																				"nodeType": "YulLiteral",
																				"src": "18771:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18759:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18759:3:8"
																		},
																		"nativeSrc": "18759:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18759:15:8"
																	},
																	{
																		"hexValue": "6f6b656e7320696e206974732062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "18776:22:8",
																		"nodeType": "YulLiteral",
																		"src": "18776:22:8",
																		"type": "",
																		"value": "okens in its balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18752:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18752:6:8"
																},
																"nativeSrc": "18752:47:8",
																"nodeType": "YulFunctionCall",
																"src": "18752:47:8"
															},
															"nativeSrc": "18752:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "18752:47:8"
														}
													]
												},
												"name": "store_literal_in_memory_777dbadb3df903f1fcc5211d7b6eb6190bc70fecfae0faab0b322a8f9af4f0eb",
												"nativeSrc": "18567:239:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18665:6:8",
														"nodeType": "YulTypedName",
														"src": "18665:6:8",
														"type": ""
													}
												],
												"src": "18567:239:8"
											},
											{
												"body": {
													"nativeSrc": "18958:220:8",
													"nodeType": "YulBlock",
													"src": "18958:220:8",
													"statements": [
														{
															"nativeSrc": "18968:74:8",
															"nodeType": "YulAssignment",
															"src": "18968:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19034:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19034:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19039:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19039:2:8",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18975:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "18975:58:8"
																},
																"nativeSrc": "18975:67:8",
																"nodeType": "YulFunctionCall",
																"src": "18975:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18968:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18968:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19140:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19140:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_777dbadb3df903f1fcc5211d7b6eb6190bc70fecfae0faab0b322a8f9af4f0eb",
																	"nativeSrc": "19051:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "19051:88:8"
																},
																"nativeSrc": "19051:93:8",
																"nodeType": "YulFunctionCall",
																"src": "19051:93:8"
															},
															"nativeSrc": "19051:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "19051:93:8"
														},
														{
															"nativeSrc": "19153:19:8",
															"nodeType": "YulAssignment",
															"src": "19153:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19164:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19164:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19169:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19169:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19160:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19160:3:8"
																},
																"nativeSrc": "19160:12:8",
																"nodeType": "YulFunctionCall",
																"src": "19160:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19153:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19153:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_777dbadb3df903f1fcc5211d7b6eb6190bc70fecfae0faab0b322a8f9af4f0eb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18812:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18946:3:8",
														"nodeType": "YulTypedName",
														"src": "18946:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18954:3:8",
														"nodeType": "YulTypedName",
														"src": "18954:3:8",
														"type": ""
													}
												],
												"src": "18812:366:8"
											},
											{
												"body": {
													"nativeSrc": "19355:248:8",
													"nodeType": "YulBlock",
													"src": "19355:248:8",
													"statements": [
														{
															"nativeSrc": "19365:26:8",
															"nodeType": "YulAssignment",
															"src": "19365:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19377:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "19377:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19388:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19388:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19373:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19373:3:8"
																},
																"nativeSrc": "19373:18:8",
																"nodeType": "YulFunctionCall",
																"src": "19373:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19365:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "19365:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19412:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "19412:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19423:1:8",
																				"nodeType": "YulLiteral",
																				"src": "19423:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19408:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19408:3:8"
																		},
																		"nativeSrc": "19408:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19408:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19431:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "19431:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19437:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "19437:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19427:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19427:3:8"
																		},
																		"nativeSrc": "19427:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19427:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19401:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "19401:6:8"
																},
																"nativeSrc": "19401:47:8",
																"nodeType": "YulFunctionCall",
																"src": "19401:47:8"
															},
															"nativeSrc": "19401:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "19401:47:8"
														},
														{
															"nativeSrc": "19457:139:8",
															"nodeType": "YulAssignment",
															"src": "19457:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19591:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "19591:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_777dbadb3df903f1fcc5211d7b6eb6190bc70fecfae0faab0b322a8f9af4f0eb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19465:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "19465:124:8"
																},
																"nativeSrc": "19465:131:8",
																"nodeType": "YulFunctionCall",
																"src": "19465:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19457:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "19457:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_777dbadb3df903f1fcc5211d7b6eb6190bc70fecfae0faab0b322a8f9af4f0eb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19184:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19335:9:8",
														"nodeType": "YulTypedName",
														"src": "19335:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19350:4:8",
														"nodeType": "YulTypedName",
														"src": "19350:4:8",
														"type": ""
													}
												],
												"src": "19184:419:8"
											},
											{
												"body": {
													"nativeSrc": "19653:147:8",
													"nodeType": "YulBlock",
													"src": "19653:147:8",
													"statements": [
														{
															"nativeSrc": "19663:25:8",
															"nodeType": "YulAssignment",
															"src": "19663:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19686:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "19686:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19668:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "19668:17:8"
																},
																"nativeSrc": "19668:20:8",
																"nodeType": "YulFunctionCall",
																"src": "19668:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19663:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "19663:1:8"
																}
															]
														},
														{
															"nativeSrc": "19697:25:8",
															"nodeType": "YulAssignment",
															"src": "19697:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19720:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "19720:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19702:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "19702:17:8"
																},
																"nativeSrc": "19702:20:8",
																"nodeType": "YulFunctionCall",
																"src": "19702:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19697:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "19697:1:8"
																}
															]
														},
														{
															"nativeSrc": "19731:16:8",
															"nodeType": "YulAssignment",
															"src": "19731:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19742:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "19742:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19745:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "19745:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19738:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19738:3:8"
																},
																"nativeSrc": "19738:9:8",
																"nodeType": "YulFunctionCall",
																"src": "19738:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "19731:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19731:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19771:22:8",
																"nodeType": "YulBlock",
																"src": "19771:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19773:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "19773:16:8"
																			},
																			"nativeSrc": "19773:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "19773:18:8"
																		},
																		"nativeSrc": "19773:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "19773:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19763:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "19763:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "19766:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19766:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19760:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "19760:2:8"
																},
																"nativeSrc": "19760:10:8",
																"nodeType": "YulFunctionCall",
																"src": "19760:10:8"
															},
															"nativeSrc": "19757:36:8",
															"nodeType": "YulIf",
															"src": "19757:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "19609:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19640:1:8",
														"nodeType": "YulTypedName",
														"src": "19640:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19643:1:8",
														"nodeType": "YulTypedName",
														"src": "19643:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "19649:3:8",
														"nodeType": "YulTypedName",
														"src": "19649:3:8",
														"type": ""
													}
												],
												"src": "19609:191:8"
											},
											{
												"body": {
													"nativeSrc": "19912:115:8",
													"nodeType": "YulBlock",
													"src": "19912:115:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19934:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "19934:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19942:1:8",
																				"nodeType": "YulLiteral",
																				"src": "19942:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19930:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19930:3:8"
																		},
																		"nativeSrc": "19930:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19930:14:8"
																	},
																	{
																		"hexValue": "45786365656473206d6178696d756d20746f6b656e7320706572206164647265",
																		"kind": "string",
																		"nativeSrc": "19946:34:8",
																		"nodeType": "YulLiteral",
																		"src": "19946:34:8",
																		"type": "",
																		"value": "Exceeds maximum tokens per addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19923:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "19923:6:8"
																},
																"nativeSrc": "19923:58:8",
																"nodeType": "YulFunctionCall",
																"src": "19923:58:8"
															},
															"nativeSrc": "19923:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "19923:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20002:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "20002:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20010:2:8",
																				"nodeType": "YulLiteral",
																				"src": "20010:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19998:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19998:3:8"
																		},
																		"nativeSrc": "19998:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19998:15:8"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "20015:4:8",
																		"nodeType": "YulLiteral",
																		"src": "20015:4:8",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19991:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "19991:6:8"
																},
																"nativeSrc": "19991:29:8",
																"nodeType": "YulFunctionCall",
																"src": "19991:29:8"
															},
															"nativeSrc": "19991:29:8",
															"nodeType": "YulExpressionStatement",
															"src": "19991:29:8"
														}
													]
												},
												"name": "store_literal_in_memory_b74ddd97d67f1c1431d609f8321e1007c3c10e04f4b6ab7f03cb3c358aae04a9",
												"nativeSrc": "19806:221:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19904:6:8",
														"nodeType": "YulTypedName",
														"src": "19904:6:8",
														"type": ""
													}
												],
												"src": "19806:221:8"
											},
											{
												"body": {
													"nativeSrc": "20179:220:8",
													"nodeType": "YulBlock",
													"src": "20179:220:8",
													"statements": [
														{
															"nativeSrc": "20189:74:8",
															"nodeType": "YulAssignment",
															"src": "20189:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20255:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "20255:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20260:2:8",
																		"nodeType": "YulLiteral",
																		"src": "20260:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20196:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "20196:58:8"
																},
																"nativeSrc": "20196:67:8",
																"nodeType": "YulFunctionCall",
																"src": "20196:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20189:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "20189:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20361:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "20361:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b74ddd97d67f1c1431d609f8321e1007c3c10e04f4b6ab7f03cb3c358aae04a9",
																	"nativeSrc": "20272:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "20272:88:8"
																},
																"nativeSrc": "20272:93:8",
																"nodeType": "YulFunctionCall",
																"src": "20272:93:8"
															},
															"nativeSrc": "20272:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "20272:93:8"
														},
														{
															"nativeSrc": "20374:19:8",
															"nodeType": "YulAssignment",
															"src": "20374:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20385:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "20385:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20390:2:8",
																		"nodeType": "YulLiteral",
																		"src": "20390:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20381:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "20381:3:8"
																},
																"nativeSrc": "20381:12:8",
																"nodeType": "YulFunctionCall",
																"src": "20381:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20374:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "20374:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b74ddd97d67f1c1431d609f8321e1007c3c10e04f4b6ab7f03cb3c358aae04a9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20033:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20167:3:8",
														"nodeType": "YulTypedName",
														"src": "20167:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20175:3:8",
														"nodeType": "YulTypedName",
														"src": "20175:3:8",
														"type": ""
													}
												],
												"src": "20033:366:8"
											},
											{
												"body": {
													"nativeSrc": "20576:248:8",
													"nodeType": "YulBlock",
													"src": "20576:248:8",
													"statements": [
														{
															"nativeSrc": "20586:26:8",
															"nodeType": "YulAssignment",
															"src": "20586:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20598:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "20598:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20609:2:8",
																		"nodeType": "YulLiteral",
																		"src": "20609:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20594:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "20594:3:8"
																},
																"nativeSrc": "20594:18:8",
																"nodeType": "YulFunctionCall",
																"src": "20594:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20586:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "20586:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20633:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20633:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20644:1:8",
																				"nodeType": "YulLiteral",
																				"src": "20644:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20629:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20629:3:8"
																		},
																		"nativeSrc": "20629:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20629:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20652:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "20652:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20658:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20658:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20648:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20648:3:8"
																		},
																		"nativeSrc": "20648:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20648:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20622:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "20622:6:8"
																},
																"nativeSrc": "20622:47:8",
																"nodeType": "YulFunctionCall",
																"src": "20622:47:8"
															},
															"nativeSrc": "20622:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "20622:47:8"
														},
														{
															"nativeSrc": "20678:139:8",
															"nodeType": "YulAssignment",
															"src": "20678:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20812:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "20812:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b74ddd97d67f1c1431d609f8321e1007c3c10e04f4b6ab7f03cb3c358aae04a9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20686:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "20686:124:8"
																},
																"nativeSrc": "20686:131:8",
																"nodeType": "YulFunctionCall",
																"src": "20686:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20678:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "20678:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b74ddd97d67f1c1431d609f8321e1007c3c10e04f4b6ab7f03cb3c358aae04a9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20405:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20556:9:8",
														"nodeType": "YulTypedName",
														"src": "20556:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20571:4:8",
														"nodeType": "YulTypedName",
														"src": "20571:4:8",
														"type": ""
													}
												],
												"src": "20405:419:8"
											},
											{
												"body": {
													"nativeSrc": "20936:76:8",
													"nodeType": "YulBlock",
													"src": "20936:76:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20958:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "20958:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20966:1:8",
																				"nodeType": "YulLiteral",
																				"src": "20966:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20954:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20954:3:8"
																		},
																		"nativeSrc": "20954:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20954:14:8"
																	},
																	{
																		"hexValue": "4661696c656420746f207472616e7366657220746f6b656e20746f2075736572",
																		"kind": "string",
																		"nativeSrc": "20970:34:8",
																		"nodeType": "YulLiteral",
																		"src": "20970:34:8",
																		"type": "",
																		"value": "Failed to transfer token to user"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20947:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "20947:6:8"
																},
																"nativeSrc": "20947:58:8",
																"nodeType": "YulFunctionCall",
																"src": "20947:58:8"
															},
															"nativeSrc": "20947:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "20947:58:8"
														}
													]
												},
												"name": "store_literal_in_memory_e2144b0476a7562194fa6b400c34b53ef7696dbbbad349dc4312e34d3f08dfe4",
												"nativeSrc": "20830:182:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20928:6:8",
														"nodeType": "YulTypedName",
														"src": "20928:6:8",
														"type": ""
													}
												],
												"src": "20830:182:8"
											},
											{
												"body": {
													"nativeSrc": "21164:220:8",
													"nodeType": "YulBlock",
													"src": "21164:220:8",
													"statements": [
														{
															"nativeSrc": "21174:74:8",
															"nodeType": "YulAssignment",
															"src": "21174:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21240:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "21240:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21245:2:8",
																		"nodeType": "YulLiteral",
																		"src": "21245:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21181:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "21181:58:8"
																},
																"nativeSrc": "21181:67:8",
																"nodeType": "YulFunctionCall",
																"src": "21181:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21174:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21174:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21346:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "21346:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e2144b0476a7562194fa6b400c34b53ef7696dbbbad349dc4312e34d3f08dfe4",
																	"nativeSrc": "21257:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "21257:88:8"
																},
																"nativeSrc": "21257:93:8",
																"nodeType": "YulFunctionCall",
																"src": "21257:93:8"
															},
															"nativeSrc": "21257:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "21257:93:8"
														},
														{
															"nativeSrc": "21359:19:8",
															"nodeType": "YulAssignment",
															"src": "21359:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21370:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "21370:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21375:2:8",
																		"nodeType": "YulLiteral",
																		"src": "21375:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21366:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21366:3:8"
																},
																"nativeSrc": "21366:12:8",
																"nodeType": "YulFunctionCall",
																"src": "21366:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21359:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21359:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e2144b0476a7562194fa6b400c34b53ef7696dbbbad349dc4312e34d3f08dfe4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21018:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21152:3:8",
														"nodeType": "YulTypedName",
														"src": "21152:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21160:3:8",
														"nodeType": "YulTypedName",
														"src": "21160:3:8",
														"type": ""
													}
												],
												"src": "21018:366:8"
											},
											{
												"body": {
													"nativeSrc": "21561:248:8",
													"nodeType": "YulBlock",
													"src": "21561:248:8",
													"statements": [
														{
															"nativeSrc": "21571:26:8",
															"nodeType": "YulAssignment",
															"src": "21571:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21583:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "21583:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21594:2:8",
																		"nodeType": "YulLiteral",
																		"src": "21594:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21579:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21579:3:8"
																},
																"nativeSrc": "21579:18:8",
																"nodeType": "YulFunctionCall",
																"src": "21579:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21571:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "21571:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21618:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "21618:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21629:1:8",
																				"nodeType": "YulLiteral",
																				"src": "21629:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21614:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "21614:3:8"
																		},
																		"nativeSrc": "21614:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "21614:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21637:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "21637:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21643:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "21643:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21633:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "21633:3:8"
																		},
																		"nativeSrc": "21633:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "21633:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21607:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "21607:6:8"
																},
																"nativeSrc": "21607:47:8",
																"nodeType": "YulFunctionCall",
																"src": "21607:47:8"
															},
															"nativeSrc": "21607:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "21607:47:8"
														},
														{
															"nativeSrc": "21663:139:8",
															"nodeType": "YulAssignment",
															"src": "21663:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21797:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "21797:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e2144b0476a7562194fa6b400c34b53ef7696dbbbad349dc4312e34d3f08dfe4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21671:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "21671:124:8"
																},
																"nativeSrc": "21671:131:8",
																"nodeType": "YulFunctionCall",
																"src": "21671:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21663:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "21663:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e2144b0476a7562194fa6b400c34b53ef7696dbbbad349dc4312e34d3f08dfe4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21390:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21541:9:8",
														"nodeType": "YulTypedName",
														"src": "21541:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21556:4:8",
														"nodeType": "YulTypedName",
														"src": "21556:4:8",
														"type": ""
													}
												],
												"src": "21390:419:8"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a2d8682ef54860c1ef3cd46fa53d91bbbf858d0baf98ddfcb7a9b09f0394a5c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Vendor contract has not enough t\")\n\n        mstore(add(memPtr, 32), \"okens to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_a2d8682ef54860c1ef3cd46fa53d91bbbf858d0baf98ddfcb7a9b09f0394a5c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_a2d8682ef54860c1ef3cd46fa53d91bbbf858d0baf98ddfcb7a9b09f0394a5c6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a2d8682ef54860c1ef3cd46fa53d91bbbf858d0baf98ddfcb7a9b09f0394a5c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a2d8682ef54860c1ef3cd46fa53d91bbbf858d0baf98ddfcb7a9b09f0394a5c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ba7ff9bdfaf761c37e9c731eecdaca20fa9dd014fad94a489dcf802907a23131(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to transfer tokens to the\")\n\n        mstore(add(memPtr, 32), \" owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_ba7ff9bdfaf761c37e9c731eecdaca20fa9dd014fad94a489dcf802907a23131_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_ba7ff9bdfaf761c37e9c731eecdaca20fa9dd014fad94a489dcf802907a23131(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba7ff9bdfaf761c37e9c731eecdaca20fa9dd014fad94a489dcf802907a23131__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba7ff9bdfaf761c37e9c731eecdaca20fa9dd014fad94a489dcf802907a23131_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ccebbaa4e3f31f90a91c12c4cfe9a07663574616db39774c30bc82381a7d7e78(memPtr) {\n\n        mstore(add(memPtr, 0), \"Owner has not balance to withdra\")\n\n        mstore(add(memPtr, 32), \"w\")\n\n    }\n\n    function abi_encode_t_stringliteral_ccebbaa4e3f31f90a91c12c4cfe9a07663574616db39774c30bc82381a7d7e78_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_ccebbaa4e3f31f90a91c12c4cfe9a07663574616db39774c30bc82381a7d7e78(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ccebbaa4e3f31f90a91c12c4cfe9a07663574616db39774c30bc82381a7d7e78__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ccebbaa4e3f31f90a91c12c4cfe9a07663574616db39774c30bc82381a7d7e78_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_bd94085211bc56519ad77c66936b2e9317d42596b4c6cc457eca1e820b3c66a5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send user balance back\")\n\n        mstore(add(memPtr, 32), \" to the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_bd94085211bc56519ad77c66936b2e9317d42596b4c6cc457eca1e820b3c66a5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_bd94085211bc56519ad77c66936b2e9317d42596b4c6cc457eca1e820b3c66a5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bd94085211bc56519ad77c66936b2e9317d42596b4c6cc457eca1e820b3c66a5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bd94085211bc56519ad77c66936b2e9317d42596b4c6cc457eca1e820b3c66a5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a3c239de946079d2d0118e3c5cd67afef89696a15aebde596059fa4a511c966c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Specify amount of tokens to sell\")\n\n    }\n\n    function abi_encode_t_stringliteral_a3c239de946079d2d0118e3c5cd67afef89696a15aebde596059fa4a511c966c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_a3c239de946079d2d0118e3c5cd67afef89696a15aebde596059fa4a511c966c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a3c239de946079d2d0118e3c5cd67afef89696a15aebde596059fa4a511c966c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a3c239de946079d2d0118e3c5cd67afef89696a15aebde596059fa4a511c966c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient token balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_5c0b16933219a11e126acac4bdc517d3b683c9ecefce62e995b71ef7d2bce23b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient Coin balance in con\")\n\n        mstore(add(memPtr, 32), \"tract\")\n\n    }\n\n    function abi_encode_t_stringliteral_5c0b16933219a11e126acac4bdc517d3b683c9ecefce62e995b71ef7d2bce23b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_5c0b16933219a11e126acac4bdc517d3b683c9ecefce62e995b71ef7d2bce23b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5c0b16933219a11e126acac4bdc517d3b683c9ecefce62e995b71ef7d2bce23b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5c0b16933219a11e126acac4bdc517d3b683c9ecefce62e995b71ef7d2bce23b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_67f2e659058ef888541c8c99ecc7f16c7718ac8cd22dc7327ffb45028052372f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to transfer token to cont\")\n\n        mstore(add(memPtr, 32), \"ract\")\n\n    }\n\n    function abi_encode_t_stringliteral_67f2e659058ef888541c8c99ecc7f16c7718ac8cd22dc7327ffb45028052372f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_67f2e659058ef888541c8c99ecc7f16c7718ac8cd22dc7327ffb45028052372f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_67f2e659058ef888541c8c99ecc7f16c7718ac8cd22dc7327ffb45028052372f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_67f2e659058ef888541c8c99ecc7f16c7718ac8cd22dc7327ffb45028052372f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_94fe289ce449ee5120ac248b9ed2219226b7a1bc207fe3b8256adbd886108043(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send Coin to user\")\n\n    }\n\n    function abi_encode_t_stringliteral_94fe289ce449ee5120ac248b9ed2219226b7a1bc207fe3b8256adbd886108043_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_94fe289ce449ee5120ac248b9ed2219226b7a1bc207fe3b8256adbd886108043(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94fe289ce449ee5120ac248b9ed2219226b7a1bc207fe3b8256adbd886108043__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94fe289ce449ee5120ac248b9ed2219226b7a1bc207fe3b8256adbd886108043_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_8f0f6f6f3a705f803e66a028235bd6580e0294fb768d8213f67a27249c5bb7b5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Send Coin to buy some tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_8f0f6f6f3a705f803e66a028235bd6580e0294fb768d8213f67a27249c5bb7b5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_8f0f6f6f3a705f803e66a028235bd6580e0294fb768d8213f67a27249c5bb7b5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8f0f6f6f3a705f803e66a028235bd6580e0294fb768d8213f67a27249c5bb7b5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8f0f6f6f3a705f803e66a028235bd6580e0294fb768d8213f67a27249c5bb7b5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0423aa1eee4f0a53ec9ada5463242621bb79b11b092fc933afd96176da84d685(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds maximum tokens per purch\")\n\n        mstore(add(memPtr, 32), \"ase\")\n\n    }\n\n    function abi_encode_t_stringliteral_0423aa1eee4f0a53ec9ada5463242621bb79b11b092fc933afd96176da84d685_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0423aa1eee4f0a53ec9ada5463242621bb79b11b092fc933afd96176da84d685(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0423aa1eee4f0a53ec9ada5463242621bb79b11b092fc933afd96176da84d685__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0423aa1eee4f0a53ec9ada5463242621bb79b11b092fc933afd96176da84d685_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_777dbadb3df903f1fcc5211d7b6eb6190bc70fecfae0faab0b322a8f9af4f0eb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Vendor contract has not enough t\")\n\n        mstore(add(memPtr, 32), \"okens in its balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_777dbadb3df903f1fcc5211d7b6eb6190bc70fecfae0faab0b322a8f9af4f0eb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_777dbadb3df903f1fcc5211d7b6eb6190bc70fecfae0faab0b322a8f9af4f0eb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_777dbadb3df903f1fcc5211d7b6eb6190bc70fecfae0faab0b322a8f9af4f0eb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_777dbadb3df903f1fcc5211d7b6eb6190bc70fecfae0faab0b322a8f9af4f0eb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_b74ddd97d67f1c1431d609f8321e1007c3c10e04f4b6ab7f03cb3c358aae04a9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds maximum tokens per addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_b74ddd97d67f1c1431d609f8321e1007c3c10e04f4b6ab7f03cb3c358aae04a9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_b74ddd97d67f1c1431d609f8321e1007c3c10e04f4b6ab7f03cb3c358aae04a9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b74ddd97d67f1c1431d609f8321e1007c3c10e04f4b6ab7f03cb3c358aae04a9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b74ddd97d67f1c1431d609f8321e1007c3c10e04f4b6ab7f03cb3c358aae04a9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e2144b0476a7562194fa6b400c34b53ef7696dbbbad349dc4312e34d3f08dfe4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to transfer token to user\")\n\n    }\n\n    function abi_encode_t_stringliteral_e2144b0476a7562194fa6b400c34b53ef7696dbbbad349dc4312e34d3f08dfe4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_e2144b0476a7562194fa6b400c34b53ef7696dbbbad349dc4312e34d3f08dfe4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e2144b0476a7562194fa6b400c34b53ef7696dbbbad349dc4312e34d3f08dfe4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e2144b0476a7562194fa6b400c34b53ef7696dbbbad349dc4312e34d3f08dfe4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100f2575f3560e01c80636c11bcd311610089578063cb23284211610058578063cb232842146102d0578063d0febe4c146102fa578063dbb84f1114610318578063f2fde38b14610340576100f2565b80636c11bcd31461022a5780636f9fb98a14610266578063715018a6146102905780638da5cb5b146102a6576100f2565b8063315a095d116100c5578063315a095d1461019a5780633ccfd60b146101c2578063453989b2146101d85780635771520714610200576100f2565b80630a431e52146100f65780631369bfee146101205780631b326fad1461014857806323a1baaa14610170575b5f80fd5b348015610101575f80fd5b5061010a610368565b6040516101179190611009565b60405180910390f35b34801561012b575f80fd5b5061014660048036038101906101419190611050565b61036e565b005b348015610153575f80fd5b5061016e60048036038101906101699190611050565b610380565b005b34801561017b575f80fd5b506101846103a5565b6040516101919190611009565b60405180910390f35b3480156101a5575f80fd5b506101c060048036038101906101bb9190611050565b6103ab565b005b3480156101cd575f80fd5b506101d661059c565b005b3480156101e3575f80fd5b506101fe60048036038101906101f99190611050565b610696565b005b34801561020b575f80fd5b506102146106a8565b6040516102219190611009565b60405180910390f35b348015610235575f80fd5b50610250600480360381019061024b9190611050565b6106ae565b60405161025d9190611009565b60405180910390f35b348015610271575f80fd5b5061027a610a2a565b6040516102879190611009565b60405180910390f35b34801561029b575f80fd5b506102a4610a31565b005b3480156102b1575f80fd5b506102ba610a44565b6040516102c791906110ba565b60405180910390f35b3480156102db575f80fd5b506102e4610a6b565b6040516102f19190611009565b60405180910390f35b610302610a71565b60405161030f9190611009565b60405180910390f35b348015610323575f80fd5b5061033e60048036038101906103399190611050565b610df9565b005b34801561034b575f80fd5b50610366600480360381019061036191906110fd565b610e1e565b005b60055481565b610376610ea2565b8060058190555050565b610388610ea2565b670de0b6b3a76400008161039c9190611155565b60038190555050565b60045481565b6103b3610ea2565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161040e91906110ba565b602060405180830381865afa158015610429573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061044d91906111aa565b9050670de0b6b3a7640000826104639190611155565b8110156104a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049c90611255565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33670de0b6b3a7640000866104f89190611155565b6040518363ffffffff1660e01b8152600401610515929190611273565b6020604051808303815f875af1158015610531573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061055591906112cf565b905080610597576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058e9061136a565b60405180910390fd5b505050565b6105a4610ea2565b5f4790505f81116105ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e1906113f8565b60405180910390fd5b5f3373ffffffffffffffffffffffffffffffffffffffff168260405161060f90611443565b5f6040518083038185875af1925050503d805f8114610649576040519150601f19603f3d011682016040523d82523d5f602084013e61064e565b606091505b5050905080610692576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610689906114c7565b60405180910390fd5b5050565b61069e610ea2565b8060028190555050565b60035481565b5f670de0b6b3a7640000826106c39190611155565b91505f8211610707576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fe9061152f565b60405180910390fd5b8160015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161076291906110ba565b602060405180830381865afa15801561077d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107a191906111aa565b10156107e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d990611597565b60405180910390fd5b5f60025460646107f29190611155565b600554606461080191906115b5565b8461080c9190611155565b6108169190611615565b90508047101561085b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610852906116b5565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016108ba939291906116d3565b6020604051808303815f875af11580156108d6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108fa91906112cf565b90508061093c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093390611778565b60405180910390fd5b5f3373ffffffffffffffffffffffffffffffffffffffff168360405161096190611443565b5f6040518083038185875af1925050503d805f811461099b576040519150601f19603f3d011682016040523d82523d5f602084013e6109a0565b606091505b50509050806109e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109db906117e0565b60405180910390fd5b7fa24838acd4af5195a2396965dae5abf54e84e8c19f5698bb966ae64e29994ee5338685604051610a17939291906117fe565b60405180910390a1829350505050919050565b5f47905090565b610a39610ea2565b610a425f610f29565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b5f803411610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aab9061187d565b60405180910390fd5b5f60025434610ac39190611155565b9050600354811115610b0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b019061190b565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b6591906110ba565b602060405180830381865afa158015610b80573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ba491906111aa565b905081811015610be9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be090611999565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610c4491906110ba565b602060405180830381865afa158015610c5f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c8391906111aa565b90506004548382610c9491906119b7565b1115610cd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccc90611a5a565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610d32929190611273565b6020604051808303815f875af1158015610d4e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d7291906112cf565b905080610db4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dab90611ac2565b60405180910390fd5b7f0a37b72bb67eee30e09084cf386f8a17817c57f620c3ab95fb25d6a20356ec77333486604051610de7939291906117fe565b60405180910390a18394505050505090565b610e01610ea2565b670de0b6b3a764000081610e159190611155565b60048190555050565b610e26610ea2565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e96575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e8d91906110ba565b60405180910390fd5b610e9f81610f29565b50565b610eaa610fea565b73ffffffffffffffffffffffffffffffffffffffff16610ec8610a44565b73ffffffffffffffffffffffffffffffffffffffff1614610f2757610eeb610fea565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f1e91906110ba565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f819050919050565b61100381610ff1565b82525050565b5f60208201905061101c5f830184610ffa565b92915050565b5f80fd5b61102f81610ff1565b8114611039575f80fd5b50565b5f8135905061104a81611026565b92915050565b5f6020828403121561106557611064611022565b5b5f6110728482850161103c565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110a48261107b565b9050919050565b6110b48161109a565b82525050565b5f6020820190506110cd5f8301846110ab565b92915050565b6110dc8161109a565b81146110e6575f80fd5b50565b5f813590506110f7816110d3565b92915050565b5f6020828403121561111257611111611022565b5b5f61111f848285016110e9565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61115f82610ff1565b915061116a83610ff1565b925082820261117881610ff1565b9150828204841483151761118f5761118e611128565b5b5092915050565b5f815190506111a481611026565b92915050565b5f602082840312156111bf576111be611022565b5b5f6111cc84828501611196565b91505092915050565b5f82825260208201905092915050565b7f56656e646f7220636f6e747261637420686173206e6f7420656e6f75676820745f8201527f6f6b656e7320746f207769746864726177000000000000000000000000000000602082015250565b5f61123f6031836111d5565b915061124a826111e5565b604082019050919050565b5f6020820190508181035f83015261126c81611233565b9050919050565b5f6040820190506112865f8301856110ab565b6112936020830184610ffa565b9392505050565b5f8115159050919050565b6112ae8161129a565b81146112b8575f80fd5b50565b5f815190506112c9816112a5565b92915050565b5f602082840312156112e4576112e3611022565b5b5f6112f1848285016112bb565b91505092915050565b7f4661696c656420746f207472616e7366657220746f6b656e7320746f207468655f8201527f206f776e65720000000000000000000000000000000000000000000000000000602082015250565b5f6113546026836111d5565b915061135f826112fa565b604082019050919050565b5f6020820190508181035f83015261138181611348565b9050919050565b7f4f776e657220686173206e6f742062616c616e636520746f20776974686472615f8201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b5f6113e26021836111d5565b91506113ed82611388565b604082019050919050565b5f6020820190508181035f83015261140f816113d6565b9050919050565b5f81905092915050565b50565b5f61142e5f83611416565b915061143982611420565b5f82019050919050565b5f61144d82611423565b9150819050919050565b7f4661696c656420746f2073656e6420757365722062616c616e6365206261636b5f8201527f20746f20746865206f776e657200000000000000000000000000000000000000602082015250565b5f6114b1602d836111d5565b91506114bc82611457565b604082019050919050565b5f6020820190508181035f8301526114de816114a5565b9050919050565b7f5370656369667920616d6f756e74206f6620746f6b656e7320746f2073656c6c5f82015250565b5f6115196020836111d5565b9150611524826114e5565b602082019050919050565b5f6020820190508181035f8301526115468161150d565b9050919050565b7f496e73756666696369656e7420746f6b656e2062616c616e63650000000000005f82015250565b5f611581601a836111d5565b915061158c8261154d565b602082019050919050565b5f6020820190508181035f8301526115ae81611575565b9050919050565b5f6115bf82610ff1565b91506115ca83610ff1565b92508282039050818111156115e2576115e1611128565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61161f82610ff1565b915061162a83610ff1565b92508261163a576116396115e8565b5b828204905092915050565b7f496e73756666696369656e7420436f696e2062616c616e636520696e20636f6e5f8201527f7472616374000000000000000000000000000000000000000000000000000000602082015250565b5f61169f6025836111d5565b91506116aa82611645565b604082019050919050565b5f6020820190508181035f8301526116cc81611693565b9050919050565b5f6060820190506116e65f8301866110ab565b6116f360208301856110ab565b6117006040830184610ffa565b949350505050565b7f4661696c656420746f207472616e7366657220746f6b656e20746f20636f6e745f8201527f7261637400000000000000000000000000000000000000000000000000000000602082015250565b5f6117626024836111d5565b915061176d82611708565b604082019050919050565b5f6020820190508181035f83015261178f81611756565b9050919050565b7f4661696c656420746f2073656e6420436f696e20746f207573657200000000005f82015250565b5f6117ca601b836111d5565b91506117d582611796565b602082019050919050565b5f6020820190508181035f8301526117f7816117be565b9050919050565b5f6060820190506118115f8301866110ab565b61181e6020830185610ffa565b61182b6040830184610ffa565b949350505050565b7f53656e6420436f696e20746f2062757920736f6d6520746f6b656e73000000005f82015250565b5f611867601c836111d5565b915061187282611833565b602082019050919050565b5f6020820190508181035f8301526118948161185b565b9050919050565b7f45786365656473206d6178696d756d20746f6b656e73207065722070757263685f8201527f6173650000000000000000000000000000000000000000000000000000000000602082015250565b5f6118f56023836111d5565b91506119008261189b565b604082019050919050565b5f6020820190508181035f830152611922816118e9565b9050919050565b7f56656e646f7220636f6e747261637420686173206e6f7420656e6f75676820745f8201527f6f6b656e7320696e206974732062616c616e6365000000000000000000000000602082015250565b5f6119836034836111d5565b915061198e82611929565b604082019050919050565b5f6020820190508181035f8301526119b081611977565b9050919050565b5f6119c182610ff1565b91506119cc83610ff1565b92508282019050808211156119e4576119e3611128565b5b92915050565b7f45786365656473206d6178696d756d20746f6b656e73207065722061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f611a446022836111d5565b9150611a4f826119ea565b604082019050919050565b5f6020820190508181035f830152611a7181611a38565b9050919050565b7f4661696c656420746f207472616e7366657220746f6b656e20746f20757365725f82015250565b5f611aac6020836111d5565b9150611ab782611a78565b602082019050919050565b5f6020820190508181035f830152611ad981611aa0565b905091905056fea2646970667358221220b58b0a86ed57721144977166b4487e9628c24678ebed5ecf01683f6b8b94f38764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C11BCD3 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xCB232842 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xCB232842 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xDBB84F11 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x340 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x6C11BCD3 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A6 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x315A095D GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x315A095D EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x453989B2 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x57715207 EQ PUSH2 0x200 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0xA431E52 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x1369BFEE EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x1B326FAD EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x23A1BAAA EQ PUSH2 0x170 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x368 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x36E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x153 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x380 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x59C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x696 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A4 PUSH2 0xA31 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BA PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E4 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0xDF9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x10FD JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x376 PUSH2 0xEA2 JUMP JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x388 PUSH2 0xEA2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3B3 PUSH2 0xEA2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x429 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49C SWAP1 PUSH2 0x1255 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP3 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x531 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x555 SWAP2 SWAP1 PUSH2 0x12CF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x597 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58E SWAP1 PUSH2 0x136A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5A4 PUSH2 0xEA2 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E1 SWAP1 PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x60F SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x64E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x692 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x689 SWAP1 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x69E PUSH2 0xEA2 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x6C3 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 GT PUSH2 0x707 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x152F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x762 SWAP2 SWAP1 PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x77D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A1 SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST LT ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D9 SWAP1 PUSH2 0x1597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 SLOAD PUSH1 0x64 PUSH2 0x7F2 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x64 PUSH2 0x801 SWAP2 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST DUP5 PUSH2 0x80C SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH2 0x816 SWAP2 SWAP1 PUSH2 0x1615 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x85B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x852 SWAP1 PUSH2 0x16B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16D3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8D6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8FA SWAP2 SWAP1 PUSH2 0x12CF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x93C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x933 SWAP1 PUSH2 0x1778 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x961 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x99B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x9E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DB SWAP1 PUSH2 0x17E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xA24838ACD4AF5195A2396965DAE5ABF54E84E8C19F5698BB966AE64E29994EE5 CALLER DUP7 DUP6 PUSH1 0x40 MLOAD PUSH2 0xA17 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP3 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA39 PUSH2 0xEA2 JUMP JUMPDEST PUSH2 0xA42 PUSH0 PUSH2 0xF29 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 CALLVALUE GT PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAB SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 SLOAD CALLVALUE PUSH2 0xAC3 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0xB0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB01 SWAP1 PUSH2 0x190B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB65 SWAP2 SWAP1 PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB80 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA4 SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xBE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE0 SWAP1 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC44 SWAP2 SWAP1 PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC5F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC83 SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST SWAP1 POP PUSH1 0x4 SLOAD DUP4 DUP3 PUSH2 0xC94 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST GT ISZERO PUSH2 0xCD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCC SWAP1 PUSH2 0x1A5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD32 SWAP3 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD4E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD72 SWAP2 SWAP1 PUSH2 0x12CF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xDB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAB SWAP1 PUSH2 0x1AC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xA37B72BB67EEE30E09084CF386F8A17817C57F620C3AB95FB25D6A20356EC77 CALLER CALLVALUE DUP7 PUSH1 0x40 MLOAD PUSH2 0xDE7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP4 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xE01 PUSH2 0xEA2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0xE15 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xE26 PUSH2 0xEA2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE96 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8D SWAP2 SWAP1 PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE9F DUP2 PUSH2 0xF29 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xEAA PUSH2 0xFEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEC8 PUSH2 0xA44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF27 JUMPI PUSH2 0xEEB PUSH2 0xFEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1E SWAP2 SWAP1 PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1003 DUP2 PUSH2 0xFF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x101C PUSH0 DUP4 ADD DUP5 PUSH2 0xFFA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x102F DUP2 PUSH2 0xFF1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1039 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x104A DUP2 PUSH2 0x1026 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1065 JUMPI PUSH2 0x1064 PUSH2 0x1022 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1072 DUP5 DUP3 DUP6 ADD PUSH2 0x103C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10A4 DUP3 PUSH2 0x107B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B4 DUP2 PUSH2 0x109A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10CD PUSH0 DUP4 ADD DUP5 PUSH2 0x10AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10DC DUP2 PUSH2 0x109A JUMP JUMPDEST DUP2 EQ PUSH2 0x10E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10F7 DUP2 PUSH2 0x10D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1112 JUMPI PUSH2 0x1111 PUSH2 0x1022 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x111F DUP5 DUP3 DUP6 ADD PUSH2 0x10E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x115F DUP3 PUSH2 0xFF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x116A DUP4 PUSH2 0xFF1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1178 DUP2 PUSH2 0xFF1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x118F JUMPI PUSH2 0x118E PUSH2 0x1128 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x11A4 DUP2 PUSH2 0x1026 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11BF JUMPI PUSH2 0x11BE PUSH2 0x1022 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11CC DUP5 DUP3 DUP6 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x56656E646F7220636F6E747261637420686173206E6F7420656E6F7567682074 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6B656E7320746F207769746864726177000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x123F PUSH1 0x31 DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x124A DUP3 PUSH2 0x11E5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x126C DUP2 PUSH2 0x1233 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1286 PUSH0 DUP4 ADD DUP6 PUSH2 0x10AB JUMP JUMPDEST PUSH2 0x1293 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFFA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12AE DUP2 PUSH2 0x129A JUMP JUMPDEST DUP2 EQ PUSH2 0x12B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x12C9 DUP2 PUSH2 0x12A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E4 JUMPI PUSH2 0x12E3 PUSH2 0x1022 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12F1 DUP5 DUP3 DUP6 ADD PUSH2 0x12BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207472616E7366657220746F6B656E7320746F20746865 PUSH0 DUP3 ADD MSTORE PUSH32 0x206F776E65720000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1354 PUSH1 0x26 DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x135F DUP3 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1381 DUP2 PUSH2 0x1348 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E657220686173206E6F742062616C616E636520746F2077697468647261 PUSH0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13E2 PUSH1 0x21 DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x13ED DUP3 PUSH2 0x1388 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x140F DUP2 PUSH2 0x13D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x142E PUSH0 DUP4 PUSH2 0x1416 JUMP JUMPDEST SWAP2 POP PUSH2 0x1439 DUP3 PUSH2 0x1420 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x144D DUP3 PUSH2 0x1423 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E6420757365722062616C616E6365206261636B PUSH0 DUP3 ADD MSTORE PUSH32 0x20746F20746865206F776E657200000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14B1 PUSH1 0x2D DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x14BC DUP3 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14DE DUP2 PUSH2 0x14A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5370656369667920616D6F756E74206F6620746F6B656E7320746F2073656C6C PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1519 PUSH1 0x20 DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1524 DUP3 PUSH2 0x14E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1546 DUP2 PUSH2 0x150D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E6365000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1581 PUSH1 0x1A DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x158C DUP3 PUSH2 0x154D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15AE DUP2 PUSH2 0x1575 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15BF DUP3 PUSH2 0xFF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x15CA DUP4 PUSH2 0xFF1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x15E2 JUMPI PUSH2 0x15E1 PUSH2 0x1128 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x161F DUP3 PUSH2 0xFF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x162A DUP4 PUSH2 0xFF1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x163A JUMPI PUSH2 0x1639 PUSH2 0x15E8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420436F696E2062616C616E636520696E20636F6E PUSH0 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x169F PUSH1 0x25 DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x16AA DUP3 PUSH2 0x1645 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16CC DUP2 PUSH2 0x1693 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x16E6 PUSH0 DUP4 ADD DUP7 PUSH2 0x10AB JUMP JUMPDEST PUSH2 0x16F3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10AB JUMP JUMPDEST PUSH2 0x1700 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFFA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207472616E7366657220746F6B656E20746F20636F6E74 PUSH0 DUP3 ADD MSTORE PUSH32 0x7261637400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1762 PUSH1 0x24 DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x176D DUP3 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x178F DUP2 PUSH2 0x1756 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E6420436F696E20746F20757365720000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17CA PUSH1 0x1B DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x17D5 DUP3 PUSH2 0x1796 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17F7 DUP2 PUSH2 0x17BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1811 PUSH0 DUP4 ADD DUP7 PUSH2 0x10AB JUMP JUMPDEST PUSH2 0x181E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFFA JUMP JUMPDEST PUSH2 0x182B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFFA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x53656E6420436F696E20746F2062757920736F6D6520746F6B656E7300000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1867 PUSH1 0x1C DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1872 DUP3 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1894 DUP2 PUSH2 0x185B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178696D756D20746F6B656E7320706572207075726368 PUSH0 DUP3 ADD MSTORE PUSH32 0x6173650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18F5 PUSH1 0x23 DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1900 DUP3 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1922 DUP2 PUSH2 0x18E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56656E646F7220636F6E747261637420686173206E6F7420656E6F7567682074 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6B656E7320696E206974732062616C616E6365000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1983 PUSH1 0x34 DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x198E DUP3 PUSH2 0x1929 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19B0 DUP2 PUSH2 0x1977 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19C1 DUP3 PUSH2 0xFF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x19CC DUP4 PUSH2 0xFF1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x19E4 JUMPI PUSH2 0x19E3 PUSH2 0x1128 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178696D756D20746F6B656E7320706572206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A44 PUSH1 0x22 DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4F DUP3 PUSH2 0x19EA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A71 DUP2 PUSH2 0x1A38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207472616E7366657220746F6B656E20746F2075736572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AAC PUSH1 0x20 DUP4 PUSH2 0x11D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB7 DUP3 PUSH2 0x1A78 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AD9 DUP2 PUSH2 0x1AA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 DUP12 EXP DUP7 0xED JUMPI PUSH19 0x1144977166B4487E9628C24678EBED5ECF0168 EXTCODEHASH PUSH12 0x8B94F38764736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "147:3802:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;474:38;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1211:122;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;938:129;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;368:52;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3559:387;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3237:314;;;;;;;;;;;;;:::i;:::-;;828:102;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;262:52;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2343:886;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1341:107;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;221:34:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1458:877;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1075:128;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;474:38:6;;;;:::o;1211:122::-;1531:13:0;:11;:13::i;:::-;1314:11:6::1;1292:19;:33;;;;1211:122:::0;:::o;938:129::-;1531:13:0;:11;:13::i;:::-;1051:7:6::1;1040:8;:19;;;;:::i;:::-;1017:20;:42;;;;938:129:::0;:::o;368:52::-;;;;:::o;3559:387::-;1531:13:0;:11;:13::i;:::-;3627:20:6::1;3650:12;;;;;;;;;;;:22;;;3681:4;3650:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3627:60;;3732:6;3722;:17;;;;:::i;:::-;3706:12;:33;;3698:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;3807:9;3820:12;;;;;;;;;;;:21;;;3842:10;3864:6;3854;:17;;;;:::i;:::-;3820:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3806:66;;3891:4;3883:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3616:330;;3559:387:::0;:::o;3237:314::-;1531:13:0;:11;:13::i;:::-;3285:20:6::1;3308:21;3285:44;;3363:1;3348:12;:16;3340:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3416:9;3430:10;:15;;3453:12;3430:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3415:55;;;3489:4;3481:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3274:277;;3237:314::o:0;828:102::-;1531:13:0;:11;:13::i;:::-;915:7:6::1;899:13;:23;;;;828:102:::0;:::o;262:52::-;;;;:::o;2343:886::-;2400:18;2460:8;2445:11;:24;;;;:::i;:::-;2431:38;;2502:1;2488:11;:15;2480:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;2597:11;2559:12;;;;;;;;;;;:22;;;2582:10;2559:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;2551:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;2652:19;2727:13;;2721:3;:19;;;;:::i;:::-;2696;;2690:3;:25;;;;:::i;:::-;2675:11;:41;;;;:::i;:::-;2674:67;;;;:::i;:::-;2652:89;;2785:11;2760:21;:36;;2752:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;2852:9;2865:12;;;;;;;;;;;:25;;;2891:10;2911:4;2918:11;2865:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2851:79;;2949:4;2941:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3008:13;3026:10;:15;;3049:11;3026:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3007:58;;;3084:8;3076:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;3142;3153:10;3165:11;3178;3142:48;;;;;;;;:::i;:::-;;;;;;;;3210:11;3203:18;;;;;2343:886;;;:::o;1341:107::-;1392:7;1419:21;1412:28;;1341:107;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;221:34:6:-;;;;:::o;1458:877::-;1503:19;1555:1;1543:9;:13;1535:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1602:19;1636:13;;1624:9;:25;;;;:::i;:::-;1602:47;;1683:20;;1668:11;:35;;1660:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;1756:23;1782:12;;;;;;;;;;;:22;;;1813:4;1782:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1756:63;;1857:11;1838:15;:30;;1830:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1938:19;1960:12;;;;;;;;;;;:22;;;1983:10;1960:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1938:56;;2042:19;;2027:11;2013;:25;;;;:::i;:::-;:48;;2005:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;2114:9;2127:12;;;;;;;;;;;:21;;;2149:10;2161:11;2127:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2113:60;;2192:4;2184:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;2251:45;2261:10;2273:9;2284:11;2251:45;;;;;;;;:::i;:::-;;;;;;;;2316:11;2309:18;;;;;;1458:877;:::o;1075:128::-;1531:13:0;:11;:13::i;:::-;1186:8:6::1;1175;:20;;;;:::i;:::-;1153:19;:42;;;;1075:128:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;7:77:8:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:122::-;2036:24;2054:5;2036:24;:::i;:::-;2029:5;2026:35;2016:63;;2075:1;2072;2065:12;2016:63;1963:122;:::o;2091:139::-;2137:5;2175:6;2162:20;2153:29;;2191:33;2218:5;2191:33;:::i;:::-;2091:139;;;;:::o;2236:329::-;2295:6;2344:2;2332:9;2323:7;2319:23;2315:32;2312:119;;;2350:79;;:::i;:::-;2312:119;2470:1;2495:53;2540:7;2531:6;2520:9;2516:22;2495:53;:::i;:::-;2485:63;;2441:117;2236:329;;;;:::o;2571:180::-;2619:77;2616:1;2609:88;2716:4;2713:1;2706:15;2740:4;2737:1;2730:15;2757:410;2797:7;2820:20;2838:1;2820:20;:::i;:::-;2815:25;;2854:20;2872:1;2854:20;:::i;:::-;2849:25;;2909:1;2906;2902:9;2931:30;2949:11;2931:30;:::i;:::-;2920:41;;3110:1;3101:7;3097:15;3094:1;3091:22;3071:1;3064:9;3044:83;3021:139;;3140:18;;:::i;:::-;3021:139;2805:362;2757:410;;;;:::o;3173:143::-;3230:5;3261:6;3255:13;3246:22;;3277:33;3304:5;3277:33;:::i;:::-;3173:143;;;;:::o;3322:351::-;3392:6;3441:2;3429:9;3420:7;3416:23;3412:32;3409:119;;;3447:79;;:::i;:::-;3409:119;3567:1;3592:64;3648:7;3639:6;3628:9;3624:22;3592:64;:::i;:::-;3582:74;;3538:128;3322:351;;;;:::o;3679:169::-;3763:11;3797:6;3792:3;3785:19;3837:4;3832:3;3828:14;3813:29;;3679:169;;;;:::o;3854:236::-;3994:34;3990:1;3982:6;3978:14;3971:58;4063:19;4058:2;4050:6;4046:15;4039:44;3854:236;:::o;4096:366::-;4238:3;4259:67;4323:2;4318:3;4259:67;:::i;:::-;4252:74;;4335:93;4424:3;4335:93;:::i;:::-;4453:2;4448:3;4444:12;4437:19;;4096:366;;;:::o;4468:419::-;4634:4;4672:2;4661:9;4657:18;4649:26;;4721:9;4715:4;4711:20;4707:1;4696:9;4692:17;4685:47;4749:131;4875:4;4749:131;:::i;:::-;4741:139;;4468:419;;;:::o;4893:332::-;5014:4;5052:2;5041:9;5037:18;5029:26;;5065:71;5133:1;5122:9;5118:17;5109:6;5065:71;:::i;:::-;5146:72;5214:2;5203:9;5199:18;5190:6;5146:72;:::i;:::-;4893:332;;;;;:::o;5231:90::-;5265:7;5308:5;5301:13;5294:21;5283:32;;5231:90;;;:::o;5327:116::-;5397:21;5412:5;5397:21;:::i;:::-;5390:5;5387:32;5377:60;;5433:1;5430;5423:12;5377:60;5327:116;:::o;5449:137::-;5503:5;5534:6;5528:13;5519:22;;5550:30;5574:5;5550:30;:::i;:::-;5449:137;;;;:::o;5592:345::-;5659:6;5708:2;5696:9;5687:7;5683:23;5679:32;5676:119;;;5714:79;;:::i;:::-;5676:119;5834:1;5859:61;5912:7;5903:6;5892:9;5888:22;5859:61;:::i;:::-;5849:71;;5805:125;5592:345;;;;:::o;5943:225::-;6083:34;6079:1;6071:6;6067:14;6060:58;6152:8;6147:2;6139:6;6135:15;6128:33;5943:225;:::o;6174:366::-;6316:3;6337:67;6401:2;6396:3;6337:67;:::i;:::-;6330:74;;6413:93;6502:3;6413:93;:::i;:::-;6531:2;6526:3;6522:12;6515:19;;6174:366;;;:::o;6546:419::-;6712:4;6750:2;6739:9;6735:18;6727:26;;6799:9;6793:4;6789:20;6785:1;6774:9;6770:17;6763:47;6827:131;6953:4;6827:131;:::i;:::-;6819:139;;6546:419;;;:::o;6971:220::-;7111:34;7107:1;7099:6;7095:14;7088:58;7180:3;7175:2;7167:6;7163:15;7156:28;6971:220;:::o;7197:366::-;7339:3;7360:67;7424:2;7419:3;7360:67;:::i;:::-;7353:74;;7436:93;7525:3;7436:93;:::i;:::-;7554:2;7549:3;7545:12;7538:19;;7197:366;;;:::o;7569:419::-;7735:4;7773:2;7762:9;7758:18;7750:26;;7822:9;7816:4;7812:20;7808:1;7797:9;7793:17;7786:47;7850:131;7976:4;7850:131;:::i;:::-;7842:139;;7569:419;;;:::o;7994:147::-;8095:11;8132:3;8117:18;;7994:147;;;;:::o;8147:114::-;;:::o;8267:398::-;8426:3;8447:83;8528:1;8523:3;8447:83;:::i;:::-;8440:90;;8539:93;8628:3;8539:93;:::i;:::-;8657:1;8652:3;8648:11;8641:18;;8267:398;;;:::o;8671:379::-;8855:3;8877:147;9020:3;8877:147;:::i;:::-;8870:154;;9041:3;9034:10;;8671:379;;;:::o;9056:232::-;9196:34;9192:1;9184:6;9180:14;9173:58;9265:15;9260:2;9252:6;9248:15;9241:40;9056:232;:::o;9294:366::-;9436:3;9457:67;9521:2;9516:3;9457:67;:::i;:::-;9450:74;;9533:93;9622:3;9533:93;:::i;:::-;9651:2;9646:3;9642:12;9635:19;;9294:366;;;:::o;9666:419::-;9832:4;9870:2;9859:9;9855:18;9847:26;;9919:9;9913:4;9909:20;9905:1;9894:9;9890:17;9883:47;9947:131;10073:4;9947:131;:::i;:::-;9939:139;;9666:419;;;:::o;10091:182::-;10231:34;10227:1;10219:6;10215:14;10208:58;10091:182;:::o;10279:366::-;10421:3;10442:67;10506:2;10501:3;10442:67;:::i;:::-;10435:74;;10518:93;10607:3;10518:93;:::i;:::-;10636:2;10631:3;10627:12;10620:19;;10279:366;;;:::o;10651:419::-;10817:4;10855:2;10844:9;10840:18;10832:26;;10904:9;10898:4;10894:20;10890:1;10879:9;10875:17;10868:47;10932:131;11058:4;10932:131;:::i;:::-;10924:139;;10651:419;;;:::o;11076:176::-;11216:28;11212:1;11204:6;11200:14;11193:52;11076:176;:::o;11258:366::-;11400:3;11421:67;11485:2;11480:3;11421:67;:::i;:::-;11414:74;;11497:93;11586:3;11497:93;:::i;:::-;11615:2;11610:3;11606:12;11599:19;;11258:366;;;:::o;11630:419::-;11796:4;11834:2;11823:9;11819:18;11811:26;;11883:9;11877:4;11873:20;11869:1;11858:9;11854:17;11847:47;11911:131;12037:4;11911:131;:::i;:::-;11903:139;;11630:419;;;:::o;12055:194::-;12095:4;12115:20;12133:1;12115:20;:::i;:::-;12110:25;;12149:20;12167:1;12149:20;:::i;:::-;12144:25;;12193:1;12190;12186:9;12178:17;;12217:1;12211:4;12208:11;12205:37;;;12222:18;;:::i;:::-;12205:37;12055:194;;;;:::o;12255:180::-;12303:77;12300:1;12293:88;12400:4;12397:1;12390:15;12424:4;12421:1;12414:15;12441:185;12481:1;12498:20;12516:1;12498:20;:::i;:::-;12493:25;;12532:20;12550:1;12532:20;:::i;:::-;12527:25;;12571:1;12561:35;;12576:18;;:::i;:::-;12561:35;12618:1;12615;12611:9;12606:14;;12441:185;;;;:::o;12632:224::-;12772:34;12768:1;12760:6;12756:14;12749:58;12841:7;12836:2;12828:6;12824:15;12817:32;12632:224;:::o;12862:366::-;13004:3;13025:67;13089:2;13084:3;13025:67;:::i;:::-;13018:74;;13101:93;13190:3;13101:93;:::i;:::-;13219:2;13214:3;13210:12;13203:19;;12862:366;;;:::o;13234:419::-;13400:4;13438:2;13427:9;13423:18;13415:26;;13487:9;13481:4;13477:20;13473:1;13462:9;13458:17;13451:47;13515:131;13641:4;13515:131;:::i;:::-;13507:139;;13234:419;;;:::o;13659:442::-;13808:4;13846:2;13835:9;13831:18;13823:26;;13859:71;13927:1;13916:9;13912:17;13903:6;13859:71;:::i;:::-;13940:72;14008:2;13997:9;13993:18;13984:6;13940:72;:::i;:::-;14022;14090:2;14079:9;14075:18;14066:6;14022:72;:::i;:::-;13659:442;;;;;;:::o;14107:223::-;14247:34;14243:1;14235:6;14231:14;14224:58;14316:6;14311:2;14303:6;14299:15;14292:31;14107:223;:::o;14336:366::-;14478:3;14499:67;14563:2;14558:3;14499:67;:::i;:::-;14492:74;;14575:93;14664:3;14575:93;:::i;:::-;14693:2;14688:3;14684:12;14677:19;;14336:366;;;:::o;14708:419::-;14874:4;14912:2;14901:9;14897:18;14889:26;;14961:9;14955:4;14951:20;14947:1;14936:9;14932:17;14925:47;14989:131;15115:4;14989:131;:::i;:::-;14981:139;;14708:419;;;:::o;15133:177::-;15273:29;15269:1;15261:6;15257:14;15250:53;15133:177;:::o;15316:366::-;15458:3;15479:67;15543:2;15538:3;15479:67;:::i;:::-;15472:74;;15555:93;15644:3;15555:93;:::i;:::-;15673:2;15668:3;15664:12;15657:19;;15316:366;;;:::o;15688:419::-;15854:4;15892:2;15881:9;15877:18;15869:26;;15941:9;15935:4;15931:20;15927:1;15916:9;15912:17;15905:47;15969:131;16095:4;15969:131;:::i;:::-;15961:139;;15688:419;;;:::o;16113:442::-;16262:4;16300:2;16289:9;16285:18;16277:26;;16313:71;16381:1;16370:9;16366:17;16357:6;16313:71;:::i;:::-;16394:72;16462:2;16451:9;16447:18;16438:6;16394:72;:::i;:::-;16476;16544:2;16533:9;16529:18;16520:6;16476:72;:::i;:::-;16113:442;;;;;;:::o;16561:178::-;16701:30;16697:1;16689:6;16685:14;16678:54;16561:178;:::o;16745:366::-;16887:3;16908:67;16972:2;16967:3;16908:67;:::i;:::-;16901:74;;16984:93;17073:3;16984:93;:::i;:::-;17102:2;17097:3;17093:12;17086:19;;16745:366;;;:::o;17117:419::-;17283:4;17321:2;17310:9;17306:18;17298:26;;17370:9;17364:4;17360:20;17356:1;17345:9;17341:17;17334:47;17398:131;17524:4;17398:131;:::i;:::-;17390:139;;17117:419;;;:::o;17542:222::-;17682:34;17678:1;17670:6;17666:14;17659:58;17751:5;17746:2;17738:6;17734:15;17727:30;17542:222;:::o;17770:366::-;17912:3;17933:67;17997:2;17992:3;17933:67;:::i;:::-;17926:74;;18009:93;18098:3;18009:93;:::i;:::-;18127:2;18122:3;18118:12;18111:19;;17770:366;;;:::o;18142:419::-;18308:4;18346:2;18335:9;18331:18;18323:26;;18395:9;18389:4;18385:20;18381:1;18370:9;18366:17;18359:47;18423:131;18549:4;18423:131;:::i;:::-;18415:139;;18142:419;;;:::o;18567:239::-;18707:34;18703:1;18695:6;18691:14;18684:58;18776:22;18771:2;18763:6;18759:15;18752:47;18567:239;:::o;18812:366::-;18954:3;18975:67;19039:2;19034:3;18975:67;:::i;:::-;18968:74;;19051:93;19140:3;19051:93;:::i;:::-;19169:2;19164:3;19160:12;19153:19;;18812:366;;;:::o;19184:419::-;19350:4;19388:2;19377:9;19373:18;19365:26;;19437:9;19431:4;19427:20;19423:1;19412:9;19408:17;19401:47;19465:131;19591:4;19465:131;:::i;:::-;19457:139;;19184:419;;;:::o;19609:191::-;19649:3;19668:20;19686:1;19668:20;:::i;:::-;19663:25;;19702:20;19720:1;19702:20;:::i;:::-;19697:25;;19745:1;19742;19738:9;19731:16;;19766:3;19763:1;19760:10;19757:36;;;19773:18;;:::i;:::-;19757:36;19609:191;;;;:::o;19806:221::-;19946:34;19942:1;19934:6;19930:14;19923:58;20015:4;20010:2;20002:6;19998:15;19991:29;19806:221;:::o;20033:366::-;20175:3;20196:67;20260:2;20255:3;20196:67;:::i;:::-;20189:74;;20272:93;20361:3;20272:93;:::i;:::-;20390:2;20385:3;20381:12;20374:19;;20033:366;;;:::o;20405:419::-;20571:4;20609:2;20598:9;20594:18;20586:26;;20658:9;20652:4;20648:20;20644:1;20633:9;20629:17;20622:47;20686:131;20812:4;20686:131;:::i;:::-;20678:139;;20405:419;;;:::o;20830:182::-;20970:34;20966:1;20958:6;20954:14;20947:58;20830:182;:::o;21018:366::-;21160:3;21181:67;21245:2;21240:3;21181:67;:::i;:::-;21174:74;;21257:93;21346:3;21257:93;:::i;:::-;21375:2;21370:3;21366:12;21359:19;;21018:366;;;:::o;21390:419::-;21556:4;21594:2;21583:9;21579:18;21571:26;;21643:9;21637:4;21633:20;21629:1;21618:9;21614:17;21607:47;21671:131;21797:4;21671:131;:::i;:::-;21663:139;;21390:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1386800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyTokens()": "infinite",
								"getContractBalance()": "379",
								"maxTokensPerAddress()": "2515",
								"maxTokensPerPurchase()": "2514",
								"owner()": "2604",
								"renounceOwnership()": "infinite",
								"sellDiscountPercent()": "2449",
								"sellTokens(uint256)": "infinite",
								"setMaxTokensPerAddress(uint256)": "infinite",
								"setMaxTokensPerPurchase(uint256)": "infinite",
								"setSellDiscountPercent(uint256)": "infinite",
								"setTokensPerCoin(uint256)": "infinite",
								"tokensPerCoin()": "2447",
								"transferOwnership(address)": "infinite",
								"withdraw()": "infinite",
								"withdrawTokens(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 147,
									"end": 3949,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 147,
									"end": 3949,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 147,
									"end": 3949,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 255,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 221,
									"end": 255,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 221,
									"end": 255,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 300,
									"end": 314,
									"name": "PUSH",
									"source": 6,
									"value": "3635C9ADC5DEA00000"
								},
								{
									"begin": 262,
									"end": 314,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 262,
									"end": 314,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 405,
									"end": 420,
									"name": "PUSH",
									"source": 6,
									"value": "10F0CF064DD59200000"
								},
								{
									"begin": 368,
									"end": 420,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 368,
									"end": 420,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 511,
									"end": 512,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 474,
									"end": 512,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 474,
									"end": 512,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 706,
									"end": 820,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 706,
									"end": 820,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 706,
									"end": 820,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 706,
									"end": 820,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 706,
									"end": 820,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 706,
									"end": 820,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 706,
									"end": 820,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 706,
									"end": 820,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 748,
									"end": 758,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 799,
									"end": 811,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 771,
									"end": 783,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 771,
									"end": 783,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 812,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 771,
									"end": 812,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 771,
									"end": 812,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 771,
									"end": 812,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 771,
									"end": 812,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 771,
									"end": 812,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 771,
									"end": 812,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 771,
									"end": 812,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 771,
									"end": 812,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 771,
									"end": 812,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 771,
									"end": 812,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 771,
									"end": 812,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 771,
									"end": 812,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 771,
									"end": 812,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 771,
									"end": 812,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 771,
									"end": 812,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 771,
									"end": 812,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 771,
									"end": 812,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 706,
									"end": 820,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 147,
									"end": 3949,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 147,
									"end": 3949,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 147,
									"end": 3949,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 147,
									"end": 3949,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 147,
									"end": 3949,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 147,
									"end": 3949,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 147,
									"end": 3949,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 147,
									"end": 3949,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 3949,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 147,
									"end": 3949,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 3949,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b58b0a86ed57721144977166b4487e9628c24678ebed5ecf01683f6b8b94f38764736f6c634300081a0033",
									".code": [
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "6C11BCD3"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "CB232842"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "CB232842"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "D0FEBE4C"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "DBB84F11"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "6C11BCD3"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "6F9FB98A"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "315A095D"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "315A095D"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "3CCFD60B"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "453989B2"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "57715207"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "A431E52"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "1369BFEE"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "1B326FAD"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "23A1BAAA"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 147,
											"end": 3949,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 474,
											"end": 512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 474,
											"end": 512,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 474,
											"end": 512,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 474,
											"end": 512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 474,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 474,
											"end": 512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 474,
											"end": 512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 474,
											"end": 512,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 474,
											"end": 512,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 474,
											"end": 512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 474,
											"end": 512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 474,
											"end": 512,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1211,
											"end": 1333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1211,
											"end": 1333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 938,
											"end": 1067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 938,
											"end": 1067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 368,
											"end": 420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 368,
											"end": 420,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 420,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 368,
											"end": 420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 368,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 368,
											"end": 420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 368,
											"end": 420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 420,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 368,
											"end": 420,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 368,
											"end": 420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 368,
											"end": 420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 420,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3559,
											"end": 3946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3559,
											"end": 3946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3551,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3237,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3551,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3551,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3551,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3237,
											"end": 3551,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3551,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3551,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3551,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3551,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3237,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3237,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3237,
											"end": 3551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3551,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3237,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3551,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 828,
											"end": 930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 828,
											"end": 930,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 930,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 828,
											"end": 930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 828,
											"end": 930,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 828,
											"end": 930,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 828,
											"end": 930,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 828,
											"end": 930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 828,
											"end": 930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 828,
											"end": 930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 828,
											"end": 930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 262,
											"end": 314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 262,
											"end": 314,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 314,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 262,
											"end": 314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 262,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 262,
											"end": 314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 262,
											"end": 314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 314,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 262,
											"end": 314,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 262,
											"end": 314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 262,
											"end": 314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 314,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2343,
											"end": 3229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2343,
											"end": 3229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2343,
											"end": 3229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1341,
											"end": 1448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1341,
											"end": 1448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 221,
											"end": 255,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 221,
											"end": 255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 221,
											"end": 255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 221,
											"end": 255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 221,
											"end": 255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 221,
											"end": 255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 221,
											"end": 255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 221,
											"end": 255,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 221,
											"end": 255,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 221,
											"end": 255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 221,
											"end": 255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 221,
											"end": 255,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1458,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1458,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1075,
											"end": 1203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1075,
											"end": 1203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 474,
											"end": 512,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 474,
											"end": 512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 474,
											"end": 512,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 474,
											"end": 512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1325,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1292,
											"end": 1311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1292,
											"end": 1325,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1292,
											"end": 1325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1292,
											"end": 1325,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1292,
											"end": 1325,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1040,
											"end": 1048,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1059,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1040,
											"end": 1059,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1059,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1059,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1040,
											"end": 1059,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1059,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1040,
											"end": 1059,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 1037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1017,
											"end": 1059,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 1059,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 1059,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 1059,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 368,
											"end": 420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 368,
											"end": 420,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 368,
											"end": 420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3650,
											"end": 3662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3662,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3662,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3662,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3650,
											"end": 3662,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3662,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3662,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3650,
											"end": 3662,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3650,
											"end": 3672,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 3681,
											"end": 3685,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3650,
											"end": 3687,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3650,
											"end": 3687,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3650,
											"end": 3687,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3687,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3687,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3722,
											"end": 3728,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3722,
											"end": 3739,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3739,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 3722,
											"end": 3739,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3739,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3722,
											"end": 3739,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3718,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3739,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3739,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3698,
											"end": 3793,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3698,
											"end": 3793,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3698,
											"end": 3793,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3793,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3698,
											"end": 3793,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3698,
											"end": 3793,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3698,
											"end": 3793,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3793,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3698,
											"end": 3793,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3698,
											"end": 3793,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3793,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3793,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3793,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3793,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3793,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3793,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3698,
											"end": 3793,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3820,
											"end": 3832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3832,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3832,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3832,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3820,
											"end": 3832,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3832,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3832,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3820,
											"end": 3832,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3820,
											"end": 3841,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 3842,
											"end": 3852,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3864,
											"end": 3870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3854,
											"end": 3860,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3854,
											"end": 3871,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3854,
											"end": 3871,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3854,
											"end": 3871,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3854,
											"end": 3871,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 3854,
											"end": 3871,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3854,
											"end": 3871,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3854,
											"end": 3871,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3820,
											"end": 3872,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3872,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3820,
											"end": 3872,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3820,
											"end": 3872,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3872,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3872,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3895,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3883,
											"end": 3938,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3883,
											"end": 3938,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3883,
											"end": 3938,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3938,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3883,
											"end": 3938,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3883,
											"end": 3938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3883,
											"end": 3938,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3938,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3883,
											"end": 3938,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3883,
											"end": 3938,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3938,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3938,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3938,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3938,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3938,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3883,
											"end": 3938,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3946,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3946,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3551,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3237,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3308,
											"end": 3329,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3329,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3329,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3363,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3348,
											"end": 3360,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3348,
											"end": 3364,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3340,
											"end": 3402,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3340,
											"end": 3402,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3340,
											"end": 3402,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3402,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3340,
											"end": 3402,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3340,
											"end": 3402,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3340,
											"end": 3402,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3402,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3340,
											"end": 3402,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3340,
											"end": 3402,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3402,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3402,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3402,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3402,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3402,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3402,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3340,
											"end": 3402,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3430,
											"end": 3440,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3430,
											"end": 3445,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3465,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3430,
											"end": 3470,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3493,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3481,
											"end": 3543,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3481,
											"end": 3543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3481,
											"end": 3543,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3543,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3481,
											"end": 3543,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3481,
											"end": 3543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3481,
											"end": 3543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3481,
											"end": 3543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3481,
											"end": 3543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3543,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3481,
											"end": 3543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3274,
											"end": 3551,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3274,
											"end": 3551,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 828,
											"end": 930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 915,
											"end": 922,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 899,
											"end": 912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 899,
											"end": 922,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 899,
											"end": 922,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 899,
											"end": 922,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 899,
											"end": 922,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 828,
											"end": 930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 262,
											"end": 314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 262,
											"end": 314,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 262,
											"end": 314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2400,
											"end": 2418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2468,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2445,
											"end": 2456,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2445,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2445,
											"end": 2469,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2445,
											"end": 2469,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2445,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2445,
											"end": 2469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2445,
											"end": 2469,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2445,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2469,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2502,
											"end": 2503,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2499,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2488,
											"end": 2503,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2480,
											"end": 2540,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2540,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2480,
											"end": 2540,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2540,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2480,
											"end": 2540,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2540,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2540,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2480,
											"end": 2540,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2480,
											"end": 2540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2480,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2540,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2480,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2540,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2480,
											"end": 2540,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2540,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2540,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2540,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2540,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2540,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2480,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2597,
											"end": 2608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2559,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2559,
											"end": 2571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2571,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2559,
											"end": 2571,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2571,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2559,
											"end": 2571,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2559,
											"end": 2581,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 2582,
											"end": 2592,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2559,
											"end": 2593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2559,
											"end": 2593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2559,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2608,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2608,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2551,
											"end": 2639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2671,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2727,
											"end": 2740,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2724,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2721,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2721,
											"end": 2740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2721,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2740,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2721,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2696,
											"end": 2715,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2696,
											"end": 2715,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2693,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2690,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2690,
											"end": 2715,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2690,
											"end": 2715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2715,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2690,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2716,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2675,
											"end": 2716,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2716,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2716,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2675,
											"end": 2716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2716,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2675,
											"end": 2716,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2674,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2674,
											"end": 2741,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2674,
											"end": 2741,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2674,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2674,
											"end": 2741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2674,
											"end": 2741,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2674,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2741,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2741,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2785,
											"end": 2796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2760,
											"end": 2781,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 2760,
											"end": 2796,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2760,
											"end": 2796,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2752,
											"end": 2838,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2838,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2752,
											"end": 2838,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2838,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2752,
											"end": 2838,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2838,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2838,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2752,
											"end": 2838,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2752,
											"end": 2838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2752,
											"end": 2838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2838,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2752,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2838,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2752,
											"end": 2838,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2838,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2838,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2838,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2838,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2838,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2752,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2852,
											"end": 2861,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2877,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2865,
											"end": 2877,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2877,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2877,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2877,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2877,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2865,
											"end": 2877,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2877,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2877,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2877,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2877,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2890,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2890,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2890,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 2891,
											"end": 2901,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2915,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2929,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2865,
											"end": 2930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2865,
											"end": 2930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2865,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2930,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2930,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2949,
											"end": 2953,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2941,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2941,
											"end": 2994,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2941,
											"end": 2994,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2941,
											"end": 2994,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2941,
											"end": 2994,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2941,
											"end": 2994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2941,
											"end": 2994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2941,
											"end": 2994,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2941,
											"end": 2994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2941,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2941,
											"end": 2994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2941,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2941,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2941,
											"end": 2994,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2941,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2941,
											"end": 2994,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2941,
											"end": 2994,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2941,
											"end": 2994,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2941,
											"end": 2994,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2941,
											"end": 2994,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2941,
											"end": 2994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2941,
											"end": 2994,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2941,
											"end": 2994,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2941,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3021,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3036,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3041,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3026,
											"end": 3041,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3049,
											"end": 3060,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3026,
											"end": 3065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3007,
											"end": 3065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3007,
											"end": 3065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3007,
											"end": 3065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 3076,
											"end": 3124,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3124,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3124,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3124,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3076,
											"end": 3124,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3124,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3124,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3076,
											"end": 3124,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3076,
											"end": 3124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 3076,
											"end": 3124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3124,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3076,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3124,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3124,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3124,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3124,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3124,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3124,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3124,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 3076,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3190,
											"name": "PUSH",
											"source": 6,
											"value": "A24838ACD4AF5195A2396965DAE5ABF54E84E8C19F5698BB966AE64E29994EE5"
										},
										{
											"begin": 3153,
											"end": 3163,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3165,
											"end": 3176,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3178,
											"end": 3189,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3190,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3142,
											"end": 3190,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3142,
											"end": 3190,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3190,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3190,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3190,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3142,
											"end": 3190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3190,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3142,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3190,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3142,
											"end": 3190,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3190,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3190,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3190,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3190,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3190,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3221,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 3229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1440,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 221,
											"end": 255,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 221,
											"end": 255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 221,
											"end": 255,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 221,
											"end": 255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1543,
											"end": 1556,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 1535,
											"end": 1589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1589,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1535,
											"end": 1589,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1589,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1535,
											"end": 1589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1589,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1589,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1535,
											"end": 1589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1535,
											"end": 1589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1535,
											"end": 1589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1589,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1535,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1589,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1535,
											"end": 1589,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1589,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1589,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1589,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1589,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 1535,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1602,
											"end": 1621,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1636,
											"end": 1649,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1636,
											"end": 1649,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1633,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1624,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1602,
											"end": 1649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1602,
											"end": 1649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1683,
											"end": 1703,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1683,
											"end": 1703,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1679,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1703,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1703,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1660,
											"end": 1743,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1743,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1743,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1743,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1660,
											"end": 1743,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1743,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1743,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1660,
											"end": 1743,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1660,
											"end": 1743,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1660,
											"end": 1743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1743,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1660,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1743,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1743,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1743,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1743,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1743,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1743,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1743,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1743,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1660,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1782,
											"end": 1794,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1782,
											"end": 1794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1782,
											"end": 1794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1794,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1794,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1782,
											"end": 1794,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1794,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1794,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1782,
											"end": 1794,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1804,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1782,
											"end": 1804,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1804,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 1813,
											"end": 1817,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1782,
											"end": 1819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1782,
											"end": 1819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1782,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1819,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1868,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1853,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1868,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1868,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1830,
											"end": 1925,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1925,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1925,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1925,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1830,
											"end": 1925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1925,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1925,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1830,
											"end": 1925,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1830,
											"end": 1925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1830,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1925,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1830,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1925,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1925,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1925,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1925,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1925,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1925,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1925,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1830,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 1957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1972,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1960,
											"end": 1972,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1972,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1972,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1960,
											"end": 1972,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1972,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1972,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1972,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1982,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 1983,
											"end": 1993,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1960,
											"end": 1994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1960,
											"end": 1994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1960,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 1994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 1994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2061,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2042,
											"end": 2061,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2038,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2013,
											"end": 2024,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2013,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2013,
											"end": 2038,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2013,
											"end": 2038,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2013,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2013,
											"end": 2038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2013,
											"end": 2038,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2013,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2013,
											"end": 2061,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2013,
											"end": 2061,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2005,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2005,
											"end": 2100,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2005,
											"end": 2100,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2100,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2005,
											"end": 2100,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2005,
											"end": 2100,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2005,
											"end": 2100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2100,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2005,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2005,
											"end": 2100,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2100,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2100,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2100,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2100,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2100,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2005,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2123,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2139,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2127,
											"end": 2139,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2139,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2139,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2127,
											"end": 2139,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2139,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2139,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2127,
											"end": 2139,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2148,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2127,
											"end": 2148,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2148,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 2149,
											"end": 2159,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2172,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2127,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2127,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2196,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2184,
											"end": 2233,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2233,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2233,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2233,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2184,
											"end": 2233,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2233,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2233,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2184,
											"end": 2233,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2184,
											"end": 2233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2184,
											"end": 2233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2233,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2184,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2233,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2233,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2233,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2233,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2233,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2233,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2233,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2184,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2251,
											"end": 2296,
											"name": "PUSH",
											"source": 6,
											"value": "A37B72BB67EEE30E09084CF386F8A17817C57F620C3AB95FB25D6A20356EC77"
										},
										{
											"begin": 2261,
											"end": 2271,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2284,
											"end": 2295,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2251,
											"end": 2296,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2251,
											"end": 2296,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2251,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2251,
											"end": 2296,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2251,
											"end": 2296,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2251,
											"end": 2296,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2251,
											"end": 2296,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2251,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2251,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2251,
											"end": 2296,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2251,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2251,
											"end": 2296,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2251,
											"end": 2296,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2251,
											"end": 2296,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2251,
											"end": 2296,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2251,
											"end": 2296,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2251,
											"end": 2296,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2251,
											"end": 2296,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2327,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2327,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 2335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 2335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1175,
											"end": 1183,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1175,
											"end": 1195,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1175,
											"end": 1195,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1195,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1175,
											"end": 1195,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1153,
											"end": 1195,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1195,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1195,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 2054,
											"end": 2059,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2036,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2034,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2061,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2073,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2077,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2137,
											"end": 2142,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2182,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 2218,
											"end": 2223,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 2191,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2346,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2332,
											"end": 2341,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2323,
											"end": 2330,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2342,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2347,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 2350,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 2540,
											"end": 2547,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2520,
											"end": 2529,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2516,
											"end": 2538,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 2495,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2751,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 2571,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2619,
											"end": 2696,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2616,
											"end": 2617,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2697,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2716,
											"end": 2720,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2713,
											"end": 2714,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2706,
											"end": 2721,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2740,
											"end": 2744,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2737,
											"end": 2738,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2730,
											"end": 2745,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2757,
											"end": 3167,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 2757,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2797,
											"end": 2804,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 2838,
											"end": 2839,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2820,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2820,
											"end": 2840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2820,
											"end": 2840,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 2820,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2840,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 2872,
											"end": 2873,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2854,
											"end": 2874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 2874,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 2854,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2849,
											"end": 2874,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2849,
											"end": 2874,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2909,
											"end": 2910,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2906,
											"end": 2907,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2902,
											"end": 2911,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 2949,
											"end": 2960,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2931,
											"end": 2961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2961,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 2931,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2920,
											"end": 2961,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2920,
											"end": 2961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3110,
											"end": 3111,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3097,
											"end": 3112,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3094,
											"end": 3095,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3091,
											"end": 3113,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3072,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3064,
											"end": 3073,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3021,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 3021,
											"end": 3160,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3140,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 3140,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 3140,
											"end": 3158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3140,
											"end": 3158,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 3140,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3021,
											"end": 3160,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 3021,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 3167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2757,
											"end": 3167,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2757,
											"end": 3167,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2757,
											"end": 3167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2757,
											"end": 3167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2757,
											"end": 3167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3316,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 3173,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3235,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3261,
											"end": 3267,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3255,
											"end": 3268,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3268,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3268,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3277,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 3304,
											"end": 3309,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3277,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 3277,
											"end": 3310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3277,
											"end": 3310,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 3277,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3316,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3316,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3322,
											"end": 3673,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 3322,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3392,
											"end": 3398,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3443,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3429,
											"end": 3438,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3420,
											"end": 3427,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3416,
											"end": 3439,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3412,
											"end": 3444,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3528,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 3409,
											"end": 3528,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3447,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 3447,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3447,
											"end": 3526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3447,
											"end": 3526,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 3447,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3528,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 3409,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3567,
											"end": 3568,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 3648,
											"end": 3655,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3639,
											"end": 3645,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3637,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3624,
											"end": 3646,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3592,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 3592,
											"end": 3656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3592,
											"end": 3656,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 3592,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3656,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3656,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3666,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3322,
											"end": 3673,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3322,
											"end": 3673,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3322,
											"end": 3673,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3322,
											"end": 3673,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3322,
											"end": 3673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3848,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 3679,
											"end": 3848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3763,
											"end": 3774,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3803,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3792,
											"end": 3795,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3785,
											"end": 3804,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3837,
											"end": 3841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3832,
											"end": 3835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3828,
											"end": 3842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3842,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3842,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3848,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3848,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 4090,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 3854,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3994,
											"end": 4028,
											"name": "PUSH",
											"source": 8,
											"value": "56656E646F7220636F6E747261637420686173206E6F7420656E6F7567682074"
										},
										{
											"begin": 3990,
											"end": 3991,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3982,
											"end": 3988,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3978,
											"end": 3992,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3971,
											"end": 4029,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4063,
											"end": 4082,
											"name": "PUSH",
											"source": 8,
											"value": "6F6B656E7320746F207769746864726177000000000000000000000000000000"
										},
										{
											"begin": 4058,
											"end": 4060,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4050,
											"end": 4056,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4046,
											"end": 4061,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4039,
											"end": 4083,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 4090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4462,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 4096,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4238,
											"end": 4241,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4259,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 4323,
											"end": 4325,
											"name": "PUSH",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 4318,
											"end": 4321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4259,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 4259,
											"end": 4326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4259,
											"end": 4326,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 4259,
											"end": 4326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4326,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4326,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4335,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 4424,
											"end": 4427,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4335,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 4335,
											"end": 4428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4335,
											"end": 4428,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 4335,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4453,
											"end": 4455,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4448,
											"end": 4451,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4444,
											"end": 4456,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 4456,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 4456,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4462,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4462,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4462,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4887,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 4468,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4634,
											"end": 4638,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4672,
											"end": 4674,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4661,
											"end": 4670,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4649,
											"end": 4675,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4649,
											"end": 4675,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4730,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4719,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4711,
											"end": 4731,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4707,
											"end": 4708,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4696,
											"end": 4705,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4692,
											"end": 4709,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4685,
											"end": 4732,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4749,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 4875,
											"end": 4879,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4749,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 4749,
											"end": 4880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4749,
											"end": 4880,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 4749,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4741,
											"end": 4880,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4741,
											"end": 4880,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4887,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4887,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4887,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 5225,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 4893,
											"end": 5225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5014,
											"end": 5018,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5054,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5041,
											"end": 5050,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5055,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5029,
											"end": 5055,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5029,
											"end": 5055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5065,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 5133,
											"end": 5134,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5122,
											"end": 5131,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5118,
											"end": 5135,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5109,
											"end": 5115,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5065,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 5065,
											"end": 5136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5065,
											"end": 5136,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 5065,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5146,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 5214,
											"end": 5216,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5203,
											"end": 5212,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5199,
											"end": 5217,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5190,
											"end": 5196,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5146,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 5146,
											"end": 5218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5146,
											"end": 5218,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 5146,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 5225,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 5225,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 5225,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 5225,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 5225,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 5225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5231,
											"end": 5321,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 5231,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5265,
											"end": 5272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5308,
											"end": 5313,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5301,
											"end": 5314,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5294,
											"end": 5315,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5283,
											"end": 5315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5283,
											"end": 5315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5231,
											"end": 5321,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5231,
											"end": 5321,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5231,
											"end": 5321,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5231,
											"end": 5321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5327,
											"end": 5443,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 5327,
											"end": 5443,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5397,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 5412,
											"end": 5417,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5397,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 5397,
											"end": 5418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5397,
											"end": 5418,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 5397,
											"end": 5418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5390,
											"end": 5395,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5387,
											"end": 5419,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5434,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5431,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5423,
											"end": 5435,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5327,
											"end": 5443,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5327,
											"end": 5443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5586,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 5449,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5508,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5534,
											"end": 5540,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5528,
											"end": 5541,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5519,
											"end": 5541,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5519,
											"end": 5541,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5550,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 5574,
											"end": 5579,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5550,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 5550,
											"end": 5580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5550,
											"end": 5580,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 5550,
											"end": 5580,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5586,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5586,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5592,
											"end": 5937,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 5592,
											"end": 5937,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5659,
											"end": 5665,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5708,
											"end": 5710,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5696,
											"end": 5705,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5687,
											"end": 5694,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5683,
											"end": 5706,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5676,
											"end": 5795,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5676,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 5676,
											"end": 5795,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5714,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 5714,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 5714,
											"end": 5793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5714,
											"end": 5793,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 5714,
											"end": 5793,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5676,
											"end": 5795,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 5676,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5834,
											"end": 5835,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5859,
											"end": 5920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 5912,
											"end": 5919,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5909,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5892,
											"end": 5901,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5888,
											"end": 5910,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5859,
											"end": 5920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 5859,
											"end": 5920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5859,
											"end": 5920,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 5859,
											"end": 5920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5849,
											"end": 5920,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5849,
											"end": 5920,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5805,
											"end": 5930,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5592,
											"end": 5937,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5592,
											"end": 5937,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5592,
											"end": 5937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5592,
											"end": 5937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5592,
											"end": 5937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5943,
											"end": 6168,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 5943,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6083,
											"end": 6117,
											"name": "PUSH",
											"source": 8,
											"value": "4661696C656420746F207472616E7366657220746F6B656E7320746F20746865"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6071,
											"end": 6077,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6067,
											"end": 6081,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6060,
											"end": 6118,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6152,
											"end": 6160,
											"name": "PUSH",
											"source": 8,
											"value": "206F776E65720000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6147,
											"end": 6149,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6139,
											"end": 6145,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6135,
											"end": 6150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6128,
											"end": 6161,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5943,
											"end": 6168,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5943,
											"end": 6168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6174,
											"end": 6540,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 6174,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6316,
											"end": 6319,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6337,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 6401,
											"end": 6403,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 6396,
											"end": 6399,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6337,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 6337,
											"end": 6404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6337,
											"end": 6404,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 6337,
											"end": 6404,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6404,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6404,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6413,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 6502,
											"end": 6505,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6413,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 6413,
											"end": 6506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6413,
											"end": 6506,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 6413,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6531,
											"end": 6533,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6526,
											"end": 6529,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6522,
											"end": 6534,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6515,
											"end": 6534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6515,
											"end": 6534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6174,
											"end": 6540,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6174,
											"end": 6540,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6174,
											"end": 6540,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6174,
											"end": 6540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6546,
											"end": 6965,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 6546,
											"end": 6965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6712,
											"end": 6716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6750,
											"end": 6752,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6739,
											"end": 6748,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6753,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6727,
											"end": 6753,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6727,
											"end": 6753,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6799,
											"end": 6808,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6793,
											"end": 6797,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6789,
											"end": 6809,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6785,
											"end": 6786,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6774,
											"end": 6783,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6770,
											"end": 6787,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6763,
											"end": 6810,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6827,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 6953,
											"end": 6957,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6827,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 6827,
											"end": 6958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6827,
											"end": 6958,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 6827,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6819,
											"end": 6958,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6819,
											"end": 6958,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6546,
											"end": 6965,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6546,
											"end": 6965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6546,
											"end": 6965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6546,
											"end": 6965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6971,
											"end": 7191,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 6971,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7111,
											"end": 7145,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E657220686173206E6F742062616C616E636520746F2077697468647261"
										},
										{
											"begin": 7107,
											"end": 7108,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7099,
											"end": 7105,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7095,
											"end": 7109,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7088,
											"end": 7146,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7180,
											"end": 7183,
											"name": "PUSH",
											"source": 8,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7175,
											"end": 7177,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7167,
											"end": 7173,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7163,
											"end": 7178,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7156,
											"end": 7184,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6971,
											"end": 7191,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6971,
											"end": 7191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7197,
											"end": 7563,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 7197,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7339,
											"end": 7342,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7360,
											"end": 7427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 7424,
											"end": 7426,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 7419,
											"end": 7422,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7360,
											"end": 7427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 7360,
											"end": 7427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7360,
											"end": 7427,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 7360,
											"end": 7427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7353,
											"end": 7427,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7353,
											"end": 7427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7436,
											"end": 7529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 7525,
											"end": 7528,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7436,
											"end": 7529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 7436,
											"end": 7529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7436,
											"end": 7529,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 7436,
											"end": 7529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7554,
											"end": 7556,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7549,
											"end": 7552,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7557,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7538,
											"end": 7557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7538,
											"end": 7557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7197,
											"end": 7563,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7197,
											"end": 7563,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7197,
											"end": 7563,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7197,
											"end": 7563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7569,
											"end": 7988,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 7569,
											"end": 7988,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7735,
											"end": 7739,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7773,
											"end": 7775,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7762,
											"end": 7771,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7758,
											"end": 7776,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7750,
											"end": 7776,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7750,
											"end": 7776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7822,
											"end": 7831,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7816,
											"end": 7820,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7812,
											"end": 7832,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7808,
											"end": 7809,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7797,
											"end": 7806,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7793,
											"end": 7810,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7786,
											"end": 7833,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7850,
											"end": 7981,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 7976,
											"end": 7980,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7850,
											"end": 7981,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 7850,
											"end": 7981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7850,
											"end": 7981,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 7850,
											"end": 7981,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7842,
											"end": 7981,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7842,
											"end": 7981,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7569,
											"end": 7988,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7569,
											"end": 7988,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7569,
											"end": 7988,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7569,
											"end": 7988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7994,
											"end": 8141,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 7994,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8095,
											"end": 8106,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8132,
											"end": 8135,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8117,
											"end": 8135,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8117,
											"end": 8135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7994,
											"end": 8141,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7994,
											"end": 8141,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7994,
											"end": 8141,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7994,
											"end": 8141,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7994,
											"end": 8141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8147,
											"end": 8261,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 8147,
											"end": 8261,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8147,
											"end": 8261,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8147,
											"end": 8261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8267,
											"end": 8665,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 8267,
											"end": 8665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8426,
											"end": 8429,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8447,
											"end": 8530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 8528,
											"end": 8529,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8523,
											"end": 8526,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8447,
											"end": 8530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 8447,
											"end": 8530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8447,
											"end": 8530,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 8447,
											"end": 8530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8440,
											"end": 8530,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8440,
											"end": 8530,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8539,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 8628,
											"end": 8631,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8539,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 8539,
											"end": 8632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8539,
											"end": 8632,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 8539,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8657,
											"end": 8658,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8652,
											"end": 8655,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8648,
											"end": 8659,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8641,
											"end": 8659,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8641,
											"end": 8659,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8267,
											"end": 8665,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8267,
											"end": 8665,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8267,
											"end": 8665,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8267,
											"end": 8665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8671,
											"end": 9050,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 8671,
											"end": 9050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8855,
											"end": 8858,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8877,
											"end": 9024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 9020,
											"end": 9023,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8877,
											"end": 9024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 8877,
											"end": 9024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8877,
											"end": 9024,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 8877,
											"end": 9024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8870,
											"end": 9024,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8870,
											"end": 9024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9041,
											"end": 9044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9034,
											"end": 9044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9034,
											"end": 9044,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8671,
											"end": 9050,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8671,
											"end": 9050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8671,
											"end": 9050,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8671,
											"end": 9050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9056,
											"end": 9288,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 9056,
											"end": 9288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9196,
											"end": 9230,
											"name": "PUSH",
											"source": 8,
											"value": "4661696C656420746F2073656E6420757365722062616C616E6365206261636B"
										},
										{
											"begin": 9192,
											"end": 9193,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9184,
											"end": 9190,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9180,
											"end": 9194,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9173,
											"end": 9231,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9265,
											"end": 9280,
											"name": "PUSH",
											"source": 8,
											"value": "20746F20746865206F776E657200000000000000000000000000000000000000"
										},
										{
											"begin": 9260,
											"end": 9262,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9252,
											"end": 9258,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9248,
											"end": 9263,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9241,
											"end": 9281,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9056,
											"end": 9288,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9056,
											"end": 9288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9294,
											"end": 9660,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 9294,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9436,
											"end": 9439,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9457,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 9521,
											"end": 9523,
											"name": "PUSH",
											"source": 8,
											"value": "2D"
										},
										{
											"begin": 9516,
											"end": 9519,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9457,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 9457,
											"end": 9524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9457,
											"end": 9524,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 9457,
											"end": 9524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9450,
											"end": 9524,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9450,
											"end": 9524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9533,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 9622,
											"end": 9625,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9533,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 9533,
											"end": 9626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9533,
											"end": 9626,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 9533,
											"end": 9626,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9651,
											"end": 9653,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9646,
											"end": 9649,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9642,
											"end": 9654,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9635,
											"end": 9654,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9635,
											"end": 9654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9294,
											"end": 9660,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9294,
											"end": 9660,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9294,
											"end": 9660,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9294,
											"end": 9660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9666,
											"end": 10085,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 9666,
											"end": 10085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9832,
											"end": 9836,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9870,
											"end": 9872,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9859,
											"end": 9868,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9855,
											"end": 9873,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9847,
											"end": 9873,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9847,
											"end": 9873,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9919,
											"end": 9928,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9913,
											"end": 9917,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9909,
											"end": 9929,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9905,
											"end": 9906,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9894,
											"end": 9903,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9890,
											"end": 9907,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9883,
											"end": 9930,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9947,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 10073,
											"end": 10077,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9947,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 9947,
											"end": 10078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9947,
											"end": 10078,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 9947,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9939,
											"end": 10078,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9939,
											"end": 10078,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9666,
											"end": 10085,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9666,
											"end": 10085,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9666,
											"end": 10085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9666,
											"end": 10085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10091,
											"end": 10273,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 10091,
											"end": 10273,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10231,
											"end": 10265,
											"name": "PUSH",
											"source": 8,
											"value": "5370656369667920616D6F756E74206F6620746F6B656E7320746F2073656C6C"
										},
										{
											"begin": 10227,
											"end": 10228,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10219,
											"end": 10225,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10215,
											"end": 10229,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10208,
											"end": 10266,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10091,
											"end": 10273,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10091,
											"end": 10273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10279,
											"end": 10645,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 10279,
											"end": 10645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10421,
											"end": 10424,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10442,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 10506,
											"end": 10508,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10501,
											"end": 10504,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10442,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 10442,
											"end": 10509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10442,
											"end": 10509,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 10442,
											"end": 10509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10435,
											"end": 10509,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10435,
											"end": 10509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10518,
											"end": 10611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 10607,
											"end": 10610,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10518,
											"end": 10611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 10518,
											"end": 10611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10518,
											"end": 10611,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 10518,
											"end": 10611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10636,
											"end": 10638,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10631,
											"end": 10634,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10627,
											"end": 10639,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10620,
											"end": 10639,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10620,
											"end": 10639,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10279,
											"end": 10645,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10279,
											"end": 10645,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10279,
											"end": 10645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10279,
											"end": 10645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10651,
											"end": 11070,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 10651,
											"end": 11070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10817,
											"end": 10821,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10855,
											"end": 10857,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10844,
											"end": 10853,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10840,
											"end": 10858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10832,
											"end": 10858,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10832,
											"end": 10858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10904,
											"end": 10913,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10898,
											"end": 10902,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10894,
											"end": 10914,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10890,
											"end": 10891,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10879,
											"end": 10888,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10875,
											"end": 10892,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10868,
											"end": 10915,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10932,
											"end": 11063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 11058,
											"end": 11062,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10932,
											"end": 11063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 10932,
											"end": 11063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10932,
											"end": 11063,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 10932,
											"end": 11063,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10924,
											"end": 11063,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10924,
											"end": 11063,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10651,
											"end": 11070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10651,
											"end": 11070,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10651,
											"end": 11070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10651,
											"end": 11070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11076,
											"end": 11252,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 11076,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11216,
											"end": 11244,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E7420746F6B656E2062616C616E6365000000000000"
										},
										{
											"begin": 11212,
											"end": 11213,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11204,
											"end": 11210,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11200,
											"end": 11214,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11193,
											"end": 11245,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11076,
											"end": 11252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11076,
											"end": 11252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11258,
											"end": 11624,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 11258,
											"end": 11624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11400,
											"end": 11403,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11421,
											"end": 11488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 11485,
											"end": 11487,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 11480,
											"end": 11483,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11421,
											"end": 11488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 11421,
											"end": 11488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11421,
											"end": 11488,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 11421,
											"end": 11488,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11414,
											"end": 11488,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11414,
											"end": 11488,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11497,
											"end": 11590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 11586,
											"end": 11589,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11497,
											"end": 11590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 11497,
											"end": 11590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11497,
											"end": 11590,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 11497,
											"end": 11590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11615,
											"end": 11617,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11610,
											"end": 11613,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11606,
											"end": 11618,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11599,
											"end": 11618,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11599,
											"end": 11618,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11258,
											"end": 11624,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11258,
											"end": 11624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11258,
											"end": 11624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11258,
											"end": 11624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11630,
											"end": 12049,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 11630,
											"end": 12049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11796,
											"end": 11800,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11834,
											"end": 11836,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11823,
											"end": 11832,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11819,
											"end": 11837,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11811,
											"end": 11837,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11811,
											"end": 11837,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11883,
											"end": 11892,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11877,
											"end": 11881,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11873,
											"end": 11893,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11869,
											"end": 11870,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11858,
											"end": 11867,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11847,
											"end": 11894,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11911,
											"end": 12042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 12037,
											"end": 12041,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11911,
											"end": 12042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 11911,
											"end": 12042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11911,
											"end": 12042,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 11911,
											"end": 12042,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11903,
											"end": 12042,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11903,
											"end": 12042,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11630,
											"end": 12049,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11630,
											"end": 12049,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11630,
											"end": 12049,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11630,
											"end": 12049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12055,
											"end": 12249,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 12055,
											"end": 12249,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12095,
											"end": 12099,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12115,
											"end": 12135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 12133,
											"end": 12134,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12115,
											"end": 12135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 12115,
											"end": 12135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12115,
											"end": 12135,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 12115,
											"end": 12135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12110,
											"end": 12135,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12110,
											"end": 12135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12149,
											"end": 12169,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 12167,
											"end": 12168,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12149,
											"end": 12169,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 12149,
											"end": 12169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12149,
											"end": 12169,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 12149,
											"end": 12169,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12144,
											"end": 12169,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12144,
											"end": 12169,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12194,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12190,
											"end": 12191,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12186,
											"end": 12195,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12178,
											"end": 12195,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12178,
											"end": 12195,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12217,
											"end": 12218,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12211,
											"end": 12215,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12208,
											"end": 12219,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 12205,
											"end": 12242,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12205,
											"end": 12242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 12205,
											"end": 12242,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12222,
											"end": 12240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 12222,
											"end": 12240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 12222,
											"end": 12240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12222,
											"end": 12240,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 12222,
											"end": 12240,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12205,
											"end": 12242,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 12205,
											"end": 12242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12055,
											"end": 12249,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12055,
											"end": 12249,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12055,
											"end": 12249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12055,
											"end": 12249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12055,
											"end": 12249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12255,
											"end": 12435,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 12255,
											"end": 12435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12303,
											"end": 12380,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12300,
											"end": 12301,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12293,
											"end": 12381,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12400,
											"end": 12404,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 12397,
											"end": 12398,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12390,
											"end": 12405,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12424,
											"end": 12428,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12421,
											"end": 12422,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12414,
											"end": 12429,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12441,
											"end": 12626,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 12441,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12481,
											"end": 12482,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12498,
											"end": 12518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 12516,
											"end": 12517,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12498,
											"end": 12518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 12498,
											"end": 12518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12498,
											"end": 12518,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 12498,
											"end": 12518,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12493,
											"end": 12518,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12493,
											"end": 12518,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12552,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 12550,
											"end": 12551,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12552,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 12532,
											"end": 12552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12532,
											"end": 12552,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 12532,
											"end": 12552,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12527,
											"end": 12552,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12527,
											"end": 12552,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12571,
											"end": 12572,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12561,
											"end": 12596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 12561,
											"end": 12596,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12576,
											"end": 12594,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 12576,
											"end": 12594,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 12576,
											"end": 12594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12576,
											"end": 12594,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 12576,
											"end": 12594,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12561,
											"end": 12596,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 12561,
											"end": 12596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12618,
											"end": 12619,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12615,
											"end": 12616,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12611,
											"end": 12620,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12606,
											"end": 12620,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12606,
											"end": 12620,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12441,
											"end": 12626,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12441,
											"end": 12626,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12441,
											"end": 12626,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12441,
											"end": 12626,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12441,
											"end": 12626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12632,
											"end": 12856,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 12632,
											"end": 12856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12772,
											"end": 12806,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E7420436F696E2062616C616E636520696E20636F6E"
										},
										{
											"begin": 12768,
											"end": 12769,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12760,
											"end": 12766,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12756,
											"end": 12770,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12749,
											"end": 12807,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12841,
											"end": 12848,
											"name": "PUSH",
											"source": 8,
											"value": "7472616374000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12836,
											"end": 12838,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12828,
											"end": 12834,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12824,
											"end": 12839,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12817,
											"end": 12849,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12632,
											"end": 12856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12632,
											"end": 12856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12862,
											"end": 13228,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 12862,
											"end": 13228,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13004,
											"end": 13007,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13025,
											"end": 13092,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 13089,
											"end": 13091,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 13084,
											"end": 13087,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13025,
											"end": 13092,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 13025,
											"end": 13092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13025,
											"end": 13092,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 13025,
											"end": 13092,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13018,
											"end": 13092,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13018,
											"end": 13092,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13101,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 13190,
											"end": 13193,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13101,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 13101,
											"end": 13194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13101,
											"end": 13194,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 13101,
											"end": 13194,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13219,
											"end": 13221,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13214,
											"end": 13217,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13210,
											"end": 13222,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13203,
											"end": 13222,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13203,
											"end": 13222,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12862,
											"end": 13228,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12862,
											"end": 13228,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12862,
											"end": 13228,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12862,
											"end": 13228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13234,
											"end": 13653,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 13234,
											"end": 13653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13400,
											"end": 13404,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13438,
											"end": 13440,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13427,
											"end": 13436,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13423,
											"end": 13441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13415,
											"end": 13441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13415,
											"end": 13441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13487,
											"end": 13496,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13481,
											"end": 13485,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13477,
											"end": 13497,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13473,
											"end": 13474,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13462,
											"end": 13471,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13458,
											"end": 13475,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13451,
											"end": 13498,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13515,
											"end": 13646,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 13641,
											"end": 13645,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13515,
											"end": 13646,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 13515,
											"end": 13646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13515,
											"end": 13646,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 13515,
											"end": 13646,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13507,
											"end": 13646,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13507,
											"end": 13646,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13234,
											"end": 13653,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13234,
											"end": 13653,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13234,
											"end": 13653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13234,
											"end": 13653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13659,
											"end": 14101,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 13659,
											"end": 14101,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13808,
											"end": 13812,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13846,
											"end": 13848,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 13835,
											"end": 13844,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13831,
											"end": 13849,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13823,
											"end": 13849,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13823,
											"end": 13849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13859,
											"end": 13930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 13927,
											"end": 13928,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13916,
											"end": 13925,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13912,
											"end": 13929,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13903,
											"end": 13909,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13859,
											"end": 13930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 13859,
											"end": 13930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13859,
											"end": 13930,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 13859,
											"end": 13930,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13940,
											"end": 14012,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 14008,
											"end": 14010,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13997,
											"end": 14006,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13984,
											"end": 13990,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13940,
											"end": 14012,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 13940,
											"end": 14012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13940,
											"end": 14012,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 13940,
											"end": 14012,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14022,
											"end": 14094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 14090,
											"end": 14092,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14079,
											"end": 14088,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14075,
											"end": 14093,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14066,
											"end": 14072,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14022,
											"end": 14094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 14022,
											"end": 14094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14022,
											"end": 14094,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 14022,
											"end": 14094,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13659,
											"end": 14101,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 13659,
											"end": 14101,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13659,
											"end": 14101,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13659,
											"end": 14101,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13659,
											"end": 14101,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13659,
											"end": 14101,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13659,
											"end": 14101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14107,
											"end": 14330,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 14107,
											"end": 14330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14247,
											"end": 14281,
											"name": "PUSH",
											"source": 8,
											"value": "4661696C656420746F207472616E7366657220746F6B656E20746F20636F6E74"
										},
										{
											"begin": 14243,
											"end": 14244,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14235,
											"end": 14241,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14231,
											"end": 14245,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14224,
											"end": 14282,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14316,
											"end": 14322,
											"name": "PUSH",
											"source": 8,
											"value": "7261637400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14311,
											"end": 14313,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14303,
											"end": 14309,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14299,
											"end": 14314,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14292,
											"end": 14323,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14107,
											"end": 14330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14107,
											"end": 14330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14336,
											"end": 14702,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 14336,
											"end": 14702,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14478,
											"end": 14481,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14499,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 14563,
											"end": 14565,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 14558,
											"end": 14561,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14499,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 14499,
											"end": 14566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14499,
											"end": 14566,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 14499,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14492,
											"end": 14566,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14492,
											"end": 14566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14575,
											"end": 14668,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 14664,
											"end": 14667,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14575,
											"end": 14668,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 14575,
											"end": 14668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14575,
											"end": 14668,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 14575,
											"end": 14668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14693,
											"end": 14695,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14688,
											"end": 14691,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14684,
											"end": 14696,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14677,
											"end": 14696,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14677,
											"end": 14696,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14336,
											"end": 14702,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14336,
											"end": 14702,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14336,
											"end": 14702,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14336,
											"end": 14702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14708,
											"end": 15127,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 14708,
											"end": 15127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14874,
											"end": 14878,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14912,
											"end": 14914,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14901,
											"end": 14910,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14897,
											"end": 14915,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14889,
											"end": 14915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14889,
											"end": 14915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14961,
											"end": 14970,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14955,
											"end": 14959,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14951,
											"end": 14971,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14947,
											"end": 14948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14936,
											"end": 14945,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14932,
											"end": 14949,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14925,
											"end": 14972,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14989,
											"end": 15120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 15115,
											"end": 15119,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14989,
											"end": 15120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 14989,
											"end": 15120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14989,
											"end": 15120,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 14989,
											"end": 15120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14981,
											"end": 15120,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14981,
											"end": 15120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14708,
											"end": 15127,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14708,
											"end": 15127,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14708,
											"end": 15127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14708,
											"end": 15127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15133,
											"end": 15310,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 15133,
											"end": 15310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15273,
											"end": 15302,
											"name": "PUSH",
											"source": 8,
											"value": "4661696C656420746F2073656E6420436F696E20746F20757365720000000000"
										},
										{
											"begin": 15269,
											"end": 15270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15261,
											"end": 15267,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15257,
											"end": 15271,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15250,
											"end": 15303,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15133,
											"end": 15310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15133,
											"end": 15310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15316,
											"end": 15682,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 15316,
											"end": 15682,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15458,
											"end": 15461,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15479,
											"end": 15546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 15543,
											"end": 15545,
											"name": "PUSH",
											"source": 8,
											"value": "1B"
										},
										{
											"begin": 15538,
											"end": 15541,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15479,
											"end": 15546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 15479,
											"end": 15546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15479,
											"end": 15546,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 15479,
											"end": 15546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15472,
											"end": 15546,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15472,
											"end": 15546,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15555,
											"end": 15648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 15644,
											"end": 15647,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15555,
											"end": 15648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 15555,
											"end": 15648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15555,
											"end": 15648,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 15555,
											"end": 15648,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15673,
											"end": 15675,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15668,
											"end": 15671,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15664,
											"end": 15676,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15657,
											"end": 15676,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15657,
											"end": 15676,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15316,
											"end": 15682,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15316,
											"end": 15682,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15316,
											"end": 15682,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15316,
											"end": 15682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15688,
											"end": 16107,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 15688,
											"end": 16107,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15854,
											"end": 15858,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15892,
											"end": 15894,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15881,
											"end": 15890,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15877,
											"end": 15895,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15869,
											"end": 15895,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15869,
											"end": 15895,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15941,
											"end": 15950,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15935,
											"end": 15939,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15931,
											"end": 15951,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15927,
											"end": 15928,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15916,
											"end": 15925,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15912,
											"end": 15929,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15905,
											"end": 15952,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15969,
											"end": 16100,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 16095,
											"end": 16099,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15969,
											"end": 16100,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 15969,
											"end": 16100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15969,
											"end": 16100,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 15969,
											"end": 16100,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15961,
											"end": 16100,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15961,
											"end": 16100,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15688,
											"end": 16107,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15688,
											"end": 16107,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15688,
											"end": 16107,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15688,
											"end": 16107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16113,
											"end": 16555,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 16113,
											"end": 16555,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16262,
											"end": 16266,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16300,
											"end": 16302,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 16289,
											"end": 16298,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16285,
											"end": 16303,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16277,
											"end": 16303,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16277,
											"end": 16303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16313,
											"end": 16384,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 16381,
											"end": 16382,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16370,
											"end": 16379,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16366,
											"end": 16383,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16357,
											"end": 16363,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 16313,
											"end": 16384,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 16313,
											"end": 16384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16313,
											"end": 16384,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 16313,
											"end": 16384,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16394,
											"end": 16466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 16462,
											"end": 16464,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16451,
											"end": 16460,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16447,
											"end": 16465,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16438,
											"end": 16444,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16394,
											"end": 16466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 16394,
											"end": 16466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16394,
											"end": 16466,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 16394,
											"end": 16466,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16476,
											"end": 16548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 16544,
											"end": 16546,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16533,
											"end": 16542,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16529,
											"end": 16547,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16520,
											"end": 16526,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16476,
											"end": 16548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 16476,
											"end": 16548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16476,
											"end": 16548,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 16476,
											"end": 16548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16113,
											"end": 16555,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 16113,
											"end": 16555,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 16113,
											"end": 16555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16113,
											"end": 16555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16113,
											"end": 16555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16113,
											"end": 16555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16113,
											"end": 16555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16561,
											"end": 16739,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 16561,
											"end": 16739,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16701,
											"end": 16731,
											"name": "PUSH",
											"source": 8,
											"value": "53656E6420436F696E20746F2062757920736F6D6520746F6B656E7300000000"
										},
										{
											"begin": 16697,
											"end": 16698,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16689,
											"end": 16695,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16685,
											"end": 16699,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16678,
											"end": 16732,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16561,
											"end": 16739,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16561,
											"end": 16739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16745,
											"end": 17111,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 16745,
											"end": 17111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16887,
											"end": 16890,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16908,
											"end": 16975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 16972,
											"end": 16974,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 16967,
											"end": 16970,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16908,
											"end": 16975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 16908,
											"end": 16975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16908,
											"end": 16975,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 16908,
											"end": 16975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16901,
											"end": 16975,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16901,
											"end": 16975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 17073,
											"end": 17076,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 16984,
											"end": 17077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16984,
											"end": 17077,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 16984,
											"end": 17077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17102,
											"end": 17104,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17097,
											"end": 17100,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17093,
											"end": 17105,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17086,
											"end": 17105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17086,
											"end": 17105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16745,
											"end": 17111,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16745,
											"end": 17111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16745,
											"end": 17111,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16745,
											"end": 17111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17117,
											"end": 17536,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 17117,
											"end": 17536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17283,
											"end": 17287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17321,
											"end": 17323,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17310,
											"end": 17319,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17306,
											"end": 17324,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17298,
											"end": 17324,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17298,
											"end": 17324,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17370,
											"end": 17379,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17364,
											"end": 17368,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17360,
											"end": 17380,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17356,
											"end": 17357,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17345,
											"end": 17354,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17341,
											"end": 17358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17334,
											"end": 17381,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17398,
											"end": 17529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 17524,
											"end": 17528,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17398,
											"end": 17529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 17398,
											"end": 17529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17398,
											"end": 17529,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 17398,
											"end": 17529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17390,
											"end": 17529,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17390,
											"end": 17529,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17117,
											"end": 17536,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17117,
											"end": 17536,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17117,
											"end": 17536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17117,
											"end": 17536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17542,
											"end": 17764,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 17542,
											"end": 17764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17682,
											"end": 17716,
											"name": "PUSH",
											"source": 8,
											"value": "45786365656473206D6178696D756D20746F6B656E7320706572207075726368"
										},
										{
											"begin": 17678,
											"end": 17679,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17670,
											"end": 17676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17666,
											"end": 17680,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17659,
											"end": 17717,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17751,
											"end": 17756,
											"name": "PUSH",
											"source": 8,
											"value": "6173650000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17746,
											"end": 17748,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17738,
											"end": 17744,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17734,
											"end": 17749,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17727,
											"end": 17757,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17542,
											"end": 17764,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17542,
											"end": 17764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17770,
											"end": 18136,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 17770,
											"end": 18136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17912,
											"end": 17915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17933,
											"end": 18000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 17997,
											"end": 17999,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 17992,
											"end": 17995,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17933,
											"end": 18000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 17933,
											"end": 18000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17933,
											"end": 18000,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 17933,
											"end": 18000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17926,
											"end": 18000,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17926,
											"end": 18000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18009,
											"end": 18102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 18098,
											"end": 18101,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18009,
											"end": 18102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 18009,
											"end": 18102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18009,
											"end": 18102,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 18009,
											"end": 18102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18127,
											"end": 18129,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18122,
											"end": 18125,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18118,
											"end": 18130,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18111,
											"end": 18130,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18111,
											"end": 18130,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17770,
											"end": 18136,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17770,
											"end": 18136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17770,
											"end": 18136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17770,
											"end": 18136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18142,
											"end": 18561,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 18142,
											"end": 18561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18308,
											"end": 18312,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18346,
											"end": 18348,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18335,
											"end": 18344,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18331,
											"end": 18349,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18323,
											"end": 18349,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18323,
											"end": 18349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18395,
											"end": 18404,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18389,
											"end": 18393,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18385,
											"end": 18405,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18381,
											"end": 18382,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18370,
											"end": 18379,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18366,
											"end": 18383,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18359,
											"end": 18406,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18423,
											"end": 18554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 18549,
											"end": 18553,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18423,
											"end": 18554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 18423,
											"end": 18554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18423,
											"end": 18554,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 18423,
											"end": 18554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18415,
											"end": 18554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18415,
											"end": 18554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18142,
											"end": 18561,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18142,
											"end": 18561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18142,
											"end": 18561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18142,
											"end": 18561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18567,
											"end": 18806,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 18567,
											"end": 18806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18707,
											"end": 18741,
											"name": "PUSH",
											"source": 8,
											"value": "56656E646F7220636F6E747261637420686173206E6F7420656E6F7567682074"
										},
										{
											"begin": 18703,
											"end": 18704,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18695,
											"end": 18701,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18691,
											"end": 18705,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18684,
											"end": 18742,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18776,
											"end": 18798,
											"name": "PUSH",
											"source": 8,
											"value": "6F6B656E7320696E206974732062616C616E6365000000000000000000000000"
										},
										{
											"begin": 18771,
											"end": 18773,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18763,
											"end": 18769,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18759,
											"end": 18774,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18752,
											"end": 18799,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18567,
											"end": 18806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18567,
											"end": 18806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18812,
											"end": 19178,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 18812,
											"end": 19178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18954,
											"end": 18957,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18975,
											"end": 19042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 19039,
											"end": 19041,
											"name": "PUSH",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 19034,
											"end": 19037,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18975,
											"end": 19042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 18975,
											"end": 19042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18975,
											"end": 19042,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 18975,
											"end": 19042,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18968,
											"end": 19042,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18968,
											"end": 19042,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19051,
											"end": 19144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 19140,
											"end": 19143,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19051,
											"end": 19144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 19051,
											"end": 19144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19051,
											"end": 19144,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 19051,
											"end": 19144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19169,
											"end": 19171,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19164,
											"end": 19167,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19160,
											"end": 19172,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19153,
											"end": 19172,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19153,
											"end": 19172,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18812,
											"end": 19178,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18812,
											"end": 19178,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18812,
											"end": 19178,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18812,
											"end": 19178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19184,
											"end": 19603,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 19184,
											"end": 19603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19350,
											"end": 19354,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19388,
											"end": 19390,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19377,
											"end": 19386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19373,
											"end": 19391,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19365,
											"end": 19391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19365,
											"end": 19391,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19437,
											"end": 19446,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19431,
											"end": 19435,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19427,
											"end": 19447,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19423,
											"end": 19424,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19412,
											"end": 19421,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19408,
											"end": 19425,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19401,
											"end": 19448,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19465,
											"end": 19596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 19591,
											"end": 19595,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19465,
											"end": 19596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 19465,
											"end": 19596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19465,
											"end": 19596,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 19465,
											"end": 19596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19457,
											"end": 19596,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19457,
											"end": 19596,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19184,
											"end": 19603,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19184,
											"end": 19603,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19184,
											"end": 19603,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19184,
											"end": 19603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19609,
											"end": 19800,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 19609,
											"end": 19800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19649,
											"end": 19652,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19668,
											"end": 19688,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 19686,
											"end": 19687,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19668,
											"end": 19688,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 19668,
											"end": 19688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19668,
											"end": 19688,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 19668,
											"end": 19688,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19663,
											"end": 19688,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19663,
											"end": 19688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19702,
											"end": 19722,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 19720,
											"end": 19721,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19702,
											"end": 19722,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 19702,
											"end": 19722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19702,
											"end": 19722,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 19702,
											"end": 19722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19697,
											"end": 19722,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19697,
											"end": 19722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19745,
											"end": 19746,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19742,
											"end": 19743,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19738,
											"end": 19747,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19731,
											"end": 19747,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19731,
											"end": 19747,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19766,
											"end": 19769,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 19763,
											"end": 19764,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19760,
											"end": 19770,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 19757,
											"end": 19793,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19757,
											"end": 19793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 19757,
											"end": 19793,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19773,
											"end": 19791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 19773,
											"end": 19791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 19773,
											"end": 19791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19773,
											"end": 19791,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 19773,
											"end": 19791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19757,
											"end": 19793,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 19757,
											"end": 19793,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19609,
											"end": 19800,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19609,
											"end": 19800,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19609,
											"end": 19800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19609,
											"end": 19800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19609,
											"end": 19800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19806,
											"end": 20027,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 19806,
											"end": 20027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19946,
											"end": 19980,
											"name": "PUSH",
											"source": 8,
											"value": "45786365656473206D6178696D756D20746F6B656E7320706572206164647265"
										},
										{
											"begin": 19942,
											"end": 19943,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19934,
											"end": 19940,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19930,
											"end": 19944,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19923,
											"end": 19981,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20015,
											"end": 20019,
											"name": "PUSH",
											"source": 8,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20010,
											"end": 20012,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20002,
											"end": 20008,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19998,
											"end": 20013,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19991,
											"end": 20020,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19806,
											"end": 20027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19806,
											"end": 20027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20033,
											"end": 20399,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 20033,
											"end": 20399,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20175,
											"end": 20178,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20196,
											"end": 20263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 20260,
											"end": 20262,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 20255,
											"end": 20258,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20196,
											"end": 20263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 20196,
											"end": 20263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20196,
											"end": 20263,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 20196,
											"end": 20263,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20189,
											"end": 20263,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20189,
											"end": 20263,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20272,
											"end": 20365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 20361,
											"end": 20364,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20272,
											"end": 20365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 20272,
											"end": 20365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20272,
											"end": 20365,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 20272,
											"end": 20365,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20390,
											"end": 20392,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20385,
											"end": 20388,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20381,
											"end": 20393,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20374,
											"end": 20393,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20374,
											"end": 20393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20033,
											"end": 20399,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20033,
											"end": 20399,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20033,
											"end": 20399,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20033,
											"end": 20399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20405,
											"end": 20824,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 20405,
											"end": 20824,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20571,
											"end": 20575,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20609,
											"end": 20611,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20598,
											"end": 20607,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20594,
											"end": 20612,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20586,
											"end": 20612,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20586,
											"end": 20612,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20658,
											"end": 20667,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20652,
											"end": 20656,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20648,
											"end": 20668,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20644,
											"end": 20645,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20633,
											"end": 20642,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20629,
											"end": 20646,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20622,
											"end": 20669,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20686,
											"end": 20817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 20812,
											"end": 20816,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20686,
											"end": 20817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 20686,
											"end": 20817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20686,
											"end": 20817,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 20686,
											"end": 20817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20678,
											"end": 20817,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20678,
											"end": 20817,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20405,
											"end": 20824,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20405,
											"end": 20824,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20405,
											"end": 20824,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20405,
											"end": 20824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20830,
											"end": 21012,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 20830,
											"end": 21012,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20970,
											"end": 21004,
											"name": "PUSH",
											"source": 8,
											"value": "4661696C656420746F207472616E7366657220746F6B656E20746F2075736572"
										},
										{
											"begin": 20966,
											"end": 20967,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20958,
											"end": 20964,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20954,
											"end": 20968,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20947,
											"end": 21005,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20830,
											"end": 21012,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20830,
											"end": 21012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21018,
											"end": 21384,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 21018,
											"end": 21384,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21160,
											"end": 21163,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21181,
											"end": 21248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 21245,
											"end": 21247,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21240,
											"end": 21243,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21181,
											"end": 21248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 21181,
											"end": 21248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21181,
											"end": 21248,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 21181,
											"end": 21248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21174,
											"end": 21248,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21174,
											"end": 21248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21257,
											"end": 21350,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 21346,
											"end": 21349,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21257,
											"end": 21350,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 21257,
											"end": 21350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21257,
											"end": 21350,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 21257,
											"end": 21350,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21375,
											"end": 21377,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21370,
											"end": 21373,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21366,
											"end": 21378,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21359,
											"end": 21378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21359,
											"end": 21378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21018,
											"end": 21384,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21018,
											"end": 21384,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21018,
											"end": 21384,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21018,
											"end": 21384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21390,
											"end": 21809,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 21390,
											"end": 21809,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21556,
											"end": 21560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21594,
											"end": 21596,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21583,
											"end": 21592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21579,
											"end": 21597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21571,
											"end": 21597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21571,
											"end": 21597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21643,
											"end": 21652,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21637,
											"end": 21641,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21633,
											"end": 21653,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 21629,
											"end": 21630,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21618,
											"end": 21627,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21614,
											"end": 21631,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21607,
											"end": 21654,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21671,
											"end": 21802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 21797,
											"end": 21801,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21671,
											"end": 21802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 21671,
											"end": 21802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21671,
											"end": 21802,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 21671,
											"end": 21802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21663,
											"end": 21802,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21663,
											"end": 21802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21390,
											"end": 21809,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21390,
											"end": 21809,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21390,
											"end": 21809,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21390,
											"end": 21809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/BuyToken.sol",
								"contracts/MinervaToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyTokens()": "d0febe4c",
							"getContractBalance()": "6f9fb98a",
							"maxTokensPerAddress()": "23a1baaa",
							"maxTokensPerPurchase()": "57715207",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"sellDiscountPercent()": "0a431e52",
							"sellTokens(uint256)": "6c11bcd3",
							"setMaxTokensPerAddress(uint256)": "dbb84f11",
							"setMaxTokensPerPurchase(uint256)": "1b326fad",
							"setSellDiscountPercent(uint256)": "1369bfee",
							"setTokensPerCoin(uint256)": "453989b2",
							"tokensPerCoin()": "cb232842",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b",
							"withdrawTokens(uint256)": "315a095d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOfCoin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOfTokens\",\"type\":\"uint256\"}],\"name\":\"BuyTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOfTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOfCoin\",\"type\":\"uint256\"}],\"name\":\"SellTokens\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTokensPerAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTokensPerPurchase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellDiscountPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"sellTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"coinAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newLimit\",\"type\":\"uint256\"}],\"name\":\"setMaxTokensPerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newLimit\",\"type\":\"uint256\"}],\"name\":\"setMaxTokensPerPurchase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDiscount\",\"type\":\"uint256\"}],\"name\":\"setSellDiscountPercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"setTokensPerCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensPerCoin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BuyToken.sol\":\"buy_sell_Token\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/BuyToken.sol\":{\"keccak256\":\"0x727bc36c60ff78b06c9423b23ccc1d3c9152ffc993720d9b0dbc74b9a202563c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://706aaa6f2c3b22c233dac04b282c165cbf2b201d8df076603bf997faa0f61eb6\",\"dweb:/ipfs/QmfFHhK1fwPJo6Qc4cX3ntLtqto5ZcPRigRWMqMMv18Z36\"]},\"contracts/MinervaToken.sol\":{\"keccak256\":\"0x4178dec4bc1f117fb9c2f83fbb54ecf50ddd15ea09d9c0072c760cd1225a6363\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68385c518280b93080c5c95313aca4147d066151719193382141456a4643a7ae\",\"dweb:/ipfs/QmYhojvGXMGpUeGTHVgBfTjcHKq62rZKqzstCLSrdsw8CX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/BuyToken.sol:buy_sell_Token",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 942,
								"contract": "contracts/BuyToken.sol:buy_sell_Token",
								"label": "minervaToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(MinervaToken)1383"
							},
							{
								"astId": 945,
								"contract": "contracts/BuyToken.sol:buy_sell_Token",
								"label": "tokensPerCoin",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 953,
								"contract": "contracts/BuyToken.sol:buy_sell_Token",
								"label": "maxTokensPerPurchase",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 961,
								"contract": "contracts/BuyToken.sol:buy_sell_Token",
								"label": "maxTokensPerAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 964,
								"contract": "contracts/BuyToken.sol:buy_sell_Token",
								"label": "sellDiscountPercent",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(MinervaToken)1383": {
								"encoding": "inplace",
								"label": "contract MinervaToken",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MinervaToken.sol": {
				"MinervaToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MinervaToken.sol\":224:506  contract MinervaToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MinervaToken.sol\":271:382  constructor(address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/MinervaToken.sol\":361:373  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x4d696e65727661546f6b656e0000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4d494e5600000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/MinervaToken.sol\":271:382  constructor(address initialOwner)... */\n  pop\n    /* \"contracts/MinervaToken.sol\":224:506  contract MinervaToken is ERC20, Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_54\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_56\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_57:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_59\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_62\n  tag_21\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":932:1051   */\ntag_61:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_63\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_26\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_27:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_28:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_29:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_30:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_68:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_70\n  tag_29\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1909:1993   */\ntag_69:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_31:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_32:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_33:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_34:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_75\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_33\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2624:2663   */\n  tag_76\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_33\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_35:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_36:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_37:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_80\n    /* \"#utility.yul\":3013:3047   */\n  tag_81\n    /* \"#utility.yul\":3022:3046   */\n  tag_82\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_35\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3013:3047   */\n  tag_36\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2995:3048   */\n  tag_35\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_38:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_39:\n    /* \"#utility.yul\":3251:3290   */\n  tag_85\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_37\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3312:3403   */\n  tag_86\n    /* \"#utility.yul\":3361:3402   */\n  tag_87\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_38\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_34\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_40:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_41:\n    /* \"#utility.yul\":3572:3604   */\n  tag_90\n  tag_40\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3613:3678   */\n  tag_91\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_39\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_42:\n    /* \"#utility.yul\":3750:3870   */\ntag_93:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_96\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_41\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_93)\ntag_95:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_43:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_99\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_31\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4101:4130   */\n  tag_100\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_32\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_101:\n    /* \"#utility.yul\":4328:4408   */\n  tag_102\n    /* \"#utility.yul\":4384:4406   */\n  tag_103\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_32\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_42\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_98:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_44:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_45:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_106\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_44\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_46:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_108\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_45\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_9:\n    /* \"#utility.yul\":5145:5182   */\n  tag_110\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_27\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_112\n  tag_28\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5233:5289   */\ntag_111:\n    /* \"#utility.yul\":5313:5351   */\n  tag_113\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_30\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5398:5465   */\n  tag_114\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_43\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_116\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_117:\n    /* \"#utility.yul\":6339:6406   */\n  tag_118\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_46\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_115)\n    /* \"#utility.yul\":5560:6178   */\ntag_116:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_119\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_31\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_120:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_120)\ntag_122:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_124\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_45\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_123:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_115:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_47:\n    /* \"#utility.yul\":6516:6540   */\n  tag_126\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_24\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_14:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_128\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_47\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MinervaToken.sol\":224:506  contract MinervaToken is ERC20, Ownable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MinervaToken.sol\":224:506  contract MinervaToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MinervaToken.sol\":390:503  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_8:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_73\n      swap1\n      tag_72\n      jump\t// in\n    tag_73:\n      dup1\n      iszero\n      tag_74\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_75\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_74)\n    tag_75:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_76:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_76\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MinervaToken.sol\":390:503  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_91:\n        /* \"contracts/MinervaToken.sol\":460:495  _mint(to, amount* 10 ** decimals()) */\n      tag_94\n        /* \"contracts/MinervaToken.sol\":466:468  to */\n      dup3\n        /* \"contracts/MinervaToken.sol\":484:494  decimals() */\n      tag_95\n        /* \"contracts/MinervaToken.sol\":484:492  decimals */\n      tag_38\n        /* \"contracts/MinervaToken.sol\":484:494  decimals() */\n      jump\t// in\n    tag_95:\n        /* \"contracts/MinervaToken.sol\":478:480  10 */\n      0x0a\n        /* \"contracts/MinervaToken.sol\":478:494  10 ** decimals() */\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"contracts/MinervaToken.sol\":470:476  amount */\n      dup4\n        /* \"contracts/MinervaToken.sol\":470:494  amount* 10 ** decimals() */\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"contracts/MinervaToken.sol\":460:465  _mint */\n      tag_100\n        /* \"contracts/MinervaToken.sol\":460:495  _mint(to, amount* 10 ** decimals()) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/MinervaToken.sol\":390:503  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_109\n      swap1\n      tag_72\n      jump\t// in\n    tag_109:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_110\n      swap1\n      tag_72\n      jump\t// in\n    tag_110:\n      dup1\n      iszero\n      tag_111\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_112\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_111)\n    tag_112:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_113:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_113\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_121\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_130\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_131\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_136\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_154\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_159\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_161\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_162\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_164)\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_168)\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_169\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_170:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_171:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_172:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_173:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_174:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_202\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_170\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":711:782   */\n      tag_203\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_171\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_204\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_172\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":881:910   */\n      tag_205\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_173\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_21:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_207\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_174\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_176:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_178:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_179:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_213\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_178\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_180:\n        /* \"#utility.yul\":1876:1900   */\n      tag_215\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_179\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_216\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_216:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_181:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_218\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_180\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_182:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_183:\n        /* \"#utility.yul\":2232:2256   */\n      tag_221\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_182\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_222\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_222:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_184:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_224\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_183\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_24:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_227\n      tag_176\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":2525:2644   */\n    tag_226:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_228\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_181\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_229\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_184\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_185:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_186:\n        /* \"#utility.yul\":3089:3110   */\n      tag_232\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_185\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_27:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_234\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_186\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_187:\n        /* \"#utility.yul\":3426:3450   */\n      tag_236\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_182\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_31:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_238\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_187\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_34:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_241\n      tag_176\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":3801:3920   */\n    tag_240:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_242\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_181\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_243\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_181\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_244\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_184\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_188:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_189:\n        /* \"#utility.yul\":4491:4513   */\n      tag_247\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_188\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_40:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_249\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_189\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_46:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_252\n      tag_176\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":4822:4941   */\n    tag_251:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_253\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_181\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5199   */\n    tag_190:\n        /* \"#utility.yul\":5168:5192   */\n      tag_255\n        /* \"#utility.yul\":5186:5191   */\n      dup2\n        /* \"#utility.yul\":5168:5192   */\n      tag_179\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5193   */\n      mstore\n        /* \"#utility.yul\":5081:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5427   */\n    tag_54:\n        /* \"#utility.yul\":5298:5302   */\n      0x00\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup3\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5313:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5420   */\n      tag_257\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5349:5420   */\n      tag_190\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":5205:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5907   */\n    tag_64:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5509:5515   */\n      dup1\n        /* \"#utility.yul\":5558:5560   */\n      0x40\n        /* \"#utility.yul\":5546:5555   */\n      dup4\n        /* \"#utility.yul\":5537:5544   */\n      dup6\n        /* \"#utility.yul\":5533:5556   */\n      sub\n        /* \"#utility.yul\":5529:5561   */\n      slt\n        /* \"#utility.yul\":5526:5645   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":5564:5643   */\n      tag_260\n      tag_176\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":5526:5645   */\n    tag_259:\n        /* \"#utility.yul\":5684:5685   */\n      0x00\n        /* \"#utility.yul\":5709:5762   */\n      tag_261\n        /* \"#utility.yul\":5754:5761   */\n      dup6\n        /* \"#utility.yul\":5745:5751   */\n      dup3\n        /* \"#utility.yul\":5734:5743   */\n      dup7\n        /* \"#utility.yul\":5730:5752   */\n      add\n        /* \"#utility.yul\":5709:5762   */\n      tag_181\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":5699:5762   */\n      swap3\n      pop\n        /* \"#utility.yul\":5655:5772   */\n      pop\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5837:5890   */\n      tag_262\n        /* \"#utility.yul\":5882:5889   */\n      dup6\n        /* \"#utility.yul\":5873:5879   */\n      dup3\n        /* \"#utility.yul\":5862:5871   */\n      dup7\n        /* \"#utility.yul\":5858:5880   */\n      add\n        /* \"#utility.yul\":5837:5890   */\n      tag_181\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":5827:5890   */\n      swap2\n      pop\n        /* \"#utility.yul\":5782:5900   */\n      pop\n        /* \"#utility.yul\":5433:5907   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5913:6093   */\n    tag_191:\n        /* \"#utility.yul\":5961:6038   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5958:5959   */\n      0x00\n        /* \"#utility.yul\":5951:6039   */\n      mstore\n        /* \"#utility.yul\":6058:6062   */\n      0x22\n        /* \"#utility.yul\":6055:6056   */\n      0x04\n        /* \"#utility.yul\":6048:6063   */\n      mstore\n        /* \"#utility.yul\":6082:6086   */\n      0x24\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6072:6087   */\n      revert\n        /* \"#utility.yul\":6099:6419   */\n    tag_72:\n        /* \"#utility.yul\":6143:6149   */\n      0x00\n        /* \"#utility.yul\":6180:6181   */\n      0x02\n        /* \"#utility.yul\":6174:6178   */\n      dup3\n        /* \"#utility.yul\":6170:6182   */\n      div\n        /* \"#utility.yul\":6160:6182   */\n      swap1\n      pop\n        /* \"#utility.yul\":6227:6228   */\n      0x01\n        /* \"#utility.yul\":6221:6225   */\n      dup3\n        /* \"#utility.yul\":6217:6229   */\n      and\n        /* \"#utility.yul\":6248:6266   */\n      dup1\n        /* \"#utility.yul\":6238:6319   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":6304:6308   */\n      0x7f\n        /* \"#utility.yul\":6296:6302   */\n      dup3\n        /* \"#utility.yul\":6292:6309   */\n      and\n        /* \"#utility.yul\":6282:6309   */\n      swap2\n      pop\n        /* \"#utility.yul\":6238:6319   */\n    tag_265:\n        /* \"#utility.yul\":6366:6368   */\n      0x20\n        /* \"#utility.yul\":6358:6364   */\n      dup3\n        /* \"#utility.yul\":6355:6369   */\n      lt\n        /* \"#utility.yul\":6335:6353   */\n      dup2\n        /* \"#utility.yul\":6332:6370   */\n      sub\n        /* \"#utility.yul\":6329:6413   */\n      tag_266\n      jumpi\n        /* \"#utility.yul\":6385:6403   */\n      tag_267\n      tag_191\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":6329:6413   */\n    tag_266:\n        /* \"#utility.yul\":6150:6419   */\n      pop\n        /* \"#utility.yul\":6099:6419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6425:6605   */\n    tag_192:\n        /* \"#utility.yul\":6473:6550   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6470:6471   */\n      0x00\n        /* \"#utility.yul\":6463:6551   */\n      mstore\n        /* \"#utility.yul\":6570:6574   */\n      0x11\n        /* \"#utility.yul\":6567:6568   */\n      0x04\n        /* \"#utility.yul\":6560:6575   */\n      mstore\n        /* \"#utility.yul\":6594:6598   */\n      0x24\n        /* \"#utility.yul\":6591:6592   */\n      0x00\n        /* \"#utility.yul\":6584:6599   */\n      revert\n        /* \"#utility.yul\":6611:6713   */\n    tag_193:\n        /* \"#utility.yul\":6653:6661   */\n      0x00\n        /* \"#utility.yul\":6700:6705   */\n      dup2\n        /* \"#utility.yul\":6697:6698   */\n      0x01\n        /* \"#utility.yul\":6693:6706   */\n      shr\n        /* \"#utility.yul\":6672:6706   */\n      swap1\n      pop\n        /* \"#utility.yul\":6611:6713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6719:7567   */\n    tag_194:\n        /* \"#utility.yul\":6780:6785   */\n      0x00\n        /* \"#utility.yul\":6787:6791   */\n      dup1\n        /* \"#utility.yul\":6811:6817   */\n      dup3\n        /* \"#utility.yul\":6802:6817   */\n      swap2\n      pop\n        /* \"#utility.yul\":6835:6840   */\n      dup4\n        /* \"#utility.yul\":6826:6840   */\n      swap1\n      pop\n        /* \"#utility.yul\":6849:7561   */\n    tag_271:\n        /* \"#utility.yul\":6870:6871   */\n      0x01\n        /* \"#utility.yul\":6860:6868   */\n      dup6\n        /* \"#utility.yul\":6857:6872   */\n      gt\n        /* \"#utility.yul\":6849:7561   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":6965:6969   */\n      dup1\n        /* \"#utility.yul\":6960:6963   */\n      dup7\n        /* \"#utility.yul\":6956:6970   */\n      div\n        /* \"#utility.yul\":6950:6954   */\n      dup2\n        /* \"#utility.yul\":6947:6971   */\n      gt\n        /* \"#utility.yul\":6944:6994   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":6974:6992   */\n      tag_275\n      tag_192\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":6944:6994   */\n    tag_274:\n        /* \"#utility.yul\":7024:7025   */\n      0x01\n        /* \"#utility.yul\":7014:7022   */\n      dup6\n        /* \"#utility.yul\":7010:7026   */\n      and\n        /* \"#utility.yul\":7007:7458   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":7439:7443   */\n      dup1\n        /* \"#utility.yul\":7432:7437   */\n      dup3\n        /* \"#utility.yul\":7428:7444   */\n      mul\n        /* \"#utility.yul\":7419:7444   */\n      swap2\n      pop\n        /* \"#utility.yul\":7007:7458   */\n    tag_276:\n        /* \"#utility.yul\":7489:7493   */\n      dup1\n        /* \"#utility.yul\":7483:7487   */\n      dup2\n        /* \"#utility.yul\":7479:7494   */\n      mul\n        /* \"#utility.yul\":7471:7494   */\n      swap1\n      pop\n        /* \"#utility.yul\":7519:7551   */\n      tag_277\n        /* \"#utility.yul\":7542:7550   */\n      dup6\n        /* \"#utility.yul\":7519:7551   */\n      tag_193\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":7507:7551   */\n      swap5\n      pop\n        /* \"#utility.yul\":6849:7561   */\n      jump(tag_271)\n    tag_273:\n        /* \"#utility.yul\":6719:7567   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7573:8646   */\n    tag_195:\n        /* \"#utility.yul\":7627:7632   */\n      0x00\n        /* \"#utility.yul\":7818:7826   */\n      dup3\n        /* \"#utility.yul\":7808:7848   */\n      tag_279\n      jumpi\n        /* \"#utility.yul\":7839:7840   */\n      0x01\n        /* \"#utility.yul\":7830:7840   */\n      swap1\n      pop\n        /* \"#utility.yul\":7841:7846   */\n      jump(tag_278)\n        /* \"#utility.yul\":7808:7848   */\n    tag_279:\n        /* \"#utility.yul\":7867:7871   */\n      dup2\n        /* \"#utility.yul\":7857:7893   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":7884:7885   */\n      0x00\n        /* \"#utility.yul\":7875:7885   */\n      swap1\n      pop\n        /* \"#utility.yul\":7886:7891   */\n      jump(tag_278)\n        /* \"#utility.yul\":7857:7893   */\n    tag_280:\n        /* \"#utility.yul\":7953:7957   */\n      dup2\n        /* \"#utility.yul\":8001:8002   */\n      0x01\n        /* \"#utility.yul\":7996:8023   */\n      dup2\n      eq\n      tag_282\n      jumpi\n        /* \"#utility.yul\":8037:8038   */\n      0x02\n        /* \"#utility.yul\":8032:8223   */\n      dup2\n      eq\n      tag_283\n      jumpi\n        /* \"#utility.yul\":7946:8223   */\n      jump(tag_281)\n        /* \"#utility.yul\":7996:8023   */\n    tag_282:\n        /* \"#utility.yul\":8014:8015   */\n      0x01\n        /* \"#utility.yul\":8005:8015   */\n      swap2\n      pop\n        /* \"#utility.yul\":8016:8021   */\n      pop\n      jump(tag_278)\n        /* \"#utility.yul\":8032:8223   */\n    tag_283:\n        /* \"#utility.yul\":8077:8080   */\n      0xff\n        /* \"#utility.yul\":8067:8075   */\n      dup5\n        /* \"#utility.yul\":8064:8081   */\n      gt\n        /* \"#utility.yul\":8061:8104   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":8084:8102   */\n      tag_285\n      tag_192\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":8061:8104   */\n    tag_284:\n        /* \"#utility.yul\":8133:8141   */\n      dup4\n        /* \"#utility.yul\":8130:8131   */\n      0x02\n        /* \"#utility.yul\":8126:8142   */\n      exp\n        /* \"#utility.yul\":8117:8142   */\n      swap2\n      pop\n        /* \"#utility.yul\":8168:8171   */\n      dup5\n        /* \"#utility.yul\":8161:8166   */\n      dup3\n        /* \"#utility.yul\":8158:8172   */\n      gt\n        /* \"#utility.yul\":8155:8195   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":8175:8193   */\n      tag_287\n      tag_192\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":8155:8195   */\n    tag_286:\n        /* \"#utility.yul\":8208:8213   */\n      pop\n      jump(tag_278)\n        /* \"#utility.yul\":7946:8223   */\n    tag_281:\n      pop\n        /* \"#utility.yul\":8332:8334   */\n      0x20\n        /* \"#utility.yul\":8322:8330   */\n      dup4\n        /* \"#utility.yul\":8319:8335   */\n      lt\n        /* \"#utility.yul\":8313:8316   */\n      0x0133\n        /* \"#utility.yul\":8307:8311   */\n      dup4\n        /* \"#utility.yul\":8304:8317   */\n      lt\n        /* \"#utility.yul\":8300:8336   */\n      and\n        /* \"#utility.yul\":8282:8284   */\n      0x4e\n        /* \"#utility.yul\":8272:8280   */\n      dup5\n        /* \"#utility.yul\":8269:8285   */\n      lt\n        /* \"#utility.yul\":8264:8266   */\n      0x0b\n        /* \"#utility.yul\":8258:8262   */\n      dup5\n        /* \"#utility.yul\":8255:8267   */\n      lt\n        /* \"#utility.yul\":8251:8286   */\n      and\n        /* \"#utility.yul\":8235:8346   */\n      or\n        /* \"#utility.yul\":8232:8478   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":8388:8396   */\n      dup3\n        /* \"#utility.yul\":8382:8386   */\n      dup3\n        /* \"#utility.yul\":8378:8397   */\n      exp\n        /* \"#utility.yul\":8369:8397   */\n      swap1\n      pop\n        /* \"#utility.yul\":8423:8426   */\n      dup4\n        /* \"#utility.yul\":8416:8421   */\n      dup2\n        /* \"#utility.yul\":8413:8427   */\n      gt\n        /* \"#utility.yul\":8410:8450   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":8430:8448   */\n      tag_290\n      tag_192\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":8410:8450   */\n    tag_289:\n        /* \"#utility.yul\":8463:8468   */\n      jump(tag_278)\n        /* \"#utility.yul\":8232:8478   */\n    tag_288:\n        /* \"#utility.yul\":8503:8545   */\n      tag_291\n        /* \"#utility.yul\":8541:8544   */\n      dup5\n        /* \"#utility.yul\":8531:8539   */\n      dup5\n        /* \"#utility.yul\":8525:8529   */\n      dup5\n        /* \"#utility.yul\":8522:8523   */\n      0x01\n        /* \"#utility.yul\":8503:8545   */\n      tag_194\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":8488:8545   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":8577:8581   */\n      dup2\n        /* \"#utility.yul\":8572:8575   */\n      dup5\n        /* \"#utility.yul\":8568:8582   */\n      div\n        /* \"#utility.yul\":8561:8566   */\n      dup2\n        /* \"#utility.yul\":8558:8583   */\n      gt\n        /* \"#utility.yul\":8555:8606   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":8586:8604   */\n      tag_293\n      tag_192\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":8555:8606   */\n    tag_292:\n        /* \"#utility.yul\":8635:8639   */\n      dup2\n        /* \"#utility.yul\":8628:8633   */\n      dup2\n        /* \"#utility.yul\":8624:8640   */\n      mul\n        /* \"#utility.yul\":8615:8640   */\n      swap1\n      pop\n        /* \"#utility.yul\":7573:8646   */\n    tag_278:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8652:8933   */\n    tag_97:\n        /* \"#utility.yul\":8710:8715   */\n      0x00\n        /* \"#utility.yul\":8734:8757   */\n      tag_295\n        /* \"#utility.yul\":8752:8756   */\n      dup3\n        /* \"#utility.yul\":8734:8757   */\n      tag_182\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":8726:8757   */\n      swap2\n      pop\n        /* \"#utility.yul\":8778:8803   */\n      tag_296\n        /* \"#utility.yul\":8794:8802   */\n      dup4\n        /* \"#utility.yul\":8778:8803   */\n      tag_188\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":8766:8803   */\n      swap3\n      pop\n        /* \"#utility.yul\":8822:8926   */\n      tag_297\n        /* \"#utility.yul\":8859:8925   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8849:8857   */\n      dup5\n        /* \"#utility.yul\":8843:8847   */\n      dup5\n        /* \"#utility.yul\":8822:8926   */\n      tag_195\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":8813:8926   */\n      swap1\n      pop\n        /* \"#utility.yul\":8652:8933   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8939:9349   */\n    tag_99:\n        /* \"#utility.yul\":8979:8986   */\n      0x00\n        /* \"#utility.yul\":9002:9022   */\n      tag_299\n        /* \"#utility.yul\":9020:9021   */\n      dup3\n        /* \"#utility.yul\":9002:9022   */\n      tag_182\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":8997:9022   */\n      swap2\n      pop\n        /* \"#utility.yul\":9036:9056   */\n      tag_300\n        /* \"#utility.yul\":9054:9055   */\n      dup4\n        /* \"#utility.yul\":9036:9056   */\n      tag_182\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":9031:9056   */\n      swap3\n      pop\n        /* \"#utility.yul\":9091:9092   */\n      dup3\n        /* \"#utility.yul\":9088:9089   */\n      dup3\n        /* \"#utility.yul\":9084:9093   */\n      mul\n        /* \"#utility.yul\":9113:9143   */\n      tag_301\n        /* \"#utility.yul\":9131:9142   */\n      dup2\n        /* \"#utility.yul\":9113:9143   */\n      tag_182\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":9102:9143   */\n      swap2\n      pop\n        /* \"#utility.yul\":9292:9293   */\n      dup3\n        /* \"#utility.yul\":9283:9290   */\n      dup3\n        /* \"#utility.yul\":9279:9294   */\n      div\n        /* \"#utility.yul\":9276:9277   */\n      dup5\n        /* \"#utility.yul\":9273:9295   */\n      eq\n        /* \"#utility.yul\":9253:9254   */\n      dup4\n        /* \"#utility.yul\":9246:9255   */\n      iszero\n        /* \"#utility.yul\":9226:9309   */\n      or\n        /* \"#utility.yul\":9203:9342   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":9322:9340   */\n      tag_303\n      tag_192\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":9203:9342   */\n    tag_302:\n        /* \"#utility.yul\":8987:9349   */\n      pop\n        /* \"#utility.yul\":8939:9349   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9355:9797   */\n    tag_133:\n        /* \"#utility.yul\":9504:9508   */\n      0x00\n        /* \"#utility.yul\":9542:9544   */\n      0x60\n        /* \"#utility.yul\":9531:9540   */\n      dup3\n        /* \"#utility.yul\":9527:9545   */\n      add\n        /* \"#utility.yul\":9519:9545   */\n      swap1\n      pop\n        /* \"#utility.yul\":9555:9626   */\n      tag_305\n        /* \"#utility.yul\":9623:9624   */\n      0x00\n        /* \"#utility.yul\":9612:9621   */\n      dup4\n        /* \"#utility.yul\":9608:9625   */\n      add\n        /* \"#utility.yul\":9599:9605   */\n      dup7\n        /* \"#utility.yul\":9555:9626   */\n      tag_190\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":9636:9708   */\n      tag_306\n        /* \"#utility.yul\":9704:9706   */\n      0x20\n        /* \"#utility.yul\":9693:9702   */\n      dup4\n        /* \"#utility.yul\":9689:9707   */\n      add\n        /* \"#utility.yul\":9680:9686   */\n      dup6\n        /* \"#utility.yul\":9636:9708   */\n      tag_187\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":9718:9790   */\n      tag_307\n        /* \"#utility.yul\":9786:9788   */\n      0x40\n        /* \"#utility.yul\":9775:9784   */\n      dup4\n        /* \"#utility.yul\":9771:9789   */\n      add\n        /* \"#utility.yul\":9762:9768   */\n      dup5\n        /* \"#utility.yul\":9718:9790   */\n      tag_187\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":9355:9797   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9803:9994   */\n    tag_163:\n        /* \"#utility.yul\":9843:9846   */\n      0x00\n        /* \"#utility.yul\":9862:9882   */\n      tag_309\n        /* \"#utility.yul\":9880:9881   */\n      dup3\n        /* \"#utility.yul\":9862:9882   */\n      tag_182\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":9857:9882   */\n      swap2\n      pop\n        /* \"#utility.yul\":9896:9916   */\n      tag_310\n        /* \"#utility.yul\":9914:9915   */\n      dup4\n        /* \"#utility.yul\":9896:9916   */\n      tag_182\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":9891:9916   */\n      swap3\n      pop\n        /* \"#utility.yul\":9939:9940   */\n      dup3\n        /* \"#utility.yul\":9936:9937   */\n      dup3\n        /* \"#utility.yul\":9932:9941   */\n      add\n        /* \"#utility.yul\":9925:9941   */\n      swap1\n      pop\n        /* \"#utility.yul\":9960:9963   */\n      dup1\n        /* \"#utility.yul\":9957:9958   */\n      dup3\n        /* \"#utility.yul\":9954:9964   */\n      gt\n        /* \"#utility.yul\":9951:9987   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":9967:9985   */\n      tag_312\n      tag_192\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":9951:9987   */\n    tag_311:\n        /* \"#utility.yul\":9803:9994   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220df0e6dfcd235895f2313aafe1b0bbd93a8e799e41506c89f32586c62448ca05e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1362": {
									"entryPoint": null,
									"id": 1362,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 326,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 713,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 668,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 521,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 992,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1029,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6778:8",
										"nodeType": "YulBlock",
										"src": "0:6778:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:81:8",
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nativeSrc": "389:65:8",
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:8",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nativeSrc": "400:54:8",
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nativeSrc": "511:51:8",
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nativeSrc": "521:35:8",
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nativeSrc": "532:24:8",
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:8",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:8",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nativeSrc": "611:79:8",
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:8",
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:8",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:8",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nativeSrc": "670:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nativeSrc": "670:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nativeSrc": "641:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nativeSrc": "631:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nativeSrc": "624:43:8",
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nativeSrc": "621:63:8",
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:8",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nativeSrc": "759:80:8",
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nativeSrc": "769:22:8",
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nativeSrc": "778:13:8",
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nativeSrc": "800:33:8",
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nativeSrc": "800:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:8",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:8",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:8",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nativeSrc": "922:274:8",
													"nodeType": "YulBlock",
													"src": "922:274:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:8",
																"nodeType": "YulBlock",
																"src": "968:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:8"
																			},
																			"nativeSrc": "970:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:8"
																		},
																		"nativeSrc": "970:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:8"
																		},
																		"nativeSrc": "939:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:8",
																		"nodeType": "YulLiteral",
																		"src": "964:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:8"
																},
																"nativeSrc": "935:32:8",
																"nodeType": "YulFunctionCall",
																"src": "935:32:8"
															},
															"nativeSrc": "932:119:8",
															"nodeType": "YulIf",
															"src": "932:119:8"
														},
														{
															"nativeSrc": "1061:128:8",
															"nodeType": "YulBlock",
															"src": "1061:128:8",
															"statements": [
																{
																	"nativeSrc": "1076:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:8"
																				},
																				"nativeSrc": "1147:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:8"
																		},
																		"nativeSrc": "1115:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:8",
														"nodeType": "YulTypedName",
														"src": "892:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:8",
														"nodeType": "YulTypedName",
														"src": "903:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:8",
														"nodeType": "YulTypedName",
														"src": "915:6:8",
														"type": ""
													}
												],
												"src": "845:351:8"
											},
											{
												"body": {
													"nativeSrc": "1261:40:8",
													"nodeType": "YulBlock",
													"src": "1261:40:8",
													"statements": [
														{
															"nativeSrc": "1272:22:8",
															"nodeType": "YulAssignment",
															"src": "1272:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:8"
																},
																"nativeSrc": "1282:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:8",
														"nodeType": "YulTypedName",
														"src": "1244:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:8",
														"nodeType": "YulTypedName",
														"src": "1254:6:8",
														"type": ""
													}
												],
												"src": "1202:99:8"
											},
											{
												"body": {
													"nativeSrc": "1335:152:8",
													"nodeType": "YulBlock",
													"src": "1335:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:8",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:8"
																},
																"nativeSrc": "1345:88:8",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:8"
															},
															"nativeSrc": "1345:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:8"
																},
																"nativeSrc": "1442:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:8"
															},
															"nativeSrc": "1442:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:8"
																},
																"nativeSrc": "1466:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:8"
															},
															"nativeSrc": "1466:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:8"
											},
											{
												"body": {
													"nativeSrc": "1521:152:8",
													"nodeType": "YulBlock",
													"src": "1521:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:8",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:8"
																},
																"nativeSrc": "1531:88:8",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:8"
															},
															"nativeSrc": "1531:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:8"
																},
																"nativeSrc": "1628:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:8"
															},
															"nativeSrc": "1628:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:8"
																},
																"nativeSrc": "1652:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:8"
															},
															"nativeSrc": "1652:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:8"
											},
											{
												"body": {
													"nativeSrc": "1730:269:8",
													"nodeType": "YulBlock",
													"src": "1730:269:8",
													"statements": [
														{
															"nativeSrc": "1740:22:8",
															"nodeType": "YulAssignment",
															"src": "1740:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:8"
																},
																"nativeSrc": "1750:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:8"
																}
															]
														},
														{
															"nativeSrc": "1771:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:8"
																},
																"nativeSrc": "1797:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:8",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:8",
																"nodeType": "YulBlock",
																"src": "1848:51:8",
																"statements": [
																	{
																		"nativeSrc": "1862:27:8",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:8"
																			},
																			"nativeSrc": "1872:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:8"
																},
																"nativeSrc": "1821:26:8",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:8"
															},
															"nativeSrc": "1818:81:8",
															"nodeType": "YulIf",
															"src": "1818:81:8"
														},
														{
															"body": {
																"nativeSrc": "1951:42:8",
																"nodeType": "YulBlock",
																"src": "1951:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:8"
																			},
																			"nativeSrc": "1965:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:8"
																		},
																		"nativeSrc": "1965:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:8"
																		},
																		"nativeSrc": "1935:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:8"
																},
																"nativeSrc": "1912:38:8",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:8"
															},
															"nativeSrc": "1909:84:8",
															"nodeType": "YulIf",
															"src": "1909:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:8",
														"nodeType": "YulTypedName",
														"src": "1714:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:8",
														"nodeType": "YulTypedName",
														"src": "1723:6:8",
														"type": ""
													}
												],
												"src": "1679:320:8"
											},
											{
												"body": {
													"nativeSrc": "2059:87:8",
													"nodeType": "YulBlock",
													"src": "2059:87:8",
													"statements": [
														{
															"nativeSrc": "2069:11:8",
															"nodeType": "YulAssignment",
															"src": "2069:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:8",
																"nodeType": "YulIdentifier",
																"src": "2077:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:8"
																},
																"nativeSrc": "2090:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:8"
															},
															"nativeSrc": "2090:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:8"
														},
														{
															"nativeSrc": "2113:26:8",
															"nodeType": "YulAssignment",
															"src": "2113:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:8"
																},
																"nativeSrc": "2121:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:8",
														"nodeType": "YulTypedName",
														"src": "2046:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:8",
														"nodeType": "YulTypedName",
														"src": "2054:4:8",
														"type": ""
													}
												],
												"src": "2005:141:8"
											},
											{
												"body": {
													"nativeSrc": "2196:49:8",
													"nodeType": "YulBlock",
													"src": "2196:49:8",
													"statements": [
														{
															"nativeSrc": "2206:33:8",
															"nodeType": "YulAssignment",
															"src": "2206:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:8"
																		},
																		"nativeSrc": "2220:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:8"
																},
																"nativeSrc": "2216:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:8",
														"nodeType": "YulTypedName",
														"src": "2179:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:8",
														"nodeType": "YulTypedName",
														"src": "2189:6:8",
														"type": ""
													}
												],
												"src": "2152:93:8"
											},
											{
												"body": {
													"nativeSrc": "2304:54:8",
													"nodeType": "YulBlock",
													"src": "2304:54:8",
													"statements": [
														{
															"nativeSrc": "2314:37:8",
															"nodeType": "YulAssignment",
															"src": "2314:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:8"
																},
																"nativeSrc": "2335:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:8",
														"nodeType": "YulTypedName",
														"src": "2279:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:8",
														"nodeType": "YulTypedName",
														"src": "2285:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:8",
														"nodeType": "YulTypedName",
														"src": "2295:8:8",
														"type": ""
													}
												],
												"src": "2251:107:8"
											},
											{
												"body": {
													"nativeSrc": "2440:317:8",
													"nodeType": "YulBlock",
													"src": "2440:317:8",
													"statements": [
														{
															"nativeSrc": "2450:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:8"
																},
																"nativeSrc": "2467:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:8",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:8",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:8"
																},
																"nativeSrc": "2506:97:8",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:8",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:8",
															"nodeType": "YulAssignment",
															"src": "2612:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:8"
																},
																"nativeSrc": "2624:39:8",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:8"
																}
															]
														},
														{
															"nativeSrc": "2672:30:8",
															"nodeType": "YulAssignment",
															"src": "2672:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:8"
																		},
																		"nativeSrc": "2692:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:8"
																},
																"nativeSrc": "2681:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:8"
																}
															]
														},
														{
															"nativeSrc": "2711:40:8",
															"nodeType": "YulAssignment",
															"src": "2711:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:8"
																		},
																		"nativeSrc": "2731:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:8"
																},
																"nativeSrc": "2721:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:8",
														"nodeType": "YulTypedName",
														"src": "2401:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:8",
														"nodeType": "YulTypedName",
														"src": "2408:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:8",
														"nodeType": "YulTypedName",
														"src": "2420:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:8",
														"nodeType": "YulTypedName",
														"src": "2433:6:8",
														"type": ""
													}
												],
												"src": "2364:393:8"
											},
											{
												"body": {
													"nativeSrc": "2808:32:8",
													"nodeType": "YulBlock",
													"src": "2808:32:8",
													"statements": [
														{
															"nativeSrc": "2818:16:8",
															"nodeType": "YulAssignment",
															"src": "2818:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:8",
																"nodeType": "YulIdentifier",
																"src": "2829:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:8",
														"nodeType": "YulTypedName",
														"src": "2790:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:8",
														"nodeType": "YulTypedName",
														"src": "2800:7:8",
														"type": ""
													}
												],
												"src": "2763:77:8"
											},
											{
												"body": {
													"nativeSrc": "2878:28:8",
													"nodeType": "YulBlock",
													"src": "2878:28:8",
													"statements": [
														{
															"nativeSrc": "2888:12:8",
															"nodeType": "YulAssignment",
															"src": "2888:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:8",
																"nodeType": "YulIdentifier",
																"src": "2895:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:8",
														"nodeType": "YulTypedName",
														"src": "2864:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:8",
														"nodeType": "YulTypedName",
														"src": "2874:3:8",
														"type": ""
													}
												],
												"src": "2846:60:8"
											},
											{
												"body": {
													"nativeSrc": "2972:82:8",
													"nodeType": "YulBlock",
													"src": "2972:82:8",
													"statements": [
														{
															"nativeSrc": "2982:66:8",
															"nodeType": "YulAssignment",
															"src": "2982:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:8"
																				},
																				"nativeSrc": "3022:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:8"
																		},
																		"nativeSrc": "3013:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:8"
																},
																"nativeSrc": "2995:53:8",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:8",
														"nodeType": "YulTypedName",
														"src": "2952:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:8",
														"nodeType": "YulTypedName",
														"src": "2962:9:8",
														"type": ""
													}
												],
												"src": "2912:142:8"
											},
											{
												"body": {
													"nativeSrc": "3107:28:8",
													"nodeType": "YulBlock",
													"src": "3107:28:8",
													"statements": [
														{
															"nativeSrc": "3117:12:8",
															"nodeType": "YulAssignment",
															"src": "3117:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:8",
																"nodeType": "YulIdentifier",
																"src": "3124:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:8",
														"nodeType": "YulTypedName",
														"src": "3093:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:8",
														"nodeType": "YulTypedName",
														"src": "3103:3:8",
														"type": ""
													}
												],
												"src": "3060:75:8"
											},
											{
												"body": {
													"nativeSrc": "3217:193:8",
													"nodeType": "YulBlock",
													"src": "3217:193:8",
													"statements": [
														{
															"nativeSrc": "3227:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:8"
																},
																"nativeSrc": "3251:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:8",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:8"
																				},
																				"nativeSrc": "3340:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:8"
																				},
																				"nativeSrc": "3361:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:8"
																		},
																		"nativeSrc": "3312:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:8"
																},
																"nativeSrc": "3299:105:8",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:8"
															},
															"nativeSrc": "3299:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:8",
														"nodeType": "YulTypedName",
														"src": "3194:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:8",
														"nodeType": "YulTypedName",
														"src": "3200:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:8",
														"nodeType": "YulTypedName",
														"src": "3208:7:8",
														"type": ""
													}
												],
												"src": "3141:269:8"
											},
											{
												"body": {
													"nativeSrc": "3465:24:8",
													"nodeType": "YulBlock",
													"src": "3465:24:8",
													"statements": [
														{
															"nativeSrc": "3475:8:8",
															"nodeType": "YulAssignment",
															"src": "3475:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:8",
																"nodeType": "YulLiteral",
																"src": "3482:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:8",
														"nodeType": "YulTypedName",
														"src": "3461:3:8",
														"type": ""
													}
												],
												"src": "3416:73:8"
											},
											{
												"body": {
													"nativeSrc": "3548:136:8",
													"nodeType": "YulBlock",
													"src": "3548:136:8",
													"statements": [
														{
															"nativeSrc": "3558:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:8"
																},
																"nativeSrc": "3572:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:8",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:8"
																},
																"nativeSrc": "3613:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:8"
															},
															"nativeSrc": "3613:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:8",
														"nodeType": "YulTypedName",
														"src": "3534:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:8",
														"nodeType": "YulTypedName",
														"src": "3540:6:8",
														"type": ""
													}
												],
												"src": "3495:189:8"
											},
											{
												"body": {
													"nativeSrc": "3740:136:8",
													"nodeType": "YulBlock",
													"src": "3740:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:8",
																"nodeType": "YulBlock",
																"src": "3807:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:8"
																			},
																			"nativeSrc": "3821:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:8"
																		},
																		"nativeSrc": "3821:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:8"
																},
																"nativeSrc": "3757:14:8",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:8"
															},
															"nativeSrc": "3750:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:8",
																"nodeType": "YulBlock",
																"src": "3772:26:8",
																"statements": [
																	{
																		"nativeSrc": "3774:22:8",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:8"
																			},
																			"nativeSrc": "3783:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:8",
																"nodeType": "YulBlock",
																"src": "3754:2:8",
																"statements": []
															},
															"src": "3750:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:8",
														"nodeType": "YulTypedName",
														"src": "3728:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:8",
														"nodeType": "YulTypedName",
														"src": "3735:3:8",
														"type": ""
													}
												],
												"src": "3690:186:8"
											},
											{
												"body": {
													"nativeSrc": "3961:464:8",
													"nodeType": "YulBlock",
													"src": "3961:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:8",
																"nodeType": "YulBlock",
																"src": "3987:431:8",
																"statements": [
																	{
																		"nativeSrc": "4001:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:8"
																			},
																			"nativeSrc": "4017:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:8",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:8"
																					},
																					"nativeSrc": "4101:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:8"
																			},
																			"nativeSrc": "4087:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:8",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:8",
																			"nodeType": "YulBlock",
																			"src": "4288:27:8",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:8",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:8",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:8"
																			},
																			"nativeSrc": "4269:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:8"
																		},
																		"nativeSrc": "4266:49:8",
																		"nodeType": "YulIf",
																		"src": "4266:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:8"
																							},
																							"nativeSrc": "4384:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:8"
																					},
																					"nativeSrc": "4370:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:8"
																			},
																			"nativeSrc": "4328:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:8"
																		},
																		"nativeSrc": "4328:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:8"
																},
																"nativeSrc": "3975:11:8",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:8"
															},
															"nativeSrc": "3972:446:8",
															"nodeType": "YulIf",
															"src": "3972:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:8",
														"nodeType": "YulTypedName",
														"src": "3937:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:8",
														"nodeType": "YulTypedName",
														"src": "3944:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:8",
														"nodeType": "YulTypedName",
														"src": "3949:10:8",
														"type": ""
													}
												],
												"src": "3882:543:8"
											},
											{
												"body": {
													"nativeSrc": "4494:54:8",
													"nodeType": "YulBlock",
													"src": "4494:54:8",
													"statements": [
														{
															"nativeSrc": "4504:37:8",
															"nodeType": "YulAssignment",
															"src": "4504:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:8"
																},
																"nativeSrc": "4525:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:8",
														"nodeType": "YulTypedName",
														"src": "4469:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:8",
														"nodeType": "YulTypedName",
														"src": "4475:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:8",
														"nodeType": "YulTypedName",
														"src": "4485:8:8",
														"type": ""
													}
												],
												"src": "4431:117:8"
											},
											{
												"body": {
													"nativeSrc": "4605:118:8",
													"nodeType": "YulBlock",
													"src": "4605:118:8",
													"statements": [
														{
															"nativeSrc": "4615:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:8"
																				},
																				"nativeSrc": "4660:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:8"
																				},
																				"nativeSrc": "4675:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:8"
																		},
																		"nativeSrc": "4631:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:8"
																},
																"nativeSrc": "4627:56:8",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:8",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:8",
															"nodeType": "YulAssignment",
															"src": "4692:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:8"
																},
																"nativeSrc": "4702:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:8",
														"nodeType": "YulTypedName",
														"src": "4582:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:8",
														"nodeType": "YulTypedName",
														"src": "4588:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:8",
														"nodeType": "YulTypedName",
														"src": "4598:6:8",
														"type": ""
													}
												],
												"src": "4554:169:8"
											},
											{
												"body": {
													"nativeSrc": "4809:214:8",
													"nodeType": "YulBlock",
													"src": "4809:214:8",
													"statements": [
														{
															"nativeSrc": "4942:37:8",
															"nodeType": "YulAssignment",
															"src": "4942:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:8"
																},
																"nativeSrc": "4950:29:8",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:8"
																}
															]
														},
														{
															"nativeSrc": "4988:29:8",
															"nodeType": "YulAssignment",
															"src": "4988:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:8"
																		},
																		"nativeSrc": "5005:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:8"
																},
																"nativeSrc": "4996:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:8",
														"nodeType": "YulTypedName",
														"src": "4790:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:8",
														"nodeType": "YulTypedName",
														"src": "4796:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:8",
														"nodeType": "YulTypedName",
														"src": "4804:4:8",
														"type": ""
													}
												],
												"src": "4728:295:8"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:8",
													"nodeType": "YulBlock",
													"src": "5120:1303:8",
													"statements": [
														{
															"nativeSrc": "5131:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:8"
																},
																"nativeSrc": "5145:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:8",
																"nodeType": "YulBlock",
																"src": "5267:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:8"
																			},
																			"nativeSrc": "5269:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:8"
																		},
																		"nativeSrc": "5269:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:8",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:8"
																},
																"nativeSrc": "5236:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:8"
															},
															"nativeSrc": "5233:56:8",
															"nodeType": "YulIf",
															"src": "5233:56:8"
														},
														{
															"nativeSrc": "5299:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:8"
																		},
																		"nativeSrc": "5339:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:8"
																},
																"nativeSrc": "5313:38:8",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:8"
																},
																"nativeSrc": "5398:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:8"
															},
															"nativeSrc": "5398:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:8"
														},
														{
															"nativeSrc": "5475:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:8",
																"nodeType": "YulLiteral",
																"src": "5492:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:8",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:8",
															"nodeType": "YulAssignment",
															"src": "5503:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:8",
																"nodeType": "YulLiteral",
																"src": "5516:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:8",
																		"nodeType": "YulBlock",
																		"src": "5567:611:8",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:8",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:8"
																							},
																							"nativeSrc": "5608:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:8"
																					},
																					"nativeSrc": "5596:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:8",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:8"
																					},
																					"nativeSrc": "5646:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:8",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:8",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:8",
																					"nodeType": "YulBlock",
																					"src": "5764:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:8"
																												},
																												"nativeSrc": "5803:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:8"
																										},
																										"nativeSrc": "5797:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:8"
																								},
																								"nativeSrc": "5782:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:8"
																							},
																							"nativeSrc": "5782:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:8"
																						},
																						{
																							"nativeSrc": "5841:24:8",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:8",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:8"
																								},
																								"nativeSrc": "5851:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:8",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:8",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:8"
																								},
																								"nativeSrc": "5895:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:8"
																					},
																					"nativeSrc": "5727:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:8"
																				},
																				"nativeSrc": "5719:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:8",
																					"nodeType": "YulBlock",
																					"src": "5742:21:8",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:8",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:8",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:8"
																								},
																								"nativeSrc": "5749:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:8",
																					"nodeType": "YulBlock",
																					"src": "5723:3:8",
																					"statements": []
																				},
																				"src": "5719:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:8",
																					"nodeType": "YulBlock",
																					"src": "5963:156:8",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:8"
																										},
																										"nativeSrc": "6004:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:8"
																								},
																								"nativeSrc": "5998:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:8",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:8",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:8"
																												},
																												"nativeSrc": "6086:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:8"
																										},
																										"nativeSrc": "6056:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:8"
																								},
																								"nativeSrc": "6041:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:8"
																							},
																							"nativeSrc": "6041:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:8"
																					},
																					"nativeSrc": "5943:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:8"
																				},
																				"nativeSrc": "5940:179:8",
																				"nodeType": "YulIf",
																				"src": "5940:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:8",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:8"
																									},
																									"nativeSrc": "6149:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:8",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:8"
																							},
																							"nativeSrc": "6145:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:8"
																					},
																					"nativeSrc": "6132:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:8"
																				},
																				"nativeSrc": "6132:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:8"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:8",
																	"nodeType": "YulCase",
																	"src": "5560:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:8",
																		"nodeType": "YulBlock",
																		"src": "6195:222:8",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:8",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:8",
																					"nodeType": "YulBlock",
																					"src": "6246:67:8",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:8",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:8"
																										},
																										"nativeSrc": "6279:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:8"
																								},
																								"nativeSrc": "6273:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:8"
																				},
																				"nativeSrc": "6236:77:8",
																				"nodeType": "YulIf",
																				"src": "6236:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:8"
																							},
																							"nativeSrc": "6339:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:8"
																					},
																					"nativeSrc": "6326:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:8"
																				},
																				"nativeSrc": "6326:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:8"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:8",
																	"nodeType": "YulCase",
																	"src": "6187:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:8"
																},
																"nativeSrc": "5537:14:8",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:8"
															},
															"nativeSrc": "5530:887:8",
															"nodeType": "YulSwitch",
															"src": "5530:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:8",
														"nodeType": "YulTypedName",
														"src": "5109:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:8",
														"nodeType": "YulTypedName",
														"src": "5115:3:8",
														"type": ""
													}
												],
												"src": "5028:1395:8"
											},
											{
												"body": {
													"nativeSrc": "6494:53:8",
													"nodeType": "YulBlock",
													"src": "6494:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:8"
																		},
																		"nativeSrc": "6516:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:8"
																},
																"nativeSrc": "6504:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:8"
															},
															"nativeSrc": "6504:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:8",
														"nodeType": "YulTypedName",
														"src": "6482:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:8",
														"nodeType": "YulTypedName",
														"src": "6489:3:8",
														"type": ""
													}
												],
												"src": "6429:118:8"
											},
											{
												"body": {
													"nativeSrc": "6651:124:8",
													"nodeType": "YulBlock",
													"src": "6651:124:8",
													"statements": [
														{
															"nativeSrc": "6661:26:8",
															"nodeType": "YulAssignment",
															"src": "6661:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:8"
																},
																"nativeSrc": "6669:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:8"
																		},
																		"nativeSrc": "6750:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:8"
																},
																"nativeSrc": "6697:71:8",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:8"
															},
															"nativeSrc": "6697:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:8",
														"nodeType": "YulTypedName",
														"src": "6623:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:8",
														"nodeType": "YulTypedName",
														"src": "6635:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:8",
														"nodeType": "YulTypedName",
														"src": "6646:4:8",
														"type": ""
													}
												],
												"src": "6553:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516118c33803806118c383398181016040528101906100319190610267565b806040518060400160405280600c81526020017f4d696e65727661546f6b656e00000000000000000000000000000000000000008152506040518060400160405280600481526020017f4d494e560000000000000000000000000000000000000000000000000000000081525081600390816100ad91906104cc565b5080600490816100bd91906104cc565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012791906105aa565b60405180910390fd5b61013f8161014660201b60201c565b50506105c3565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102368261020d565b9050919050565b6102468161022c565b8114610250575f80fd5b50565b5f815190506102618161023d565b92915050565b5f6020828403121561027c5761027b610209565b5b5f61028984828501610253565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061030d57607f821691505b6020821081036103205761031f6102c9565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610347565b61038c8683610347565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6103d06103cb6103c6846103a4565b6103ad565b6103a4565b9050919050565b5f819050919050565b6103e9836103b6565b6103fd6103f5826103d7565b848454610353565b825550505050565b5f90565b610411610405565b61041c8184846103e0565b505050565b5b8181101561043f576104345f82610409565b600181019050610422565b5050565b601f8211156104845761045581610326565b61045e84610338565b8101602085101561046d578190505b61048161047985610338565b830182610421565b50505b505050565b5f82821c905092915050565b5f6104a45f1984600802610489565b1980831691505092915050565b5f6104bc8383610495565b9150826002028217905092915050565b6104d582610292565b67ffffffffffffffff8111156104ee576104ed61029c565b5b6104f882546102f6565b610503828285610443565b5f60209050601f831160018114610534575f8415610522578287015190505b61052c85826104b1565b865550610593565b601f19841661054286610326565b5f5b8281101561056957848901518255600182019150602085019450602081019050610544565b868310156105865784890151610582601f891682610495565b8355505b6001600288020188555050505b505050505050565b6105a48161022c565b82525050565b5f6020820190506105bd5f83018461059b565b92915050565b6112f3806105d05f395ff3fe608060405234801561000f575f80fd5b50600436106100cd575f3560e01c806370a082311161008a57806395d89b411161006457806395d89b41146101ff578063a9059cbb1461021d578063dd62ed3e1461024d578063f2fde38b1461027d576100cd565b806370a08231146101a7578063715018a6146101d75780638da5cb5b146101e1576100cd565b806306fdde03146100d1578063095ea7b3146100ef57806318160ddd1461011f57806323b872dd1461013d578063313ce5671461016d57806340c10f191461018b575b5f80fd5b6100d9610299565b6040516100e69190610db2565b60405180910390f35b61010960048036038101906101049190610e63565b610329565b6040516101169190610ebb565b60405180910390f35b61012761034b565b6040516101349190610ee3565b60405180910390f35b61015760048036038101906101529190610efc565b610354565b6040516101649190610ebb565b60405180910390f35b610175610382565b6040516101829190610f67565b60405180910390f35b6101a560048036038101906101a09190610e63565b61038a565b005b6101c160048036038101906101bc9190610f80565b6103be565b6040516101ce9190610ee3565b60405180910390f35b6101df610403565b005b6101e9610416565b6040516101f69190610fba565b60405180910390f35b61020761043e565b6040516102149190610db2565b60405180910390f35b61023760048036038101906102329190610e63565b6104ce565b6040516102449190610ebb565b60405180910390f35b61026760048036038101906102629190610fd3565b6104f0565b6040516102749190610ee3565b60405180910390f35b61029760048036038101906102929190610f80565b610572565b005b6060600380546102a89061103e565b80601f01602080910402602001604051908101604052809291908181526020018280546102d49061103e565b801561031f5780601f106102f65761010080835404028352916020019161031f565b820191905f5260205f20905b81548152906001019060200180831161030257829003601f168201915b5050505050905090565b5f806103336105f6565b90506103408185856105fd565b600191505092915050565b5f600254905090565b5f8061035e6105f6565b905061036b85828561060f565b6103768585856106a1565b60019150509392505050565b5f6012905090565b610392610791565b6103ba8261039e610382565b600a6103aa91906111ca565b836103b59190611214565b610818565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61040b610791565b6104145f610897565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461044d9061103e565b80601f01602080910402602001604051908101604052809291908181526020018280546104799061103e565b80156104c45780601f1061049b576101008083540402835291602001916104c4565b820191905f5260205f20905b8154815290600101906020018083116104a757829003601f168201915b5050505050905090565b5f806104d86105f6565b90506104e58185856106a1565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61057a610791565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105ea575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105e19190610fba565b60405180910390fd5b6105f381610897565b50565b5f33905090565b61060a838383600161095a565b505050565b5f61061a84846104f0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461069b578181101561068c578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161068393929190611255565b60405180910390fd5b61069a84848484035f61095a565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610711575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107089190610fba565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610781575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107789190610fba565b60405180910390fd5b61078c838383610b29565b505050565b6107996105f6565b73ffffffffffffffffffffffffffffffffffffffff166107b7610416565b73ffffffffffffffffffffffffffffffffffffffff1614610816576107da6105f6565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161080d9190610fba565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610888575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161087f9190610fba565b60405180910390fd5b6108935f8383610b29565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109ca575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109c19190610fba565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a3a575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a319190610fba565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610b23578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b1a9190610ee3565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b79578060025f828254610b6d919061128a565b92505081905550610c47565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610c02578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610bf993929190611255565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c8e578060025f8282540392505081905550610cd8565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d359190610ee3565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610d8482610d42565b610d8e8185610d4c565b9350610d9e818560208601610d5c565b610da781610d6a565b840191505092915050565b5f6020820190508181035f830152610dca8184610d7a565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610dff82610dd6565b9050919050565b610e0f81610df5565b8114610e19575f80fd5b50565b5f81359050610e2a81610e06565b92915050565b5f819050919050565b610e4281610e30565b8114610e4c575f80fd5b50565b5f81359050610e5d81610e39565b92915050565b5f8060408385031215610e7957610e78610dd2565b5b5f610e8685828601610e1c565b9250506020610e9785828601610e4f565b9150509250929050565b5f8115159050919050565b610eb581610ea1565b82525050565b5f602082019050610ece5f830184610eac565b92915050565b610edd81610e30565b82525050565b5f602082019050610ef65f830184610ed4565b92915050565b5f805f60608486031215610f1357610f12610dd2565b5b5f610f2086828701610e1c565b9350506020610f3186828701610e1c565b9250506040610f4286828701610e4f565b9150509250925092565b5f60ff82169050919050565b610f6181610f4c565b82525050565b5f602082019050610f7a5f830184610f58565b92915050565b5f60208284031215610f9557610f94610dd2565b5b5f610fa284828501610e1c565b91505092915050565b610fb481610df5565b82525050565b5f602082019050610fcd5f830184610fab565b92915050565b5f8060408385031215610fe957610fe8610dd2565b5b5f610ff685828601610e1c565b925050602061100785828601610e1c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061105557607f821691505b60208210810361106857611067611011565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156110f0578086048111156110cc576110cb61106e565b5b60018516156110db5780820291505b80810290506110e98561109b565b94506110b0565b94509492505050565b5f8261110857600190506111c3565b81611115575f90506111c3565b816001811461112b576002811461113557611164565b60019150506111c3565b60ff8411156111475761114661106e565b5b8360020a91508482111561115e5761115d61106e565b5b506111c3565b5060208310610133831016604e8410600b84101617156111995782820a9050838111156111945761119361106e565b5b6111c3565b6111a684848460016110a7565b925090508184048111156111bd576111bc61106e565b5b81810290505b9392505050565b5f6111d482610e30565b91506111df83610f4c565b925061120c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846110f9565b905092915050565b5f61121e82610e30565b915061122983610e30565b925082820261123781610e30565b9150828204841483151761124e5761124d61106e565b5b5092915050565b5f6060820190506112685f830186610fab565b6112756020830185610ed4565b6112826040830184610ed4565b949350505050565b5f61129482610e30565b915061129f83610e30565b92508282019050808211156112b7576112b661106e565b5b9291505056fea2646970667358221220df0e6dfcd235895f2313aafe1b0bbd93a8e799e41506c89f32586c62448ca05e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x18C3 CODESIZE SUB DUP1 PUSH2 0x18C3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x267 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D696E65727661546F6B656E0000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D494E5600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x4CC JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x4CC JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x146 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x5C3 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x236 DUP3 PUSH2 0x20D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x246 DUP2 PUSH2 0x22C JUMP JUMPDEST DUP2 EQ PUSH2 0x250 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x261 DUP2 PUSH2 0x23D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27B PUSH2 0x209 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x289 DUP5 DUP3 DUP6 ADD PUSH2 0x253 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x30D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x320 JUMPI PUSH2 0x31F PUSH2 0x2C9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x382 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x347 JUMP JUMPDEST PUSH2 0x38C DUP7 DUP4 PUSH2 0x347 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3D0 PUSH2 0x3CB PUSH2 0x3C6 DUP5 PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0x3AD JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E9 DUP4 PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x3F5 DUP3 PUSH2 0x3D7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x353 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x411 PUSH2 0x405 JUMP JUMPDEST PUSH2 0x41C DUP2 DUP5 DUP5 PUSH2 0x3E0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x43F JUMPI PUSH2 0x434 PUSH0 DUP3 PUSH2 0x409 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x422 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x484 JUMPI PUSH2 0x455 DUP2 PUSH2 0x326 JUMP JUMPDEST PUSH2 0x45E DUP5 PUSH2 0x338 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x46D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x481 PUSH2 0x479 DUP6 PUSH2 0x338 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x421 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4A4 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x489 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4BC DUP4 DUP4 PUSH2 0x495 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4D5 DUP3 PUSH2 0x292 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4EE JUMPI PUSH2 0x4ED PUSH2 0x29C JUMP JUMPDEST JUMPDEST PUSH2 0x4F8 DUP3 SLOAD PUSH2 0x2F6 JUMP JUMPDEST PUSH2 0x503 DUP3 DUP3 DUP6 PUSH2 0x443 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x534 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x522 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x52C DUP6 DUP3 PUSH2 0x4B1 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x593 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x542 DUP7 PUSH2 0x326 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x569 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x544 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x586 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x582 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x495 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5A4 DUP2 PUSH2 0x22C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5BD PUSH0 DUP4 ADD DUP5 PUSH2 0x59B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12F3 DUP1 PUSH2 0x5D0 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27D JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E1 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xDB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x329 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xEFC JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xF80 JUMP JUMPDEST PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH2 0x403 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E9 PUSH2 0x416 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH2 0x43E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0xDB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x292 SWAP2 SWAP1 PUSH2 0xF80 JUMP JUMPDEST PUSH2 0x572 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2A8 SWAP1 PUSH2 0x103E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D4 SWAP1 PUSH2 0x103E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x31F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x31F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x302 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x333 PUSH2 0x5F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x340 DUP2 DUP6 DUP6 PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x35E PUSH2 0x5F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x36B DUP6 DUP3 DUP6 PUSH2 0x60F JUMP JUMPDEST PUSH2 0x376 DUP6 DUP6 DUP6 PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x392 PUSH2 0x791 JUMP JUMPDEST PUSH2 0x3BA DUP3 PUSH2 0x39E PUSH2 0x382 JUMP JUMPDEST PUSH1 0xA PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x11CA JUMP JUMPDEST DUP4 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1214 JUMP JUMPDEST PUSH2 0x818 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40B PUSH2 0x791 JUMP JUMPDEST PUSH2 0x414 PUSH0 PUSH2 0x897 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x44D SWAP1 PUSH2 0x103E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x479 SWAP1 PUSH2 0x103E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x49B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4D8 PUSH2 0x5F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x4E5 DUP2 DUP6 DUP6 PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x57A PUSH2 0x791 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5EA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E1 SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5F3 DUP2 PUSH2 0x897 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x60A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x95A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x61A DUP5 DUP5 PUSH2 0x4F0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x69B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x68C JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1255 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x69A DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x95A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x711 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x708 SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x781 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x778 SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78C DUP4 DUP4 DUP4 PUSH2 0xB29 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x799 PUSH2 0x5F6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7B7 PUSH2 0x416 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x816 JUMPI PUSH2 0x7DA PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80D SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x888 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87F SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x893 PUSH0 DUP4 DUP4 PUSH2 0xB29 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9CA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C1 SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA3A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA31 SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB23 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB1A SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB79 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB6D SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC47 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC02 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1255 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC8E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCD8 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD35 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD84 DUP3 PUSH2 0xD42 JUMP JUMPDEST PUSH2 0xD8E DUP2 DUP6 PUSH2 0xD4C JUMP JUMPDEST SWAP4 POP PUSH2 0xD9E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD5C JUMP JUMPDEST PUSH2 0xDA7 DUP2 PUSH2 0xD6A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDCA DUP2 DUP5 PUSH2 0xD7A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDFF DUP3 PUSH2 0xDD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE0F DUP2 PUSH2 0xDF5 JUMP JUMPDEST DUP2 EQ PUSH2 0xE19 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE2A DUP2 PUSH2 0xE06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE42 DUP2 PUSH2 0xE30 JUMP JUMPDEST DUP2 EQ PUSH2 0xE4C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE5D DUP2 PUSH2 0xE39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE79 JUMPI PUSH2 0xE78 PUSH2 0xDD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE86 DUP6 DUP3 DUP7 ADD PUSH2 0xE1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE97 DUP6 DUP3 DUP7 ADD PUSH2 0xE4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB5 DUP2 PUSH2 0xEA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xECE PUSH0 DUP4 ADD DUP5 PUSH2 0xEAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEDD DUP2 PUSH2 0xE30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEF6 PUSH0 DUP4 ADD DUP5 PUSH2 0xED4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF13 JUMPI PUSH2 0xF12 PUSH2 0xDD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF20 DUP7 DUP3 DUP8 ADD PUSH2 0xE1C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF31 DUP7 DUP3 DUP8 ADD PUSH2 0xE1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF42 DUP7 DUP3 DUP8 ADD PUSH2 0xE4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF61 DUP2 PUSH2 0xF4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF7A PUSH0 DUP4 ADD DUP5 PUSH2 0xF58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF95 JUMPI PUSH2 0xF94 PUSH2 0xDD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFA2 DUP5 DUP3 DUP6 ADD PUSH2 0xE1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFB4 DUP2 PUSH2 0xDF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFCD PUSH0 DUP4 ADD DUP5 PUSH2 0xFAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFE9 JUMPI PUSH2 0xFE8 PUSH2 0xDD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFF6 DUP6 DUP3 DUP7 ADD PUSH2 0xE1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1007 DUP6 DUP3 DUP7 ADD PUSH2 0xE1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1055 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1068 JUMPI PUSH2 0x1067 PUSH2 0x1011 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x10F0 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x10CC JUMPI PUSH2 0x10CB PUSH2 0x106E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x10DB JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x10E9 DUP6 PUSH2 0x109B JUMP JUMPDEST SWAP5 POP PUSH2 0x10B0 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1108 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x11C3 JUMP JUMPDEST DUP2 PUSH2 0x1115 JUMPI PUSH0 SWAP1 POP PUSH2 0x11C3 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x112B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1135 JUMPI PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1147 JUMPI PUSH2 0x1146 PUSH2 0x106E JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x115E JUMPI PUSH2 0x115D PUSH2 0x106E JUMP JUMPDEST JUMPDEST POP PUSH2 0x11C3 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1199 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1194 JUMPI PUSH2 0x1193 PUSH2 0x106E JUMP JUMPDEST JUMPDEST PUSH2 0x11C3 JUMP JUMPDEST PUSH2 0x11A6 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x10A7 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x11BD JUMPI PUSH2 0x11BC PUSH2 0x106E JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11D4 DUP3 PUSH2 0xE30 JUMP JUMPDEST SWAP2 POP PUSH2 0x11DF DUP4 PUSH2 0xF4C JUMP JUMPDEST SWAP3 POP PUSH2 0x120C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x10F9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x121E DUP3 PUSH2 0xE30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1229 DUP4 PUSH2 0xE30 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1237 DUP2 PUSH2 0xE30 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x124E JUMPI PUSH2 0x124D PUSH2 0x106E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1268 PUSH0 DUP4 ADD DUP7 PUSH2 0xFAB JUMP JUMPDEST PUSH2 0x1275 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xED4 JUMP JUMPDEST PUSH2 0x1282 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xED4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1294 DUP3 PUSH2 0xE30 JUMP JUMPDEST SWAP2 POP PUSH2 0x129F DUP4 PUSH2 0xE30 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x12B7 JUMPI PUSH2 0x12B6 PUSH2 0x106E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xE PUSH14 0xFCD235895F2313AAFE1B0BBD93A8 0xE7 SWAP10 0xE4 ISZERO MOD 0xC8 SWAP16 ORIGIN PC PUSH13 0x62448CA05E64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "224:282:7:-:0;;;271:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;361:12;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;271:111:7;224:282;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;224:282:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 1533,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 2394,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1937,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 2072,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 1526,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 1551,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2199,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 1697,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 2857,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 1264,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 809,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 958,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 898,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1382": {
									"entryPoint": 906,
									"id": 1382,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 665,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1046,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1027,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1086,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 843,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 852,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1394,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1230,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4693,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 4263,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 4554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 4345,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3420,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4206,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4113,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3538,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 4251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 3590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9997:8",
										"nodeType": "YulBlock",
										"src": "0:9997:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:77:8",
													"nodeType": "YulBlock",
													"src": "349:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:8"
																},
																"nativeSrc": "360:23:8",
																"nodeType": "YulFunctionCall",
																"src": "360:23:8"
															},
															"nativeSrc": "360:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:8"
																		},
																		"nativeSrc": "399:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:8",
																		"nodeType": "YulLiteral",
																		"src": "417:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:8"
																},
																"nativeSrc": "392:27:8",
																"nodeType": "YulFunctionCall",
																"src": "392:27:8"
															},
															"nativeSrc": "392:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:139:8"
											},
											{
												"body": {
													"nativeSrc": "480:54:8",
													"nodeType": "YulBlock",
													"src": "480:54:8",
													"statements": [
														{
															"nativeSrc": "490:38:8",
															"nodeType": "YulAssignment",
															"src": "490:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:8",
																				"nodeType": "YulLiteral",
																				"src": "515:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:8"
																		},
																		"nativeSrc": "504:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:8",
																				"nodeType": "YulLiteral",
																				"src": "524:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:8"
																		},
																		"nativeSrc": "520:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:8"
																},
																"nativeSrc": "500:28:8",
																"nodeType": "YulFunctionCall",
																"src": "500:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:8",
														"nodeType": "YulTypedName",
														"src": "463:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:8",
														"nodeType": "YulTypedName",
														"src": "473:6:8",
														"type": ""
													}
												],
												"src": "432:102:8"
											},
											{
												"body": {
													"nativeSrc": "632:285:8",
													"nodeType": "YulBlock",
													"src": "632:285:8",
													"statements": [
														{
															"nativeSrc": "642:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:8"
																},
																"nativeSrc": "656:39:8",
																"nodeType": "YulFunctionCall",
																"src": "656:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:8",
																	"nodeType": "YulTypedName",
																	"src": "646:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:8",
															"nodeType": "YulAssignment",
															"src": "704:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:8"
																},
																"nativeSrc": "711:71:8",
																"nodeType": "YulFunctionCall",
																"src": "711:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:8",
																				"nodeType": "YulLiteral",
																				"src": "837:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:8"
																		},
																		"nativeSrc": "826:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:8"
																},
																"nativeSrc": "791:65:8",
																"nodeType": "YulFunctionCall",
																"src": "791:65:8"
															},
															"nativeSrc": "791:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:8"
														},
														{
															"nativeSrc": "865:46:8",
															"nodeType": "YulAssignment",
															"src": "865:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:8"
																		},
																		"nativeSrc": "881:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:8"
																},
																"nativeSrc": "872:39:8",
																"nodeType": "YulFunctionCall",
																"src": "872:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:8",
														"nodeType": "YulTypedName",
														"src": "613:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:8",
														"nodeType": "YulTypedName",
														"src": "620:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:8",
														"nodeType": "YulTypedName",
														"src": "628:3:8",
														"type": ""
													}
												],
												"src": "540:377:8"
											},
											{
												"body": {
													"nativeSrc": "1041:195:8",
													"nodeType": "YulBlock",
													"src": "1041:195:8",
													"statements": [
														{
															"nativeSrc": "1051:26:8",
															"nodeType": "YulAssignment",
															"src": "1051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:8"
																},
																"nativeSrc": "1059:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:8"
																		},
																		"nativeSrc": "1094:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:8"
																		},
																		"nativeSrc": "1113:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:8"
																},
																"nativeSrc": "1087:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:8"
															},
															"nativeSrc": "1087:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:8"
														},
														{
															"nativeSrc": "1143:86:8",
															"nodeType": "YulAssignment",
															"src": "1143:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:8"
																},
																"nativeSrc": "1151:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:8",
														"nodeType": "YulTypedName",
														"src": "1013:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:8",
														"nodeType": "YulTypedName",
														"src": "1025:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:8",
														"nodeType": "YulTypedName",
														"src": "1036:4:8",
														"type": ""
													}
												],
												"src": "923:313:8"
											},
											{
												"body": {
													"nativeSrc": "1282:35:8",
													"nodeType": "YulBlock",
													"src": "1282:35:8",
													"statements": [
														{
															"nativeSrc": "1292:19:8",
															"nodeType": "YulAssignment",
															"src": "1292:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:8"
																},
																"nativeSrc": "1302:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:8",
														"nodeType": "YulTypedName",
														"src": "1275:6:8",
														"type": ""
													}
												],
												"src": "1242:75:8"
											},
											{
												"body": {
													"nativeSrc": "1412:28:8",
													"nodeType": "YulBlock",
													"src": "1412:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:8"
																},
																"nativeSrc": "1422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:8"
															},
															"nativeSrc": "1422:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:8"
											},
											{
												"body": {
													"nativeSrc": "1535:28:8",
													"nodeType": "YulBlock",
													"src": "1535:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:8"
																},
																"nativeSrc": "1545:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:8"
															},
															"nativeSrc": "1545:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:8"
											},
											{
												"body": {
													"nativeSrc": "1614:81:8",
													"nodeType": "YulBlock",
													"src": "1614:81:8",
													"statements": [
														{
															"nativeSrc": "1624:65:8",
															"nodeType": "YulAssignment",
															"src": "1624:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:8"
																},
																"nativeSrc": "1635:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:8",
														"nodeType": "YulTypedName",
														"src": "1596:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:8",
														"nodeType": "YulTypedName",
														"src": "1606:7:8",
														"type": ""
													}
												],
												"src": "1569:126:8"
											},
											{
												"body": {
													"nativeSrc": "1746:51:8",
													"nodeType": "YulBlock",
													"src": "1746:51:8",
													"statements": [
														{
															"nativeSrc": "1756:35:8",
															"nodeType": "YulAssignment",
															"src": "1756:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:8"
																},
																"nativeSrc": "1767:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:8",
														"nodeType": "YulTypedName",
														"src": "1728:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:8",
														"nodeType": "YulTypedName",
														"src": "1738:7:8",
														"type": ""
													}
												],
												"src": "1701:96:8"
											},
											{
												"body": {
													"nativeSrc": "1846:79:8",
													"nodeType": "YulBlock",
													"src": "1846:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:8",
																"nodeType": "YulBlock",
																"src": "1903:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:8"
																			},
																			"nativeSrc": "1905:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:8"
																		},
																		"nativeSrc": "1905:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:8"
																				},
																				"nativeSrc": "1876:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:8"
																		},
																		"nativeSrc": "1866:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:8"
																},
																"nativeSrc": "1859:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:8"
															},
															"nativeSrc": "1856:63:8",
															"nodeType": "YulIf",
															"src": "1856:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:8",
														"nodeType": "YulTypedName",
														"src": "1839:5:8",
														"type": ""
													}
												],
												"src": "1803:122:8"
											},
											{
												"body": {
													"nativeSrc": "1983:87:8",
													"nodeType": "YulBlock",
													"src": "1983:87:8",
													"statements": [
														{
															"nativeSrc": "1993:29:8",
															"nodeType": "YulAssignment",
															"src": "1993:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:8"
																},
																"nativeSrc": "2002:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:8"
																},
																"nativeSrc": "2031:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:8"
															},
															"nativeSrc": "2031:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:8",
														"nodeType": "YulTypedName",
														"src": "1961:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:8",
														"nodeType": "YulTypedName",
														"src": "1969:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:8",
														"nodeType": "YulTypedName",
														"src": "1977:5:8",
														"type": ""
													}
												],
												"src": "1931:139:8"
											},
											{
												"body": {
													"nativeSrc": "2121:32:8",
													"nodeType": "YulBlock",
													"src": "2121:32:8",
													"statements": [
														{
															"nativeSrc": "2131:16:8",
															"nodeType": "YulAssignment",
															"src": "2131:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:8",
																"nodeType": "YulIdentifier",
																"src": "2142:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:8",
														"nodeType": "YulTypedName",
														"src": "2103:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:8",
														"nodeType": "YulTypedName",
														"src": "2113:7:8",
														"type": ""
													}
												],
												"src": "2076:77:8"
											},
											{
												"body": {
													"nativeSrc": "2202:79:8",
													"nodeType": "YulBlock",
													"src": "2202:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:8",
																"nodeType": "YulBlock",
																"src": "2259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:8"
																			},
																			"nativeSrc": "2261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:8"
																		},
																		"nativeSrc": "2261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:8"
																				},
																				"nativeSrc": "2232:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:8"
																		},
																		"nativeSrc": "2222:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:8"
																},
																"nativeSrc": "2215:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:8"
															},
															"nativeSrc": "2212:63:8",
															"nodeType": "YulIf",
															"src": "2212:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:8",
														"nodeType": "YulTypedName",
														"src": "2195:5:8",
														"type": ""
													}
												],
												"src": "2159:122:8"
											},
											{
												"body": {
													"nativeSrc": "2339:87:8",
													"nodeType": "YulBlock",
													"src": "2339:87:8",
													"statements": [
														{
															"nativeSrc": "2349:29:8",
															"nodeType": "YulAssignment",
															"src": "2349:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:8"
																},
																"nativeSrc": "2358:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:8"
																},
																"nativeSrc": "2387:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:8"
															},
															"nativeSrc": "2387:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:8",
														"nodeType": "YulTypedName",
														"src": "2317:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:8",
														"nodeType": "YulTypedName",
														"src": "2325:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:8",
														"nodeType": "YulTypedName",
														"src": "2333:5:8",
														"type": ""
													}
												],
												"src": "2287:139:8"
											},
											{
												"body": {
													"nativeSrc": "2515:391:8",
													"nodeType": "YulBlock",
													"src": "2515:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:8",
																"nodeType": "YulBlock",
																"src": "2561:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:8"
																			},
																			"nativeSrc": "2563:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:8"
																		},
																		"nativeSrc": "2563:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:8"
																		},
																		"nativeSrc": "2532:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:8"
																},
																"nativeSrc": "2528:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:8"
															},
															"nativeSrc": "2525:119:8",
															"nodeType": "YulIf",
															"src": "2525:119:8"
														},
														{
															"nativeSrc": "2654:117:8",
															"nodeType": "YulBlock",
															"src": "2654:117:8",
															"statements": [
																{
																	"nativeSrc": "2669:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:8"
																				},
																				"nativeSrc": "2729:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:8"
																		},
																		"nativeSrc": "2708:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:8",
															"nodeType": "YulBlock",
															"src": "2781:118:8",
															"statements": [
																{
																	"nativeSrc": "2796:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:8"
																				},
																				"nativeSrc": "2857:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:8"
																		},
																		"nativeSrc": "2836:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:8",
														"nodeType": "YulTypedName",
														"src": "2477:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:8",
														"nodeType": "YulTypedName",
														"src": "2488:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:8",
														"nodeType": "YulTypedName",
														"src": "2500:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:8",
														"nodeType": "YulTypedName",
														"src": "2508:6:8",
														"type": ""
													}
												],
												"src": "2432:474:8"
											},
											{
												"body": {
													"nativeSrc": "2954:48:8",
													"nodeType": "YulBlock",
													"src": "2954:48:8",
													"statements": [
														{
															"nativeSrc": "2964:32:8",
															"nodeType": "YulAssignment",
															"src": "2964:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:8"
																		},
																		"nativeSrc": "2982:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:8"
																},
																"nativeSrc": "2975:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:8",
														"nodeType": "YulTypedName",
														"src": "2936:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:8",
														"nodeType": "YulTypedName",
														"src": "2946:7:8",
														"type": ""
													}
												],
												"src": "2912:90:8"
											},
											{
												"body": {
													"nativeSrc": "3067:50:8",
													"nodeType": "YulBlock",
													"src": "3067:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:8"
																		},
																		"nativeSrc": "3089:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:8"
																},
																"nativeSrc": "3077:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:8"
															},
															"nativeSrc": "3077:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:8",
														"nodeType": "YulTypedName",
														"src": "3055:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:8",
														"nodeType": "YulTypedName",
														"src": "3062:3:8",
														"type": ""
													}
												],
												"src": "3008:109:8"
											},
											{
												"body": {
													"nativeSrc": "3215:118:8",
													"nodeType": "YulBlock",
													"src": "3215:118:8",
													"statements": [
														{
															"nativeSrc": "3225:26:8",
															"nodeType": "YulAssignment",
															"src": "3225:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:8"
																},
																"nativeSrc": "3233:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:8"
																		},
																		"nativeSrc": "3308:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:8"
																},
																"nativeSrc": "3261:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:8"
															},
															"nativeSrc": "3261:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:8",
														"nodeType": "YulTypedName",
														"src": "3187:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:8",
														"nodeType": "YulTypedName",
														"src": "3199:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:8",
														"nodeType": "YulTypedName",
														"src": "3210:4:8",
														"type": ""
													}
												],
												"src": "3123:210:8"
											},
											{
												"body": {
													"nativeSrc": "3404:53:8",
													"nodeType": "YulBlock",
													"src": "3404:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:8"
																		},
																		"nativeSrc": "3426:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:8"
																},
																"nativeSrc": "3414:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:8"
															},
															"nativeSrc": "3414:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:8",
														"nodeType": "YulTypedName",
														"src": "3392:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:8",
														"nodeType": "YulTypedName",
														"src": "3399:3:8",
														"type": ""
													}
												],
												"src": "3339:118:8"
											},
											{
												"body": {
													"nativeSrc": "3561:124:8",
													"nodeType": "YulBlock",
													"src": "3561:124:8",
													"statements": [
														{
															"nativeSrc": "3571:26:8",
															"nodeType": "YulAssignment",
															"src": "3571:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:8"
																},
																"nativeSrc": "3579:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:8"
																		},
																		"nativeSrc": "3660:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:8"
																},
																"nativeSrc": "3607:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:8"
															},
															"nativeSrc": "3607:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:8",
														"nodeType": "YulTypedName",
														"src": "3533:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:8",
														"nodeType": "YulTypedName",
														"src": "3545:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:8",
														"nodeType": "YulTypedName",
														"src": "3556:4:8",
														"type": ""
													}
												],
												"src": "3463:222:8"
											},
											{
												"body": {
													"nativeSrc": "3791:519:8",
													"nodeType": "YulBlock",
													"src": "3791:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:8",
																"nodeType": "YulBlock",
																"src": "3837:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:8"
																			},
																			"nativeSrc": "3839:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:8"
																		},
																		"nativeSrc": "3839:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:8"
																		},
																		"nativeSrc": "3808:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:8"
																},
																"nativeSrc": "3804:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:8"
															},
															"nativeSrc": "3801:119:8",
															"nodeType": "YulIf",
															"src": "3801:119:8"
														},
														{
															"nativeSrc": "3930:117:8",
															"nodeType": "YulBlock",
															"src": "3930:117:8",
															"statements": [
																{
																	"nativeSrc": "3945:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:8"
																				},
																				"nativeSrc": "4005:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:8"
																		},
																		"nativeSrc": "3984:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:8",
															"nodeType": "YulBlock",
															"src": "4057:118:8",
															"statements": [
																{
																	"nativeSrc": "4072:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:8"
																				},
																				"nativeSrc": "4133:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:8"
																		},
																		"nativeSrc": "4112:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:8",
															"nodeType": "YulBlock",
															"src": "4185:118:8",
															"statements": [
																{
																	"nativeSrc": "4200:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:8"
																				},
																				"nativeSrc": "4261:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:8"
																		},
																		"nativeSrc": "4240:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:8",
														"nodeType": "YulTypedName",
														"src": "3745:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:8",
														"nodeType": "YulTypedName",
														"src": "3756:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:8",
														"nodeType": "YulTypedName",
														"src": "3768:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:8",
														"nodeType": "YulTypedName",
														"src": "3776:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:8",
														"nodeType": "YulTypedName",
														"src": "3784:6:8",
														"type": ""
													}
												],
												"src": "3691:619:8"
											},
											{
												"body": {
													"nativeSrc": "4359:43:8",
													"nodeType": "YulBlock",
													"src": "4359:43:8",
													"statements": [
														{
															"nativeSrc": "4369:27:8",
															"nodeType": "YulAssignment",
															"src": "4369:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:8"
																},
																"nativeSrc": "4380:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:8",
														"nodeType": "YulTypedName",
														"src": "4341:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:8",
														"nodeType": "YulTypedName",
														"src": "4351:7:8",
														"type": ""
													}
												],
												"src": "4316:86:8"
											},
											{
												"body": {
													"nativeSrc": "4469:51:8",
													"nodeType": "YulBlock",
													"src": "4469:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:8"
																		},
																		"nativeSrc": "4491:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:8"
																},
																"nativeSrc": "4479:35:8",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:8"
															},
															"nativeSrc": "4479:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:8",
														"nodeType": "YulTypedName",
														"src": "4457:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:8",
														"nodeType": "YulTypedName",
														"src": "4464:3:8",
														"type": ""
													}
												],
												"src": "4408:112:8"
											},
											{
												"body": {
													"nativeSrc": "4620:120:8",
													"nodeType": "YulBlock",
													"src": "4620:120:8",
													"statements": [
														{
															"nativeSrc": "4630:26:8",
															"nodeType": "YulAssignment",
															"src": "4630:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:8"
																},
																"nativeSrc": "4638:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:8"
																		},
																		"nativeSrc": "4715:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:8"
																},
																"nativeSrc": "4666:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:8"
															},
															"nativeSrc": "4666:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:8",
														"nodeType": "YulTypedName",
														"src": "4592:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:8",
														"nodeType": "YulTypedName",
														"src": "4604:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:8",
														"nodeType": "YulTypedName",
														"src": "4615:4:8",
														"type": ""
													}
												],
												"src": "4526:214:8"
											},
											{
												"body": {
													"nativeSrc": "4812:263:8",
													"nodeType": "YulBlock",
													"src": "4812:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:8",
																"nodeType": "YulBlock",
																"src": "4858:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:8"
																			},
																			"nativeSrc": "4860:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:8"
																		},
																		"nativeSrc": "4860:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:8"
																		},
																		"nativeSrc": "4829:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:8"
																},
																"nativeSrc": "4825:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:8"
															},
															"nativeSrc": "4822:119:8",
															"nodeType": "YulIf",
															"src": "4822:119:8"
														},
														{
															"nativeSrc": "4951:117:8",
															"nodeType": "YulBlock",
															"src": "4951:117:8",
															"statements": [
																{
																	"nativeSrc": "4966:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:8"
																				},
																				"nativeSrc": "5026:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:8"
																		},
																		"nativeSrc": "5005:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:8",
														"nodeType": "YulTypedName",
														"src": "4782:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:8",
														"nodeType": "YulTypedName",
														"src": "4793:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:8",
														"nodeType": "YulTypedName",
														"src": "4805:6:8",
														"type": ""
													}
												],
												"src": "4746:329:8"
											},
											{
												"body": {
													"nativeSrc": "5146:53:8",
													"nodeType": "YulBlock",
													"src": "5146:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5163:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5163:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5186:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5186:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5168:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "5168:17:8"
																		},
																		"nativeSrc": "5168:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:8"
																},
																"nativeSrc": "5156:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5156:37:8"
															},
															"nativeSrc": "5156:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "5156:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5081:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:8",
														"nodeType": "YulTypedName",
														"src": "5134:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5141:3:8",
														"nodeType": "YulTypedName",
														"src": "5141:3:8",
														"type": ""
													}
												],
												"src": "5081:118:8"
											},
											{
												"body": {
													"nativeSrc": "5303:124:8",
													"nodeType": "YulBlock",
													"src": "5303:124:8",
													"statements": [
														{
															"nativeSrc": "5313:26:8",
															"nodeType": "YulAssignment",
															"src": "5313:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5325:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5336:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5321:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:8"
																},
																"nativeSrc": "5321:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5321:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5313:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:8"
																		},
																		"nativeSrc": "5402:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5349:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5349:43:8"
																},
																"nativeSrc": "5349:71:8",
																"nodeType": "YulFunctionCall",
																"src": "5349:71:8"
															},
															"nativeSrc": "5349:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "5349:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5205:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5275:9:8",
														"nodeType": "YulTypedName",
														"src": "5275:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5287:6:8",
														"nodeType": "YulTypedName",
														"src": "5287:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5298:4:8",
														"nodeType": "YulTypedName",
														"src": "5298:4:8",
														"type": ""
													}
												],
												"src": "5205:222:8"
											},
											{
												"body": {
													"nativeSrc": "5516:391:8",
													"nodeType": "YulBlock",
													"src": "5516:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5562:83:8",
																"nodeType": "YulBlock",
																"src": "5562:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5564:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5564:77:8"
																			},
																			"nativeSrc": "5564:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5564:79:8"
																		},
																		"nativeSrc": "5564:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5564:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5537:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5537:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5546:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5546:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5533:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:8"
																		},
																		"nativeSrc": "5533:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5558:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5558:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5529:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:8"
																},
																"nativeSrc": "5529:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5529:32:8"
															},
															"nativeSrc": "5526:119:8",
															"nodeType": "YulIf",
															"src": "5526:119:8"
														},
														{
															"nativeSrc": "5655:117:8",
															"nodeType": "YulBlock",
															"src": "5655:117:8",
															"statements": [
																{
																	"nativeSrc": "5670:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5670:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5684:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5684:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5674:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5674:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5699:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5699:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5734:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5734:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5745:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5745:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5730:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5730:3:8"
																				},
																				"nativeSrc": "5730:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5754:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5754:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5709:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5709:20:8"
																		},
																		"nativeSrc": "5709:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5699:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5699:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5782:118:8",
															"nodeType": "YulBlock",
															"src": "5782:118:8",
															"statements": [
																{
																	"nativeSrc": "5797:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5797:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5811:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5811:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5801:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5801:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5827:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5827:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5862:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5862:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5873:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5873:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5858:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5858:3:8"
																				},
																				"nativeSrc": "5858:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5858:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5882:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5882:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5837:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5837:20:8"
																		},
																		"nativeSrc": "5837:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5837:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5827:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5827:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5433:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5478:9:8",
														"nodeType": "YulTypedName",
														"src": "5478:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5489:7:8",
														"nodeType": "YulTypedName",
														"src": "5489:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5501:6:8",
														"nodeType": "YulTypedName",
														"src": "5501:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5509:6:8",
														"nodeType": "YulTypedName",
														"src": "5509:6:8",
														"type": ""
													}
												],
												"src": "5433:474:8"
											},
											{
												"body": {
													"nativeSrc": "5941:152:8",
													"nodeType": "YulBlock",
													"src": "5941:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5958:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5958:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5961:77:8",
																		"nodeType": "YulLiteral",
																		"src": "5961:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5951:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5951:6:8"
																},
																"nativeSrc": "5951:88:8",
																"nodeType": "YulFunctionCall",
																"src": "5951:88:8"
															},
															"nativeSrc": "5951:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "5951:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6055:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6055:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6058:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6058:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6048:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:8"
																},
																"nativeSrc": "6048:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6048:15:8"
															},
															"nativeSrc": "6048:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6048:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6079:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6079:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6082:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6082:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6072:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6072:6:8"
																},
																"nativeSrc": "6072:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6072:15:8"
															},
															"nativeSrc": "6072:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6072:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5913:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5913:180:8"
											},
											{
												"body": {
													"nativeSrc": "6150:269:8",
													"nodeType": "YulBlock",
													"src": "6150:269:8",
													"statements": [
														{
															"nativeSrc": "6160:22:8",
															"nodeType": "YulAssignment",
															"src": "6160:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6174:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6174:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6180:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6180:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6170:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:8"
																},
																"nativeSrc": "6170:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6170:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6160:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6160:6:8"
																}
															]
														},
														{
															"nativeSrc": "6191:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6191:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6221:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6221:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6227:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6227:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6217:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:8"
																},
																"nativeSrc": "6217:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6217:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6195:18:8",
																	"nodeType": "YulTypedName",
																	"src": "6195:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6268:51:8",
																"nodeType": "YulBlock",
																"src": "6268:51:8",
																"statements": [
																	{
																		"nativeSrc": "6282:27:8",
																		"nodeType": "YulAssignment",
																		"src": "6282:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6296:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6296:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6304:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6304:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6292:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6292:3:8"
																			},
																			"nativeSrc": "6292:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6292:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6282:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6282:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6248:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6248:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6241:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6241:6:8"
																},
																"nativeSrc": "6241:26:8",
																"nodeType": "YulFunctionCall",
																"src": "6241:26:8"
															},
															"nativeSrc": "6238:81:8",
															"nodeType": "YulIf",
															"src": "6238:81:8"
														},
														{
															"body": {
																"nativeSrc": "6371:42:8",
																"nodeType": "YulBlock",
																"src": "6371:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6385:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6385:16:8"
																			},
																			"nativeSrc": "6385:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6385:18:8"
																		},
																		"nativeSrc": "6385:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6385:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6335:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6335:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6358:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6358:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6366:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6366:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6355:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6355:2:8"
																		},
																		"nativeSrc": "6355:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6355:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6332:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6332:2:8"
																},
																"nativeSrc": "6332:38:8",
																"nodeType": "YulFunctionCall",
																"src": "6332:38:8"
															},
															"nativeSrc": "6329:84:8",
															"nodeType": "YulIf",
															"src": "6329:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6099:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6134:4:8",
														"nodeType": "YulTypedName",
														"src": "6134:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6143:6:8",
														"nodeType": "YulTypedName",
														"src": "6143:6:8",
														"type": ""
													}
												],
												"src": "6099:320:8"
											},
											{
												"body": {
													"nativeSrc": "6453:152:8",
													"nodeType": "YulBlock",
													"src": "6453:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6470:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6470:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6473:77:8",
																		"nodeType": "YulLiteral",
																		"src": "6473:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6463:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6463:6:8"
																},
																"nativeSrc": "6463:88:8",
																"nodeType": "YulFunctionCall",
																"src": "6463:88:8"
															},
															"nativeSrc": "6463:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "6463:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6567:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6567:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6570:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6570:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6560:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6560:6:8"
																},
																"nativeSrc": "6560:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6560:15:8"
															},
															"nativeSrc": "6560:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6560:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6591:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6591:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6594:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6594:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6584:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6584:6:8"
																},
																"nativeSrc": "6584:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6584:15:8"
															},
															"nativeSrc": "6584:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6584:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6425:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6425:180:8"
											},
											{
												"body": {
													"nativeSrc": "6662:51:8",
													"nodeType": "YulBlock",
													"src": "6662:51:8",
													"statements": [
														{
															"nativeSrc": "6672:34:8",
															"nodeType": "YulAssignment",
															"src": "6672:34:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6697:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6697:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6700:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6700:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6693:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6693:3:8"
																},
																"nativeSrc": "6693:13:8",
																"nodeType": "YulFunctionCall",
																"src": "6693:13:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6672:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "6672:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "6611:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6643:5:8",
														"nodeType": "YulTypedName",
														"src": "6643:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6653:8:8",
														"nodeType": "YulTypedName",
														"src": "6653:8:8",
														"type": ""
													}
												],
												"src": "6611:102:8"
											},
											{
												"body": {
													"nativeSrc": "6792:775:8",
													"nodeType": "YulBlock",
													"src": "6792:775:8",
													"statements": [
														{
															"nativeSrc": "6802:15:8",
															"nodeType": "YulAssignment",
															"src": "6802:15:8",
															"value": {
																"name": "_power",
																"nativeSrc": "6811:6:8",
																"nodeType": "YulIdentifier",
																"src": "6811:6:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6802:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "6802:5:8"
																}
															]
														},
														{
															"nativeSrc": "6826:14:8",
															"nodeType": "YulAssignment",
															"src": "6826:14:8",
															"value": {
																"name": "_base",
																"nativeSrc": "6835:5:8",
																"nodeType": "YulIdentifier",
																"src": "6835:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "6826:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6826:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6884:677:8",
																"nodeType": "YulBlock",
																"src": "6884:677:8",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "6972:22:8",
																			"nodeType": "YulBlock",
																			"src": "6972:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "6974:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "6974:16:8"
																						},
																						"nativeSrc": "6974:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "6974:18:8"
																					},
																					"nativeSrc": "6974:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "6974:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6950:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "6950:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "6960:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "6960:3:8"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "6965:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6965:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "6956:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6956:3:8"
																					},
																					"nativeSrc": "6956:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6956:14:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "6947:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "6947:2:8"
																			},
																			"nativeSrc": "6947:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6947:24:8"
																		},
																		"nativeSrc": "6944:50:8",
																		"nodeType": "YulIf",
																		"src": "6944:50:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "7039:419:8",
																			"nodeType": "YulBlock",
																			"src": "7039:419:8",
																			"statements": [
																				{
																					"nativeSrc": "7419:25:8",
																					"nodeType": "YulAssignment",
																					"src": "7419:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "7432:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "7432:5:8"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "7439:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "7439:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "7428:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "7428:3:8"
																						},
																						"nativeSrc": "7428:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "7428:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "7419:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "7419:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7014:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "7014:8:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7024:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7024:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7010:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7010:3:8"
																			},
																			"nativeSrc": "7010:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7010:16:8"
																		},
																		"nativeSrc": "7007:451:8",
																		"nodeType": "YulIf",
																		"src": "7007:451:8"
																	},
																	{
																		"nativeSrc": "7471:23:8",
																		"nodeType": "YulAssignment",
																		"src": "7471:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7483:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "7483:4:8"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "7489:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "7489:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "7479:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7479:3:8"
																			},
																			"nativeSrc": "7479:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7479:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "7471:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7471:4:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7507:44:8",
																		"nodeType": "YulAssignment",
																		"src": "7507:44:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7542:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "7542:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "7519:22:8",
																				"nodeType": "YulIdentifier",
																				"src": "7519:22:8"
																			},
																			"nativeSrc": "7519:32:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7519:32:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "7507:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "7507:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6860:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "6860:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6870:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6870:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6857:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6857:2:8"
																},
																"nativeSrc": "6857:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6857:15:8"
															},
															"nativeSrc": "6849:712:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6873:2:8",
																"nodeType": "YulBlock",
																"src": "6873:2:8",
																"statements": []
															},
															"pre": {
																"nativeSrc": "6853:3:8",
																"nodeType": "YulBlock",
																"src": "6853:3:8",
																"statements": []
															},
															"src": "6849:712:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "6719:848:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "6747:6:8",
														"nodeType": "YulTypedName",
														"src": "6747:6:8",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "6755:5:8",
														"nodeType": "YulTypedName",
														"src": "6755:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6762:8:8",
														"nodeType": "YulTypedName",
														"src": "6762:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6772:3:8",
														"nodeType": "YulTypedName",
														"src": "6772:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6780:5:8",
														"nodeType": "YulTypedName",
														"src": "6780:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "6787:4:8",
														"nodeType": "YulTypedName",
														"src": "6787:4:8",
														"type": ""
													}
												],
												"src": "6719:848:8"
											},
											{
												"body": {
													"nativeSrc": "7633:1013:8",
													"nodeType": "YulBlock",
													"src": "7633:1013:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7828:20:8",
																"nodeType": "YulBlock",
																"src": "7828:20:8",
																"statements": [
																	{
																		"nativeSrc": "7830:10:8",
																		"nodeType": "YulAssignment",
																		"src": "7830:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7839:1:8",
																			"nodeType": "YulLiteral",
																			"src": "7839:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7830:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7830:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7841:5:8",
																		"nodeType": "YulLeave",
																		"src": "7841:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7818:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "7818:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7811:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7811:6:8"
																},
																"nativeSrc": "7811:16:8",
																"nodeType": "YulFunctionCall",
																"src": "7811:16:8"
															},
															"nativeSrc": "7808:40:8",
															"nodeType": "YulIf",
															"src": "7808:40:8"
														},
														{
															"body": {
																"nativeSrc": "7873:20:8",
																"nodeType": "YulBlock",
																"src": "7873:20:8",
																"statements": [
																	{
																		"nativeSrc": "7875:10:8",
																		"nodeType": "YulAssignment",
																		"src": "7875:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7884:1:8",
																			"nodeType": "YulLiteral",
																			"src": "7884:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7875:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7875:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7886:5:8",
																		"nodeType": "YulLeave",
																		"src": "7886:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7867:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7867:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7860:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7860:6:8"
																},
																"nativeSrc": "7860:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7860:12:8"
															},
															"nativeSrc": "7857:36:8",
															"nodeType": "YulIf",
															"src": "7857:36:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8003:20:8",
																		"nodeType": "YulBlock",
																		"src": "8003:20:8",
																		"statements": [
																			{
																				"nativeSrc": "8005:10:8",
																				"nodeType": "YulAssignment",
																				"src": "8005:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8014:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8014:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8005:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "8005:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8016:5:8",
																				"nodeType": "YulLeave",
																				"src": "8016:5:8"
																			}
																		]
																	},
																	"nativeSrc": "7996:27:8",
																	"nodeType": "YulCase",
																	"src": "7996:27:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8001:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8001:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8047:176:8",
																		"nodeType": "YulBlock",
																		"src": "8047:176:8",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8082:22:8",
																					"nodeType": "YulBlock",
																					"src": "8082:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8084:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "8084:16:8"
																								},
																								"nativeSrc": "8084:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8084:18:8"
																							},
																							"nativeSrc": "8084:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "8084:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8067:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "8067:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8077:3:8",
																							"nodeType": "YulLiteral",
																							"src": "8077:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8064:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "8064:2:8"
																					},
																					"nativeSrc": "8064:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8064:17:8"
																				},
																				"nativeSrc": "8061:43:8",
																				"nodeType": "YulIf",
																				"src": "8061:43:8"
																			},
																			{
																				"nativeSrc": "8117:25:8",
																				"nodeType": "YulAssignment",
																				"src": "8117:25:8",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8130:1:8",
																							"nodeType": "YulLiteral",
																							"src": "8130:1:8",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "8133:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "8133:8:8"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8126:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "8126:3:8"
																					},
																					"nativeSrc": "8126:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8126:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8117:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "8117:5:8"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8173:22:8",
																					"nodeType": "YulBlock",
																					"src": "8173:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8175:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "8175:16:8"
																								},
																								"nativeSrc": "8175:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8175:18:8"
																							},
																							"nativeSrc": "8175:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "8175:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "8161:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "8161:5:8"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "8168:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "8168:3:8"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8158:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "8158:2:8"
																					},
																					"nativeSrc": "8158:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8158:14:8"
																				},
																				"nativeSrc": "8155:40:8",
																				"nodeType": "YulIf",
																				"src": "8155:40:8"
																			},
																			{
																				"nativeSrc": "8208:5:8",
																				"nodeType": "YulLeave",
																				"src": "8208:5:8"
																			}
																		]
																	},
																	"nativeSrc": "8032:191:8",
																	"nodeType": "YulCase",
																	"src": "8032:191:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8037:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8037:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "7953:4:8",
																"nodeType": "YulIdentifier",
																"src": "7953:4:8"
															},
															"nativeSrc": "7946:277:8",
															"nodeType": "YulSwitch",
															"src": "7946:277:8"
														},
														{
															"body": {
																"nativeSrc": "8355:123:8",
																"nodeType": "YulBlock",
																"src": "8355:123:8",
																"statements": [
																	{
																		"nativeSrc": "8369:28:8",
																		"nodeType": "YulAssignment",
																		"src": "8369:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8382:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "8382:4:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8388:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "8388:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "8378:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8378:3:8"
																			},
																			"nativeSrc": "8378:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8378:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8369:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8369:5:8"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8428:22:8",
																			"nodeType": "YulBlock",
																			"src": "8428:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8430:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "8430:16:8"
																						},
																						"nativeSrc": "8430:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "8430:18:8"
																					},
																					"nativeSrc": "8430:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "8430:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "8416:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "8416:5:8"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "8423:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8423:3:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8413:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "8413:2:8"
																			},
																			"nativeSrc": "8413:14:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8413:14:8"
																		},
																		"nativeSrc": "8410:40:8",
																		"nodeType": "YulIf",
																		"src": "8410:40:8"
																	},
																	{
																		"nativeSrc": "8463:5:8",
																		"nodeType": "YulLeave",
																		"src": "8463:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8258:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "8258:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8264:2:8",
																						"nodeType": "YulLiteral",
																						"src": "8264:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8255:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "8255:2:8"
																				},
																				"nativeSrc": "8255:12:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8255:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8272:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "8272:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8282:2:8",
																						"nodeType": "YulLiteral",
																						"src": "8282:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8269:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "8269:2:8"
																				},
																				"nativeSrc": "8269:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8269:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8251:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8251:3:8"
																		},
																		"nativeSrc": "8251:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8251:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8307:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "8307:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8313:3:8",
																						"nodeType": "YulLiteral",
																						"src": "8313:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8304:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "8304:2:8"
																				},
																				"nativeSrc": "8304:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8304:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8322:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "8322:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8332:2:8",
																						"nodeType": "YulLiteral",
																						"src": "8332:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8319:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "8319:2:8"
																				},
																				"nativeSrc": "8319:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8319:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8300:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8300:3:8"
																		},
																		"nativeSrc": "8300:36:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8300:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8235:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8235:2:8"
																},
																"nativeSrc": "8235:111:8",
																"nodeType": "YulFunctionCall",
																"src": "8235:111:8"
															},
															"nativeSrc": "8232:246:8",
															"nodeType": "YulIf",
															"src": "8232:246:8"
														},
														{
															"nativeSrc": "8488:57:8",
															"nodeType": "YulAssignment",
															"src": "8488:57:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8522:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8522:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8525:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8525:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8531:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "8531:8:8"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "8541:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8541:3:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "8503:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "8503:18:8"
																},
																"nativeSrc": "8503:42:8",
																"nodeType": "YulFunctionCall",
																"src": "8503:42:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8488:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8488:5:8"
																},
																{
																	"name": "base",
																	"nativeSrc": "8495:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8495:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8584:22:8",
																"nodeType": "YulBlock",
																"src": "8584:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8586:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "8586:16:8"
																			},
																			"nativeSrc": "8586:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8586:18:8"
																		},
																		"nativeSrc": "8586:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8586:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8561:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8561:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "8572:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8572:3:8"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "8577:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8577:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "8568:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8568:3:8"
																		},
																		"nativeSrc": "8568:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8568:14:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8558:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8558:2:8"
																},
																"nativeSrc": "8558:25:8",
																"nodeType": "YulFunctionCall",
																"src": "8558:25:8"
															},
															"nativeSrc": "8555:51:8",
															"nodeType": "YulIf",
															"src": "8555:51:8"
														},
														{
															"nativeSrc": "8615:25:8",
															"nodeType": "YulAssignment",
															"src": "8615:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8628:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8628:5:8"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8635:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8635:4:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8624:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8624:3:8"
																},
																"nativeSrc": "8624:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8624:16:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8615:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8615:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "7573:1073:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7603:4:8",
														"nodeType": "YulTypedName",
														"src": "7603:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7609:8:8",
														"nodeType": "YulTypedName",
														"src": "7609:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7619:3:8",
														"nodeType": "YulTypedName",
														"src": "7619:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7627:5:8",
														"nodeType": "YulTypedName",
														"src": "7627:5:8",
														"type": ""
													}
												],
												"src": "7573:1073:8"
											},
											{
												"body": {
													"nativeSrc": "8716:217:8",
													"nodeType": "YulBlock",
													"src": "8716:217:8",
													"statements": [
														{
															"nativeSrc": "8726:31:8",
															"nodeType": "YulAssignment",
															"src": "8726:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8752:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8752:4:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8734:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8734:17:8"
																},
																"nativeSrc": "8734:23:8",
																"nodeType": "YulFunctionCall",
																"src": "8734:23:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8726:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8726:4:8"
																}
															]
														},
														{
															"nativeSrc": "8766:37:8",
															"nodeType": "YulAssignment",
															"src": "8766:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8794:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "8794:8:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "8778:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "8778:15:8"
																},
																"nativeSrc": "8778:25:8",
																"nodeType": "YulFunctionCall",
																"src": "8778:25:8"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "8766:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "8766:8:8"
																}
															]
														},
														{
															"nativeSrc": "8813:113:8",
															"nodeType": "YulAssignment",
															"src": "8813:113:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8843:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8843:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8849:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "8849:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8859:66:8",
																		"nodeType": "YulLiteral",
																		"src": "8859:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "8822:20:8",
																	"nodeType": "YulIdentifier",
																	"src": "8822:20:8"
																},
																"nativeSrc": "8822:104:8",
																"nodeType": "YulFunctionCall",
																"src": "8822:104:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8813:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8813:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "8652:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8691:4:8",
														"nodeType": "YulTypedName",
														"src": "8691:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8697:8:8",
														"nodeType": "YulTypedName",
														"src": "8697:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8710:5:8",
														"nodeType": "YulTypedName",
														"src": "8710:5:8",
														"type": ""
													}
												],
												"src": "8652:281:8"
											},
											{
												"body": {
													"nativeSrc": "8987:362:8",
													"nodeType": "YulBlock",
													"src": "8987:362:8",
													"statements": [
														{
															"nativeSrc": "8997:25:8",
															"nodeType": "YulAssignment",
															"src": "8997:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9020:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9020:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9002:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9002:17:8"
																},
																"nativeSrc": "9002:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9002:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8997:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8997:1:8"
																}
															]
														},
														{
															"nativeSrc": "9031:25:8",
															"nodeType": "YulAssignment",
															"src": "9031:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9054:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9054:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9036:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9036:17:8"
																},
																"nativeSrc": "9036:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9036:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9031:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9031:1:8"
																}
															]
														},
														{
															"nativeSrc": "9065:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9065:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9088:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9088:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9091:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9091:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9084:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9084:3:8"
																},
																"nativeSrc": "9084:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9084:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9069:11:8",
																	"nodeType": "YulTypedName",
																	"src": "9069:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9102:41:8",
															"nodeType": "YulAssignment",
															"src": "9102:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9131:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "9131:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9113:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9113:17:8"
																},
																"nativeSrc": "9113:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9113:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9102:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9102:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9320:22:8",
																"nodeType": "YulBlock",
																"src": "9320:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9322:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9322:16:8"
																			},
																			"nativeSrc": "9322:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9322:18:8"
																		},
																		"nativeSrc": "9322:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9322:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9253:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "9253:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9246:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "9246:6:8"
																				},
																				"nativeSrc": "9246:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9246:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9276:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "9276:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9283:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "9283:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9292:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "9292:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9279:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9279:3:8"
																						},
																						"nativeSrc": "9279:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9279:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9273:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9273:2:8"
																				},
																				"nativeSrc": "9273:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9273:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9226:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9226:2:8"
																		},
																		"nativeSrc": "9226:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9226:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9206:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9206:6:8"
																},
																"nativeSrc": "9206:113:8",
																"nodeType": "YulFunctionCall",
																"src": "9206:113:8"
															},
															"nativeSrc": "9203:139:8",
															"nodeType": "YulIf",
															"src": "9203:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8939:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8970:1:8",
														"nodeType": "YulTypedName",
														"src": "8970:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8973:1:8",
														"nodeType": "YulTypedName",
														"src": "8973:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8979:7:8",
														"nodeType": "YulTypedName",
														"src": "8979:7:8",
														"type": ""
													}
												],
												"src": "8939:410:8"
											},
											{
												"body": {
													"nativeSrc": "9509:288:8",
													"nodeType": "YulBlock",
													"src": "9509:288:8",
													"statements": [
														{
															"nativeSrc": "9519:26:8",
															"nodeType": "YulAssignment",
															"src": "9519:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9531:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9531:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9542:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9542:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9527:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9527:3:8"
																},
																"nativeSrc": "9527:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9527:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9519:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9519:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9599:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9599:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9612:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9612:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9623:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9623:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9608:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9608:3:8"
																		},
																		"nativeSrc": "9608:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9608:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9555:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9555:43:8"
																},
																"nativeSrc": "9555:71:8",
																"nodeType": "YulFunctionCall",
																"src": "9555:71:8"
															},
															"nativeSrc": "9555:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "9555:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9680:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9680:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9693:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9693:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9704:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9704:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9689:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9689:3:8"
																		},
																		"nativeSrc": "9689:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9689:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9636:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9636:43:8"
																},
																"nativeSrc": "9636:72:8",
																"nodeType": "YulFunctionCall",
																"src": "9636:72:8"
															},
															"nativeSrc": "9636:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "9636:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9762:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9762:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9775:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9775:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9786:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9786:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9771:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9771:3:8"
																		},
																		"nativeSrc": "9771:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9771:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9718:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9718:43:8"
																},
																"nativeSrc": "9718:72:8",
																"nodeType": "YulFunctionCall",
																"src": "9718:72:8"
															},
															"nativeSrc": "9718:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "9718:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9355:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9465:9:8",
														"nodeType": "YulTypedName",
														"src": "9465:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9477:6:8",
														"nodeType": "YulTypedName",
														"src": "9477:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9485:6:8",
														"nodeType": "YulTypedName",
														"src": "9485:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9493:6:8",
														"nodeType": "YulTypedName",
														"src": "9493:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9504:4:8",
														"nodeType": "YulTypedName",
														"src": "9504:4:8",
														"type": ""
													}
												],
												"src": "9355:442:8"
											},
											{
												"body": {
													"nativeSrc": "9847:147:8",
													"nodeType": "YulBlock",
													"src": "9847:147:8",
													"statements": [
														{
															"nativeSrc": "9857:25:8",
															"nodeType": "YulAssignment",
															"src": "9857:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9880:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9880:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9862:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9862:17:8"
																},
																"nativeSrc": "9862:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9862:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9857:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9857:1:8"
																}
															]
														},
														{
															"nativeSrc": "9891:25:8",
															"nodeType": "YulAssignment",
															"src": "9891:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9914:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9914:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9896:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9896:17:8"
																},
																"nativeSrc": "9896:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9896:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9891:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9891:1:8"
																}
															]
														},
														{
															"nativeSrc": "9925:16:8",
															"nodeType": "YulAssignment",
															"src": "9925:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9936:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9936:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9939:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9939:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9932:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9932:3:8"
																},
																"nativeSrc": "9932:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9932:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9925:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9925:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9965:22:8",
																"nodeType": "YulBlock",
																"src": "9965:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9967:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9967:16:8"
																			},
																			"nativeSrc": "9967:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9967:18:8"
																		},
																		"nativeSrc": "9967:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9967:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9957:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9957:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9960:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9960:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9954:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9954:2:8"
																},
																"nativeSrc": "9954:10:8",
																"nodeType": "YulFunctionCall",
																"src": "9954:10:8"
															},
															"nativeSrc": "9951:36:8",
															"nodeType": "YulIf",
															"src": "9951:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9803:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9834:1:8",
														"nodeType": "YulTypedName",
														"src": "9834:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9837:1:8",
														"nodeType": "YulTypedName",
														"src": "9837:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9843:3:8",
														"nodeType": "YulTypedName",
														"src": "9843:3:8",
														"type": ""
													}
												],
												"src": "9803:191:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27D JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E1 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xDB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x329 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xEFC JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xF80 JUMP JUMPDEST PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH2 0x403 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E9 PUSH2 0x416 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH2 0x43E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0xDB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x292 SWAP2 SWAP1 PUSH2 0xF80 JUMP JUMPDEST PUSH2 0x572 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2A8 SWAP1 PUSH2 0x103E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D4 SWAP1 PUSH2 0x103E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x31F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x31F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x302 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x333 PUSH2 0x5F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x340 DUP2 DUP6 DUP6 PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x35E PUSH2 0x5F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x36B DUP6 DUP3 DUP6 PUSH2 0x60F JUMP JUMPDEST PUSH2 0x376 DUP6 DUP6 DUP6 PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x392 PUSH2 0x791 JUMP JUMPDEST PUSH2 0x3BA DUP3 PUSH2 0x39E PUSH2 0x382 JUMP JUMPDEST PUSH1 0xA PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x11CA JUMP JUMPDEST DUP4 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1214 JUMP JUMPDEST PUSH2 0x818 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40B PUSH2 0x791 JUMP JUMPDEST PUSH2 0x414 PUSH0 PUSH2 0x897 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x44D SWAP1 PUSH2 0x103E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x479 SWAP1 PUSH2 0x103E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x49B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4D8 PUSH2 0x5F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x4E5 DUP2 DUP6 DUP6 PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x57A PUSH2 0x791 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5EA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E1 SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5F3 DUP2 PUSH2 0x897 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x60A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x95A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x61A DUP5 DUP5 PUSH2 0x4F0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x69B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x68C JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1255 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x69A DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x95A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x711 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x708 SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x781 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x778 SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78C DUP4 DUP4 DUP4 PUSH2 0xB29 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x799 PUSH2 0x5F6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7B7 PUSH2 0x416 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x816 JUMPI PUSH2 0x7DA PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80D SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x888 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87F SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x893 PUSH0 DUP4 DUP4 PUSH2 0xB29 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9CA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C1 SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA3A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA31 SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB23 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB1A SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB79 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB6D SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC47 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC02 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1255 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC8E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCD8 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD35 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD84 DUP3 PUSH2 0xD42 JUMP JUMPDEST PUSH2 0xD8E DUP2 DUP6 PUSH2 0xD4C JUMP JUMPDEST SWAP4 POP PUSH2 0xD9E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD5C JUMP JUMPDEST PUSH2 0xDA7 DUP2 PUSH2 0xD6A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDCA DUP2 DUP5 PUSH2 0xD7A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDFF DUP3 PUSH2 0xDD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE0F DUP2 PUSH2 0xDF5 JUMP JUMPDEST DUP2 EQ PUSH2 0xE19 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE2A DUP2 PUSH2 0xE06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE42 DUP2 PUSH2 0xE30 JUMP JUMPDEST DUP2 EQ PUSH2 0xE4C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE5D DUP2 PUSH2 0xE39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE79 JUMPI PUSH2 0xE78 PUSH2 0xDD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE86 DUP6 DUP3 DUP7 ADD PUSH2 0xE1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE97 DUP6 DUP3 DUP7 ADD PUSH2 0xE4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB5 DUP2 PUSH2 0xEA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xECE PUSH0 DUP4 ADD DUP5 PUSH2 0xEAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEDD DUP2 PUSH2 0xE30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEF6 PUSH0 DUP4 ADD DUP5 PUSH2 0xED4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF13 JUMPI PUSH2 0xF12 PUSH2 0xDD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF20 DUP7 DUP3 DUP8 ADD PUSH2 0xE1C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF31 DUP7 DUP3 DUP8 ADD PUSH2 0xE1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF42 DUP7 DUP3 DUP8 ADD PUSH2 0xE4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF61 DUP2 PUSH2 0xF4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF7A PUSH0 DUP4 ADD DUP5 PUSH2 0xF58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF95 JUMPI PUSH2 0xF94 PUSH2 0xDD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFA2 DUP5 DUP3 DUP6 ADD PUSH2 0xE1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFB4 DUP2 PUSH2 0xDF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFCD PUSH0 DUP4 ADD DUP5 PUSH2 0xFAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFE9 JUMPI PUSH2 0xFE8 PUSH2 0xDD2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFF6 DUP6 DUP3 DUP7 ADD PUSH2 0xE1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1007 DUP6 DUP3 DUP7 ADD PUSH2 0xE1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1055 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1068 JUMPI PUSH2 0x1067 PUSH2 0x1011 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x10F0 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x10CC JUMPI PUSH2 0x10CB PUSH2 0x106E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x10DB JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x10E9 DUP6 PUSH2 0x109B JUMP JUMPDEST SWAP5 POP PUSH2 0x10B0 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1108 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x11C3 JUMP JUMPDEST DUP2 PUSH2 0x1115 JUMPI PUSH0 SWAP1 POP PUSH2 0x11C3 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x112B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1135 JUMPI PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1147 JUMPI PUSH2 0x1146 PUSH2 0x106E JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x115E JUMPI PUSH2 0x115D PUSH2 0x106E JUMP JUMPDEST JUMPDEST POP PUSH2 0x11C3 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1199 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1194 JUMPI PUSH2 0x1193 PUSH2 0x106E JUMP JUMPDEST JUMPDEST PUSH2 0x11C3 JUMP JUMPDEST PUSH2 0x11A6 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x10A7 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x11BD JUMPI PUSH2 0x11BC PUSH2 0x106E JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11D4 DUP3 PUSH2 0xE30 JUMP JUMPDEST SWAP2 POP PUSH2 0x11DF DUP4 PUSH2 0xF4C JUMP JUMPDEST SWAP3 POP PUSH2 0x120C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x10F9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x121E DUP3 PUSH2 0xE30 JUMP JUMPDEST SWAP2 POP PUSH2 0x1229 DUP4 PUSH2 0xE30 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1237 DUP2 PUSH2 0xE30 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x124E JUMPI PUSH2 0x124D PUSH2 0x106E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1268 PUSH0 DUP4 ADD DUP7 PUSH2 0xFAB JUMP JUMPDEST PUSH2 0x1275 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xED4 JUMP JUMPDEST PUSH2 0x1282 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xED4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1294 DUP3 PUSH2 0xE30 JUMP JUMPDEST SWAP2 POP PUSH2 0x129F DUP4 PUSH2 0xE30 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x12B7 JUMPI PUSH2 0x12B6 PUSH2 0x106E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xE PUSH14 0xFCD235895F2313AAFE1B0BBD93A8 0xE7 SWAP10 0xE4 ISZERO MOD 0xC8 SWAP16 ORIGIN PC PUSH13 0x62448CA05E64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "224:282:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;390:113:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;390:113:7:-;1531:13:0;:11;:13::i;:::-;460:35:7::1;466:2;484:10;:8;:10::i;:::-;478:2;:16;;;;:::i;:::-;470:6;:24;;;;:::i;:::-;460:5;:35::i;:::-;390:113:::0;;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;3846:140::-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:474::-;5501:6;5509;5558:2;5546:9;5537:7;5533:23;5529:32;5526:119;;;5564:79;;:::i;:::-;5526:119;5684:1;5709:53;5754:7;5745:6;5734:9;5730:22;5709:53;:::i;:::-;5699:63;;5655:117;5811:2;5837:53;5882:7;5873:6;5862:9;5858:22;5837:53;:::i;:::-;5827:63;;5782:118;5433:474;;;;;:::o;5913:180::-;5961:77;5958:1;5951:88;6058:4;6055:1;6048:15;6082:4;6079:1;6072:15;6099:320;6143:6;6180:1;6174:4;6170:12;6160:22;;6227:1;6221:4;6217:12;6248:18;6238:81;;6304:4;6296:6;6292:17;6282:27;;6238:81;6366:2;6358:6;6355:14;6335:18;6332:38;6329:84;;6385:18;;:::i;:::-;6329:84;6150:269;6099:320;;;:::o;6425:180::-;6473:77;6470:1;6463:88;6570:4;6567:1;6560:15;6594:4;6591:1;6584:15;6611:102;6653:8;6700:5;6697:1;6693:13;6672:34;;6611:102;;;:::o;6719:848::-;6780:5;6787:4;6811:6;6802:15;;6835:5;6826:14;;6849:712;6870:1;6860:8;6857:15;6849:712;;;6965:4;6960:3;6956:14;6950:4;6947:24;6944:50;;;6974:18;;:::i;:::-;6944:50;7024:1;7014:8;7010:16;7007:451;;;7439:4;7432:5;7428:16;7419:25;;7007:451;7489:4;7483;7479:15;7471:23;;7519:32;7542:8;7519:32;:::i;:::-;7507:44;;6849:712;;;6719:848;;;;;;;:::o;7573:1073::-;7627:5;7818:8;7808:40;;7839:1;7830:10;;7841:5;;7808:40;7867:4;7857:36;;7884:1;7875:10;;7886:5;;7857:36;7953:4;8001:1;7996:27;;;;8037:1;8032:191;;;;7946:277;;7996:27;8014:1;8005:10;;8016:5;;;8032:191;8077:3;8067:8;8064:17;8061:43;;;8084:18;;:::i;:::-;8061:43;8133:8;8130:1;8126:16;8117:25;;8168:3;8161:5;8158:14;8155:40;;;8175:18;;:::i;:::-;8155:40;8208:5;;;7946:277;;8332:2;8322:8;8319:16;8313:3;8307:4;8304:13;8300:36;8282:2;8272:8;8269:16;8264:2;8258:4;8255:12;8251:35;8235:111;8232:246;;;8388:8;8382:4;8378:19;8369:28;;8423:3;8416:5;8413:14;8410:40;;;8430:18;;:::i;:::-;8410:40;8463:5;;8232:246;8503:42;8541:3;8531:8;8525:4;8522:1;8503:42;:::i;:::-;8488:57;;;;8577:4;8572:3;8568:14;8561:5;8558:25;8555:51;;;8586:18;;:::i;:::-;8555:51;8635:4;8628:5;8624:16;8615:25;;7573:1073;;;;;;:::o;8652:281::-;8710:5;8734:23;8752:4;8734:23;:::i;:::-;8726:31;;8778:25;8794:8;8778:25;:::i;:::-;8766:37;;8822:104;8859:66;8849:8;8843:4;8822:104;:::i;:::-;8813:113;;8652:281;;;;:::o;8939:410::-;8979:7;9002:20;9020:1;9002:20;:::i;:::-;8997:25;;9036:20;9054:1;9036:20;:::i;:::-;9031:25;;9091:1;9088;9084:9;9113:30;9131:11;9113:30;:::i;:::-;9102:41;;9292:1;9283:7;9279:15;9276:1;9273:22;9253:1;9246:9;9226:83;9203:139;;9322:18;;:::i;:::-;9203:139;8987:362;8939:410;;;;:::o;9355:442::-;9504:4;9542:2;9531:9;9527:18;9519:26;;9555:71;9623:1;9612:9;9608:17;9599:6;9555:71;:::i;:::-;9636:72;9704:2;9693:9;9689:18;9680:6;9636:72;:::i;:::-;9718;9786:2;9775:9;9771:18;9762:6;9718:72;:::i;:::-;9355:442;;;;;;:::o;9803:191::-;9843:3;9862:20;9880:1;9862:20;:::i;:::-;9857:25;;9896:20;9914:1;9896:20;:::i;:::-;9891:25;;9939:1;9936;9932:9;9925:16;;9960:3;9957:1;9954:10;9951:36;;;9967:18;;:::i;:::-;9951:36;9803:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "970200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2852",
								"decimals()": "427",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2582",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 506,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 224,
									"end": 506,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 506,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 271,
									"end": 382,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 382,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 271,
									"end": 382,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 271,
									"end": 382,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 271,
									"end": 382,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 271,
									"end": 382,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 271,
									"end": 382,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 271,
									"end": 382,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 271,
									"end": 382,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 361,
									"end": 373,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "C"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "4D696E65727661546F6B656E0000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "4D494E5600000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 271,
									"end": 382,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 224,
									"end": 506,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 224,
									"end": 506,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 224,
									"end": 506,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 224,
									"end": 506,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 224,
									"end": 506,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 506,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 224,
									"end": 506,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 506,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 506,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 224,
									"end": 506,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 506,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220df0e6dfcd235895f2313aafe1b0bbd93a8e799e41506c89f32586c62448ca05e64736f6c634300081a0033",
									".code": [
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 506,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 390,
											"end": 503,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 390,
											"end": 503,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 390,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 390,
											"end": 503,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 390,
											"end": 503,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 390,
											"end": 503,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 390,
											"end": 503,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 390,
											"end": 503,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 390,
											"end": 503,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 390,
											"end": 503,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 390,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 390,
											"end": 503,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 390,
											"end": 503,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 390,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 390,
											"end": 503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 390,
											"end": 503,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 390,
											"end": 503,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 390,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 390,
											"end": 503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 390,
											"end": 503,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 390,
											"end": 503,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 390,
											"end": 503,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 390,
											"end": 503,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 390,
											"end": 503,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 460,
											"end": 495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 466,
											"end": 468,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 484,
											"end": 494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 484,
											"end": 492,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 484,
											"end": 494,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 484,
											"end": 494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 484,
											"end": 494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 478,
											"end": 480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 478,
											"end": 494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 478,
											"end": 494,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 478,
											"end": 494,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 478,
											"end": 494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 478,
											"end": 494,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 478,
											"end": 494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 478,
											"end": 494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 470,
											"end": 476,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 470,
											"end": 494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 470,
											"end": 494,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 470,
											"end": 494,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 470,
											"end": 494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 470,
											"end": 494,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 470,
											"end": 494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 470,
											"end": 494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 460,
											"end": 465,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 460,
											"end": 495,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 460,
											"end": 495,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 460,
											"end": 495,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 390,
											"end": 503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 390,
											"end": 503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 390,
											"end": 503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 5168,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 5349,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5529,
											"end": 5561,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 5564,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5730,
											"end": 5752,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 5709,
											"end": 5762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 5837,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5961,
											"end": 6038,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5958,
											"end": 5959,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 6039,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6058,
											"end": 6062,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6055,
											"end": 6056,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6048,
											"end": 6063,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6087,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6180,
											"end": 6181,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6174,
											"end": 6178,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6227,
											"end": 6228,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6229,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6292,
											"end": 6309,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6366,
											"end": 6368,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6358,
											"end": 6364,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6369,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6332,
											"end": 6370,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 6385,
											"end": 6403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6150,
											"end": 6419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6425,
											"end": 6605,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 6425,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6473,
											"end": 6550,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6470,
											"end": 6471,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6463,
											"end": 6551,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6570,
											"end": 6574,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 6567,
											"end": 6568,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6560,
											"end": 6575,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6594,
											"end": 6598,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6591,
											"end": 6592,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6599,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6611,
											"end": 6713,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 6611,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6653,
											"end": 6661,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6700,
											"end": 6705,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6697,
											"end": 6698,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6693,
											"end": 6706,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 6672,
											"end": 6706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6672,
											"end": 6706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6611,
											"end": 6713,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6611,
											"end": 6713,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6611,
											"end": 6713,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6611,
											"end": 6713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6780,
											"end": 6785,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6787,
											"end": 6791,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6811,
											"end": 6817,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 6817,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 6817,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6835,
											"end": 6840,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6871,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6860,
											"end": 6868,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6857,
											"end": 6872,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6969,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6960,
											"end": 6963,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6956,
											"end": 6970,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6950,
											"end": 6954,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 6971,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6944,
											"end": 6994,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6944,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 6944,
											"end": 6994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6974,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 6974,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 6974,
											"end": 6992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6974,
											"end": 6992,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 6974,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6944,
											"end": 6994,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 6944,
											"end": 6994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7025,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7014,
											"end": 7022,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7010,
											"end": 7026,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7007,
											"end": 7458,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7007,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 7007,
											"end": 7458,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7439,
											"end": 7443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7432,
											"end": 7437,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7428,
											"end": 7444,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7419,
											"end": 7444,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7419,
											"end": 7444,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7007,
											"end": 7458,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 7007,
											"end": 7458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7489,
											"end": 7493,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7483,
											"end": 7487,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7479,
											"end": 7494,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7471,
											"end": 7494,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7471,
											"end": 7494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7519,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 7542,
											"end": 7550,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7519,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 7519,
											"end": 7551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7519,
											"end": 7551,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 7519,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7507,
											"end": 7551,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7507,
											"end": 7551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 6849,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 7567,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 7567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7627,
											"end": 7632,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7818,
											"end": 7826,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7808,
											"end": 7848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 7808,
											"end": 7848,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7840,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7830,
											"end": 7840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7830,
											"end": 7840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7841,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 7841,
											"end": 7846,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7808,
											"end": 7848,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 7808,
											"end": 7848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7867,
											"end": 7871,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7857,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 7857,
											"end": 7893,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7884,
											"end": 7885,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7875,
											"end": 7885,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7875,
											"end": 7885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7886,
											"end": 7891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 7886,
											"end": 7891,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7857,
											"end": 7893,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 7857,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 7957,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8001,
											"end": 8002,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7996,
											"end": 8023,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7996,
											"end": 8023,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7996,
											"end": 8023,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 7996,
											"end": 8023,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8037,
											"end": 8038,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8032,
											"end": 8223,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8032,
											"end": 8223,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8032,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 8032,
											"end": 8223,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7946,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 7946,
											"end": 8223,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7996,
											"end": 8023,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 7996,
											"end": 8023,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8014,
											"end": 8015,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8005,
											"end": 8015,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8005,
											"end": 8015,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8016,
											"end": 8021,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8016,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 8016,
											"end": 8021,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8032,
											"end": 8223,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 8032,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8077,
											"end": 8080,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 8067,
											"end": 8075,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8061,
											"end": 8104,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8061,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 8061,
											"end": 8104,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8084,
											"end": 8102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 8084,
											"end": 8102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 8084,
											"end": 8102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8084,
											"end": 8102,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 8084,
											"end": 8102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8061,
											"end": 8104,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 8061,
											"end": 8104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8133,
											"end": 8141,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8130,
											"end": 8131,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8126,
											"end": 8142,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 8117,
											"end": 8142,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8117,
											"end": 8142,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8168,
											"end": 8171,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8161,
											"end": 8166,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8172,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 8175,
											"end": 8193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8208,
											"end": 8213,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8208,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 8208,
											"end": 8213,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7946,
											"end": 8223,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 7946,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7946,
											"end": 8223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8332,
											"end": 8334,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8322,
											"end": 8330,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8319,
											"end": 8335,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8316,
											"name": "PUSH",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 8307,
											"end": 8311,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8304,
											"end": 8317,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8300,
											"end": 8336,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8282,
											"end": 8284,
											"name": "PUSH",
											"source": 8,
											"value": "4E"
										},
										{
											"begin": 8272,
											"end": 8280,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8269,
											"end": 8285,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8264,
											"end": 8266,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 8258,
											"end": 8262,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8255,
											"end": 8267,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8251,
											"end": 8286,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8235,
											"end": 8346,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 8232,
											"end": 8478,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8232,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 8232,
											"end": 8478,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8388,
											"end": 8396,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8382,
											"end": 8386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8378,
											"end": 8397,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 8369,
											"end": 8397,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8369,
											"end": 8397,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8423,
											"end": 8426,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8421,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8413,
											"end": 8427,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8410,
											"end": 8450,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8410,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 8410,
											"end": 8450,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 8430,
											"end": 8448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8410,
											"end": 8450,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 8410,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8463,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 8463,
											"end": 8468,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8232,
											"end": 8478,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 8232,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8503,
											"end": 8545,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 8541,
											"end": 8544,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8531,
											"end": 8539,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8525,
											"end": 8529,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8522,
											"end": 8523,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8503,
											"end": 8545,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 8503,
											"end": 8545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8503,
											"end": 8545,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 8503,
											"end": 8545,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8488,
											"end": 8545,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8488,
											"end": 8545,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8488,
											"end": 8545,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8488,
											"end": 8545,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8577,
											"end": 8581,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8572,
											"end": 8575,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8568,
											"end": 8582,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8561,
											"end": 8566,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8558,
											"end": 8583,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8555,
											"end": 8606,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8555,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 8555,
											"end": 8606,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8586,
											"end": 8604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 8586,
											"end": 8604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 8586,
											"end": 8604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8586,
											"end": 8604,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 8586,
											"end": 8604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8555,
											"end": 8606,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 8555,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8635,
											"end": 8639,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8628,
											"end": 8633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8624,
											"end": 8640,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8615,
											"end": 8640,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8615,
											"end": 8640,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7573,
											"end": 8646,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7573,
											"end": 8646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8652,
											"end": 8933,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 8652,
											"end": 8933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8710,
											"end": 8715,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8734,
											"end": 8757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 8752,
											"end": 8756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8734,
											"end": 8757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 8734,
											"end": 8757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8734,
											"end": 8757,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 8734,
											"end": 8757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8726,
											"end": 8757,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8726,
											"end": 8757,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8778,
											"end": 8803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 8794,
											"end": 8802,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8778,
											"end": 8803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 8778,
											"end": 8803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8778,
											"end": 8803,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 8778,
											"end": 8803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8766,
											"end": 8803,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8766,
											"end": 8803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8822,
											"end": 8926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 8859,
											"end": 8925,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8849,
											"end": 8857,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8843,
											"end": 8847,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8822,
											"end": 8926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 8822,
											"end": 8926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8822,
											"end": 8926,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 8822,
											"end": 8926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8813,
											"end": 8926,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8813,
											"end": 8926,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8652,
											"end": 8933,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8652,
											"end": 8933,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8652,
											"end": 8933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8652,
											"end": 8933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8652,
											"end": 8933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8939,
											"end": 9349,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 8939,
											"end": 9349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8979,
											"end": 8986,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9002,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 9020,
											"end": 9021,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9002,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 9002,
											"end": 9022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9002,
											"end": 9022,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 9002,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8997,
											"end": 9022,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8997,
											"end": 9022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9036,
											"end": 9056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 9054,
											"end": 9055,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9036,
											"end": 9056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 9036,
											"end": 9056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9036,
											"end": 9056,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 9036,
											"end": 9056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9031,
											"end": 9056,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9031,
											"end": 9056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9091,
											"end": 9092,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9088,
											"end": 9089,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9084,
											"end": 9093,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9113,
											"end": 9143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 9131,
											"end": 9142,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9113,
											"end": 9143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 9113,
											"end": 9143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9113,
											"end": 9143,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 9113,
											"end": 9143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9102,
											"end": 9143,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9102,
											"end": 9143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9292,
											"end": 9293,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9283,
											"end": 9290,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9279,
											"end": 9294,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9276,
											"end": 9277,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9273,
											"end": 9295,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9253,
											"end": 9254,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9246,
											"end": 9255,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9226,
											"end": 9309,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 9203,
											"end": 9342,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 9203,
											"end": 9342,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9322,
											"end": 9340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 9322,
											"end": 9340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 9322,
											"end": 9340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9322,
											"end": 9340,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 9322,
											"end": 9340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9203,
											"end": 9342,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 9203,
											"end": 9342,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8987,
											"end": 9349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8939,
											"end": 9349,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8939,
											"end": 9349,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8939,
											"end": 9349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8939,
											"end": 9349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8939,
											"end": 9349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9355,
											"end": 9797,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 9355,
											"end": 9797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9504,
											"end": 9508,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9542,
											"end": 9544,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9531,
											"end": 9540,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9527,
											"end": 9545,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9519,
											"end": 9545,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9519,
											"end": 9545,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9555,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 9623,
											"end": 9624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9612,
											"end": 9621,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9608,
											"end": 9625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9599,
											"end": 9605,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9555,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 9555,
											"end": 9626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9555,
											"end": 9626,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 9555,
											"end": 9626,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9636,
											"end": 9708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 9704,
											"end": 9706,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9693,
											"end": 9702,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9689,
											"end": 9707,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9680,
											"end": 9686,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9636,
											"end": 9708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 9636,
											"end": 9708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9636,
											"end": 9708,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 9636,
											"end": 9708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9718,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 9786,
											"end": 9788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9775,
											"end": 9784,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9771,
											"end": 9789,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9762,
											"end": 9768,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9718,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 9718,
											"end": 9790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9718,
											"end": 9790,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 9718,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9355,
											"end": 9797,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9355,
											"end": 9797,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9355,
											"end": 9797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9355,
											"end": 9797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9355,
											"end": 9797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9355,
											"end": 9797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9355,
											"end": 9797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9803,
											"end": 9994,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 9803,
											"end": 9994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9843,
											"end": 9846,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9862,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 9880,
											"end": 9881,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9862,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 9862,
											"end": 9882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9862,
											"end": 9882,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 9862,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9857,
											"end": 9882,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9857,
											"end": 9882,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9896,
											"end": 9916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 9914,
											"end": 9915,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9896,
											"end": 9916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 9896,
											"end": 9916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9896,
											"end": 9916,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 9896,
											"end": 9916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9891,
											"end": 9916,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9891,
											"end": 9916,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9939,
											"end": 9940,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9936,
											"end": 9937,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9932,
											"end": 9941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9925,
											"end": 9941,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9925,
											"end": 9941,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9960,
											"end": 9963,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 9958,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9954,
											"end": 9964,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9951,
											"end": 9987,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9951,
											"end": 9987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 9951,
											"end": 9987,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9967,
											"end": 9985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 9967,
											"end": 9985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 9967,
											"end": 9985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9967,
											"end": 9985,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 9967,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9951,
											"end": 9987,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 9951,
											"end": 9987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9803,
											"end": 9994,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9803,
											"end": 9994,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9803,
											"end": 9994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9803,
											"end": 9994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9803,
											"end": 9994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/BuyToken.sol",
								"contracts/MinervaToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MinervaToken.sol\":\"MinervaToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/MinervaToken.sol\":{\"keccak256\":\"0x4178dec4bc1f117fb9c2f83fbb54ecf50ddd15ea09d9c0072c760cd1225a6363\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68385c518280b93080c5c95313aca4147d066151719193382141456a4643a7ae\",\"dweb:/ipfs/QmYhojvGXMGpUeGTHVgBfTjcHKq62rZKqzstCLSrdsw8CX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/MinervaToken.sol:MinervaToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/MinervaToken.sol:MinervaToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/MinervaToken.sol:MinervaToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/MinervaToken.sol:MinervaToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/MinervaToken.sol:MinervaToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/MinervaToken.sol:MinervaToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/BuyToken.sol": {
				"ast": {
					"absolutePath": "contracts/BuyToken.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"MinervaToken": [
							1383
						],
						"Ownable": [
							147
						],
						"buy_sell_Token": [
							1341
						]
					},
					"id": 1342,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "contracts/MinervaToken.sol",
							"file": "./MinervaToken.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1342,
							"sourceUnit": 1384,
							"src": "61:28:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1342,
							"sourceUnit": 148,
							"src": "91:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "Ownable",
										"nameLocations": [
											"174:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "174:7:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "174:7:6"
								}
							],
							"canonicalName": "buy_sell_Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1341,
							"linearizedBaseContracts": [
								1341,
								147,
								933
							],
							"name": "buy_sell_Token",
							"nameLocation": "156:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 942,
									"mutability": "mutable",
									"name": "minervaToken",
									"nameLocation": "202:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1341,
									"src": "189:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_MinervaToken_$1383",
										"typeString": "contract MinervaToken"
									},
									"typeName": {
										"id": 941,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 940,
											"name": "MinervaToken",
											"nameLocations": [
												"189:12:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1383,
											"src": "189:12:6"
										},
										"referencedDeclaration": 1383,
										"src": "189:12:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_MinervaToken_$1383",
											"typeString": "contract MinervaToken"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "cb232842",
									"id": 945,
									"mutability": "mutable",
									"name": "tokensPerCoin",
									"nameLocation": "236:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1341,
									"src": "221:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 943,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "221:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 944,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "252:3:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "57715207",
									"id": 953,
									"mutability": "mutable",
									"name": "maxTokensPerPurchase",
									"nameLocation": "277:20:6",
									"nodeType": "VariableDeclaration",
									"scope": 1341,
									"src": "262:52:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 946,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "262:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000"
										},
										"id": 952,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030",
											"id": 947,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "300:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000_by_1",
												"typeString": "int_const 1000"
											},
											"value": "1000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 948,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "307:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "311:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "307:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 951,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "306:8:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "300:14:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "23a1baaa",
									"id": 961,
									"mutability": "mutable",
									"name": "maxTokensPerAddress",
									"nameLocation": "383:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 1341,
									"src": "368:52:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 954,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "368:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_5000000000000000000000_by_1",
											"typeString": "int_const 5000000000000000000000"
										},
										"id": 960,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "35303030",
											"id": 955,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "405:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_5000_by_1",
												"typeString": "int_const 5000"
											},
											"value": "5000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "413:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "417:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "413:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 959,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "412:8:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "405:15:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000000000000000000000_by_1",
											"typeString": "int_const 5000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0a431e52",
									"id": 964,
									"mutability": "mutable",
									"name": "sellDiscountPercent",
									"nameLocation": "489:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 1341,
									"src": "474:38:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 962,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "474:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 963,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "511:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "0a37b72bb67eee30e09084cf386f8a17817c57f620c3ab95fb25d6a20356ec77",
									"id": 972,
									"name": "BuyTokens",
									"nameLocation": "542:9:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"indexed": false,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "560:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "552:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOfCoin",
												"nameLocation": "575:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "567:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOfTokens",
												"nameLocation": "597:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "589:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "551:61:6"
									},
									"src": "536:77:6"
								},
								{
									"anonymous": false,
									"eventSelector": "a24838acd4af5195a2396965dae5abf54e84e8c19f5698bb966ae64e29994ee5",
									"id": 980,
									"name": "SellTokens",
									"nameLocation": "625:10:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"indexed": false,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "644:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "636:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOfTokens",
												"nameLocation": "660:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "652:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOfCoin",
												"nameLocation": "684:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "676:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:62:6"
									},
									"src": "619:79:6"
								},
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "760:60:6",
										"statements": [
											{
												"expression": {
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 989,
														"name": "minervaToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "771:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_MinervaToken_$1383",
															"typeString": "contract MinervaToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 991,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "799:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 990,
															"name": "MinervaToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "786:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MinervaToken_$1383_$",
																"typeString": "type(contract MinervaToken)"
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "786:26:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_MinervaToken_$1383",
															"typeString": "contract MinervaToken"
														}
													},
													"src": "771:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_MinervaToken_$1383",
														"typeString": "contract MinervaToken"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "771:41:6"
											}
										]
									},
									"id": 996,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 985,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "748:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "752:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "748:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 987,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 984,
												"name": "Ownable",
												"nameLocations": [
													"740:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "740:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "740:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "726:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "718:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "717:22:6"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "760:0:6"
									},
									"scope": 1341,
									"src": "706:114:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "888:42:6",
										"statements": [
											{
												"expression": {
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1003,
														"name": "tokensPerCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "899:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1004,
														"name": "newRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "915:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "899:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "899:23:6"
											}
										]
									},
									"functionSelector": "453989b2",
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1001,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1000,
												"name": "onlyOwner",
												"nameLocations": [
													"878:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "878:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "878:9:6"
										}
									],
									"name": "setTokensPerCoin",
									"nameLocation": "837:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "newRate",
												"nameLocation": "862:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "854:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "853:17:6"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "888:0:6"
									},
									"scope": 1341,
									"src": "828:102:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "1006:61:6",
										"statements": [
											{
												"expression": {
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1015,
														"name": "maxTokensPerPurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "1017:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1016,
															"name": "newLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "1040:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 1019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1051:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 1018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1056:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "1051:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																}
															],
															"id": 1020,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1050:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "1040:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1017:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "1017:42:6"
											}
										]
									},
									"functionSelector": "1b326fad",
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1013,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1012,
												"name": "onlyOwner",
												"nameLocations": [
													"996:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "996:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "996:9:6"
										}
									],
									"name": "setMaxTokensPerPurchase",
									"nameLocation": "947:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "newLimit",
												"nameLocation": "979:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "971:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:18:6"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:0:6"
									},
									"scope": 1341,
									"src": "938:129:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "1142:61:6",
										"statements": [
											{
												"expression": {
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1032,
														"name": "maxTokensPerAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "1153:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1033,
															"name": "newLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "1175:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1186:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 1035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1192:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "1186:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																}
															],
															"id": 1037,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1185:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "1175:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1153:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "1153:42:6"
											}
										]
									},
									"functionSelector": "dbb84f11",
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1030,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1029,
												"name": "onlyOwner",
												"nameLocations": [
													"1132:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1132:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1132:9:6"
										}
									],
									"name": "setMaxTokensPerAddress",
									"nameLocation": "1084:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "newLimit",
												"nameLocation": "1115:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "1107:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1106:18:6"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1142:0:6"
									},
									"scope": 1341,
									"src": "1075:128:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "1281:52:6",
										"statements": [
											{
												"expression": {
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1049,
														"name": "sellDiscountPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "1292:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1050,
														"name": "newDiscount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "1314:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1292:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "1292:33:6"
											}
										]
									},
									"functionSelector": "1369bfee",
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1047,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1046,
												"name": "onlyOwner",
												"nameLocations": [
													"1271:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1271:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1271:9:6"
										}
									],
									"name": "setSellDiscountPercent",
									"nameLocation": "1220:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "newDiscount",
												"nameLocation": "1251:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "1243:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:21:6"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1281:0:6"
									},
									"scope": 1341,
									"src": "1211:122:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "1401:47:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1061,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1427:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_buy_sell_Token_$1341",
																	"typeString": "contract buy_sell_Token"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_buy_sell_Token_$1341",
																	"typeString": "contract buy_sell_Token"
																}
															],
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1419:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1059,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1419:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1419:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1433:7:6",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1419:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1058,
												"id": 1064,
												"nodeType": "Return",
												"src": "1412:28:6"
											}
										]
									},
									"functionSelector": "6f9fb98a",
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getContractBalance",
									"nameLocation": "1350:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1368:2:6"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1392:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1391:9:6"
									},
									"scope": 1341,
									"src": "1341:107:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "1524:811:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1072,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1543:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1547:5:6",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1543:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1555:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1543:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e6420436f696e20746f2062757920736f6d6520746f6b656e73",
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1558:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8f0f6f6f3a705f803e66a028235bd6580e0294fb768d8213f67a27249c5bb7b5",
																"typeString": "literal_string \"Send Coin to buy some tokens\""
															},
															"value": "Send Coin to buy some tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8f0f6f6f3a705f803e66a028235bd6580e0294fb768d8213f67a27249c5bb7b5",
																"typeString": "literal_string \"Send Coin to buy some tokens\""
															}
														],
														"id": 1071,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1535:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1535:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "1535:54:6"
											},
											{
												"assignments": [
													1080
												],
												"declarations": [
													{
														"constant": false,
														"id": 1080,
														"mutability": "mutable",
														"name": "amountToBuy",
														"nameLocation": "1610:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1151,
														"src": "1602:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1079,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1602:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1085,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1081,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1624:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1628:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1624:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1083,
														"name": "tokensPerCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "1636:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1624:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1602:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1087,
																"name": "amountToBuy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "1668:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1088,
																"name": "maxTokensPerPurchase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "1683:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1668:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206d6178696d756d20746f6b656e7320706572207075726368617365",
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1705:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0423aa1eee4f0a53ec9ada5463242621bb79b11b092fc933afd96176da84d685",
																"typeString": "literal_string \"Exceeds maximum tokens per purchase\""
															},
															"value": "Exceeds maximum tokens per purchase"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0423aa1eee4f0a53ec9ada5463242621bb79b11b092fc933afd96176da84d685",
																"typeString": "literal_string \"Exceeds maximum tokens per purchase\""
															}
														],
														"id": 1086,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1660:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1660:83:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "1660:83:6"
											},
											{
												"assignments": [
													1094
												],
												"declarations": [
													{
														"constant": false,
														"id": 1094,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "1764:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 1151,
														"src": "1756:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1093,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1756:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1102,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1099,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1813:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_buy_sell_Token_$1341",
																		"typeString": "contract buy_sell_Token"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_buy_sell_Token_$1341",
																		"typeString": "contract buy_sell_Token"
																	}
																],
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1805:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1097,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1805:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1805:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1095,
															"name": "minervaToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "1782:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MinervaToken_$1383",
																"typeString": "contract MinervaToken"
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1795:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 385,
														"src": "1782:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1782:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1756:63:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1104,
																"name": "contractBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "1838:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1105,
																"name": "amountToBuy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "1857:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1838:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56656e646f7220636f6e747261637420686173206e6f7420656e6f75676820746f6b656e7320696e206974732062616c616e6365",
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1870:54:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_777dbadb3df903f1fcc5211d7b6eb6190bc70fecfae0faab0b322a8f9af4f0eb",
																"typeString": "literal_string \"Vendor contract has not enough tokens in its balance\""
															},
															"value": "Vendor contract has not enough tokens in its balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_777dbadb3df903f1fcc5211d7b6eb6190bc70fecfae0faab0b322a8f9af4f0eb",
																"typeString": "literal_string \"Vendor contract has not enough tokens in its balance\""
															}
														],
														"id": 1103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1830:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1830:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "1830:95:6"
											},
											{
												"assignments": [
													1111
												],
												"declarations": [
													{
														"constant": false,
														"id": 1111,
														"mutability": "mutable",
														"name": "userBalance",
														"nameLocation": "1946:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1151,
														"src": "1938:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1110,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1938:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1117,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1114,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1983:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1987:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1983:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1112,
															"name": "minervaToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "1960:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MinervaToken_$1383",
																"typeString": "contract MinervaToken"
															}
														},
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1973:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 385,
														"src": "1960:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1960:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1938:56:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1119,
																	"name": "userBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1111,
																	"src": "2013:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1120,
																	"name": "amountToBuy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "2027:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2013:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1122,
																"name": "maxTokensPerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "2042:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2013:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206d6178696d756d20746f6b656e73207065722061646472657373",
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2063:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b74ddd97d67f1c1431d609f8321e1007c3c10e04f4b6ab7f03cb3c358aae04a9",
																"typeString": "literal_string \"Exceeds maximum tokens per address\""
															},
															"value": "Exceeds maximum tokens per address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b74ddd97d67f1c1431d609f8321e1007c3c10e04f4b6ab7f03cb3c358aae04a9",
																"typeString": "literal_string \"Exceeds maximum tokens per address\""
															}
														],
														"id": 1118,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2005:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2005:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "2005:95:6"
											},
											{
												"assignments": [
													1128
												],
												"declarations": [
													{
														"constant": false,
														"id": 1128,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "2119:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1151,
														"src": "2114:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1127,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2114:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1135,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1131,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2149:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2153:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2149:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1133,
															"name": "amountToBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "2161:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1129,
															"name": "minervaToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "2127:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MinervaToken_$1383",
																"typeString": "contract MinervaToken"
															}
														},
														"id": 1130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2140:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "2127:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2127:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2113:60:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1137,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "2192:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f207472616e7366657220746f6b656e20746f2075736572",
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2198:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e2144b0476a7562194fa6b400c34b53ef7696dbbbad349dc4312e34d3f08dfe4",
																"typeString": "literal_string \"Failed to transfer token to user\""
															},
															"value": "Failed to transfer token to user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e2144b0476a7562194fa6b400c34b53ef7696dbbbad349dc4312e34d3f08dfe4",
																"typeString": "literal_string \"Failed to transfer token to user\""
															}
														],
														"id": 1136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2184:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2184:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "2184:49:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1142,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2261:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2265:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2261:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1144,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2273:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2277:5:6",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2273:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1146,
															"name": "amountToBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "2284:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1141,
														"name": "BuyTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "2251:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2251:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1148,
												"nodeType": "EmitStatement",
												"src": "2246:50:6"
											},
											{
												"expression": {
													"id": 1149,
													"name": "amountToBuy",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1080,
													"src": "2316:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1070,
												"id": 1150,
												"nodeType": "Return",
												"src": "2309:18:6"
											}
										]
									},
									"functionSelector": "d0febe4c",
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyTokens",
									"nameLocation": "1467:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1476:2:6"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "1511:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "1503:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:21:6"
									},
									"scope": 1341,
									"src": "1458:877:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "2420:809:6",
										"statements": [
											{
												"expression": {
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1159,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "2431:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1160,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "2445:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2466:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "2460:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																}
															],
															"id": 1164,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2459:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "2445:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2431:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1167,
												"nodeType": "ExpressionStatement",
												"src": "2431:38:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1169,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "2488:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2502:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2488:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5370656369667920616d6f756e74206f6620746f6b656e7320746f2073656c6c",
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2505:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a3c239de946079d2d0118e3c5cd67afef89696a15aebde596059fa4a511c966c",
																"typeString": "literal_string \"Specify amount of tokens to sell\""
															},
															"value": "Specify amount of tokens to sell"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a3c239de946079d2d0118e3c5cd67afef89696a15aebde596059fa4a511c966c",
																"typeString": "literal_string \"Specify amount of tokens to sell\""
															}
														],
														"id": 1168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2480:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2480:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "2480:60:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1178,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2582:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2586:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2582:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1176,
																		"name": "minervaToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "2559:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MinervaToken_$1383",
																			"typeString": "contract MinervaToken"
																		}
																	},
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2572:9:6",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 385,
																	"src": "2559:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2559:34:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1181,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "2597:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2559:49:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420746f6b656e2062616c616e6365",
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2610:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192",
																"typeString": "literal_string \"Insufficient token balance\""
															},
															"value": "Insufficient token balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192",
																"typeString": "literal_string \"Insufficient token balance\""
															}
														],
														"id": 1175,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2551:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:88:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "2551:88:6"
											},
											{
												"assignments": [
													1187
												],
												"declarations": [
													{
														"constant": false,
														"id": 1187,
														"mutability": "mutable",
														"name": "amountToPay",
														"nameLocation": "2660:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1254,
														"src": "2652:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1186,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2652:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1200,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1188,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "2675:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "313030",
																				"id": 1189,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2690:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1190,
																				"name": "sellDiscountPercent",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "2696:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2690:25:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1192,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2689:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2675:41:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1194,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2674:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313030",
																	"id": 1195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2721:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1196,
																	"name": "tokensPerCoin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 945,
																	"src": "2727:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2721:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1198,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2720:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2674:67:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2652:89:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1204,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2768:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_buy_sell_Token_$1341",
																				"typeString": "contract buy_sell_Token"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_buy_sell_Token_$1341",
																				"typeString": "contract buy_sell_Token"
																			}
																		],
																		"id": 1203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2760:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1202,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2760:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2760:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2774:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2760:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1207,
																"name": "amountToPay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "2785:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2760:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420436f696e2062616c616e636520696e20636f6e7472616374",
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2798:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5c0b16933219a11e126acac4bdc517d3b683c9ecefce62e995b71ef7d2bce23b",
																"typeString": "literal_string \"Insufficient Coin balance in contract\""
															},
															"value": "Insufficient Coin balance in contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5c0b16933219a11e126acac4bdc517d3b683c9ecefce62e995b71ef7d2bce23b",
																"typeString": "literal_string \"Insufficient Coin balance in contract\""
															}
														],
														"id": 1201,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2752:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2752:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1211,
												"nodeType": "ExpressionStatement",
												"src": "2752:86:6"
											},
											{
												"assignments": [
													1213
												],
												"declarations": [
													{
														"constant": false,
														"id": 1213,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "2857:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1254,
														"src": "2852:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1212,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2852:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1224,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1216,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2891:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2895:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2891:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1220,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2911:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_buy_sell_Token_$1341",
																		"typeString": "contract buy_sell_Token"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_buy_sell_Token_$1341",
																		"typeString": "contract buy_sell_Token"
																	}
																],
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2903:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1218,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2903:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2903:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1222,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "2918:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1214,
															"name": "minervaToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "2865:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MinervaToken_$1383",
																"typeString": "contract MinervaToken"
															}
														},
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2878:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "2865:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2865:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2851:79:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1226,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "2949:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f207472616e7366657220746f6b656e20746f20636f6e7472616374",
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2955:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67f2e659058ef888541c8c99ecc7f16c7718ac8cd22dc7327ffb45028052372f",
																"typeString": "literal_string \"Failed to transfer token to contract\""
															},
															"value": "Failed to transfer token to contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67f2e659058ef888541c8c99ecc7f16c7718ac8cd22dc7327ffb45028052372f",
																"typeString": "literal_string \"Failed to transfer token to contract\""
															}
														],
														"id": 1225,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2941:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2941:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "ExpressionStatement",
												"src": "2941:53:6"
											},
											{
												"assignments": [
													1231,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1231,
														"mutability": "mutable",
														"name": "coinSent",
														"nameLocation": "3013:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1254,
														"src": "3008:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1230,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3008:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1239,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3062:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"expression": {
																	"id": 1232,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3026:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3030:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3026:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3026:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1235,
																"name": "amountToPay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "3049:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3026:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3026:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3007:58:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1241,
															"name": "coinSent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "3084:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2073656e6420436f696e20746f2075736572",
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3094:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94fe289ce449ee5120ac248b9ed2219226b7a1bc207fe3b8256adbd886108043",
																"typeString": "literal_string \"Failed to send Coin to user\""
															},
															"value": "Failed to send Coin to user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94fe289ce449ee5120ac248b9ed2219226b7a1bc207fe3b8256adbd886108043",
																"typeString": "literal_string \"Failed to send Coin to user\""
															}
														],
														"id": 1240,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3076:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3076:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "3076:48:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1246,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3153:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3157:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3153:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1248,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "3165:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1249,
															"name": "amountToPay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "3178:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1245,
														"name": "SellTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "3142:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3142:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1251,
												"nodeType": "EmitStatement",
												"src": "3137:53:6"
											},
											{
												"expression": {
													"id": 1252,
													"name": "amountToPay",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1187,
													"src": "3210:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1158,
												"id": 1253,
												"nodeType": "Return",
												"src": "3203:18:6"
											}
										]
									},
									"functionSelector": "6c11bcd3",
									"id": 1255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sellTokens",
									"nameLocation": "2352:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "2371:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2363:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2363:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2362:21:6"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "coinAmount",
												"nameLocation": "2408:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2400:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2399:20:6"
									},
									"scope": 1341,
									"src": "2343:886:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1290,
										"nodeType": "Block",
										"src": "3274:277:6",
										"statements": [
											{
												"assignments": [
													1261
												],
												"declarations": [
													{
														"constant": false,
														"id": 1261,
														"mutability": "mutable",
														"name": "ownerBalance",
														"nameLocation": "3293:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1290,
														"src": "3285:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1260,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3285:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1267,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1264,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3316:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_buy_sell_Token_$1341",
																	"typeString": "contract buy_sell_Token"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_buy_sell_Token_$1341",
																	"typeString": "contract buy_sell_Token"
																}
															],
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3308:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1262,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3308:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3308:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3322:7:6",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "3308:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3285:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1269,
																"name": "ownerBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "3348:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3363:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3348:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e657220686173206e6f742062616c616e636520746f207769746864726177",
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3366:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ccebbaa4e3f31f90a91c12c4cfe9a07663574616db39774c30bc82381a7d7e78",
																"typeString": "literal_string \"Owner has not balance to withdraw\""
															},
															"value": "Owner has not balance to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ccebbaa4e3f31f90a91c12c4cfe9a07663574616db39774c30bc82381a7d7e78",
																"typeString": "literal_string \"Owner has not balance to withdraw\""
															}
														],
														"id": 1268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3340:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3340:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "3340:62:6"
											},
											{
												"assignments": [
													1276,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1276,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "3421:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1290,
														"src": "3416:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1275,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3416:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1284,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3467:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"expression": {
																	"id": 1277,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3430:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3434:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3430:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3441:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3430:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1280,
																"name": "ownerBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "3453:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3430:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3430:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3415:55:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1286,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "3489:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2073656e6420757365722062616c616e6365206261636b20746f20746865206f776e6572",
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3495:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bd94085211bc56519ad77c66936b2e9317d42596b4c6cc457eca1e820b3c66a5",
																"typeString": "literal_string \"Failed to send user balance back to the owner\""
															},
															"value": "Failed to send user balance back to the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bd94085211bc56519ad77c66936b2e9317d42596b4c6cc457eca1e820b3c66a5",
																"typeString": "literal_string \"Failed to send user balance back to the owner\""
															}
														],
														"id": 1285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3481:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3481:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1289,
												"nodeType": "ExpressionStatement",
												"src": "3481:62:6"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 1291,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1258,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1257,
												"name": "onlyOwner",
												"nameLocations": [
													"3264:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3264:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3264:9:6"
										}
									],
									"name": "withdraw",
									"nameLocation": "3246:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3254:2:6"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3274:0:6"
									},
									"scope": 1341,
									"src": "3237:314:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "3616:330:6",
										"statements": [
											{
												"assignments": [
													1299
												],
												"declarations": [
													{
														"constant": false,
														"id": 1299,
														"mutability": "mutable",
														"name": "tokenBalance",
														"nameLocation": "3635:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1339,
														"src": "3627:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1298,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3627:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1307,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1304,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3681:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_buy_sell_Token_$1341",
																		"typeString": "contract buy_sell_Token"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_buy_sell_Token_$1341",
																		"typeString": "contract buy_sell_Token"
																	}
																],
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3673:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1302,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3673:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3673:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1300,
															"name": "minervaToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "3650:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MinervaToken_$1383",
																"typeString": "contract MinervaToken"
															}
														},
														"id": 1301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3663:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 385,
														"src": "3650:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3650:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3627:60:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1309,
																"name": "tokenBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "3706:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1310,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1293,
																	"src": "3722:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"id": 1313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1311,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3732:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3138",
																				"id": 1312,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3736:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18_by_1",
																					"typeString": "int_const 18"
																				},
																				"value": "18"
																			},
																			"src": "3732:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		}
																	],
																	"id": 1314,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3731:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "3722:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3706:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56656e646f7220636f6e747261637420686173206e6f7420656e6f75676820746f6b656e7320746f207769746864726177",
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3741:51:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2d8682ef54860c1ef3cd46fa53d91bbbf858d0baf98ddfcb7a9b09f0394a5c6",
																"typeString": "literal_string \"Vendor contract has not enough tokens to withdraw\""
															},
															"value": "Vendor contract has not enough tokens to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2d8682ef54860c1ef3cd46fa53d91bbbf858d0baf98ddfcb7a9b09f0394a5c6",
																"typeString": "literal_string \"Vendor contract has not enough tokens to withdraw\""
															}
														],
														"id": 1308,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3698:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3698:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1319,
												"nodeType": "ExpressionStatement",
												"src": "3698:95:6"
											},
											{
												"assignments": [
													1321
												],
												"declarations": [
													{
														"constant": false,
														"id": 1321,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "3812:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1339,
														"src": "3807:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1320,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3807:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1333,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1324,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3842:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3846:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3842:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1326,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1293,
																"src": "3854:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"id": 1329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3864:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"hexValue": "3138",
																			"id": 1328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3868:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18_by_1",
																				"typeString": "int_const 18"
																			},
																			"value": "18"
																		},
																		"src": "3864:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	}
																],
																"id": 1330,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3863:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "3854:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1322,
															"name": "minervaToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "3820:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MinervaToken_$1383",
																"typeString": "contract MinervaToken"
															}
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3833:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "3820:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3820:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3806:66:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1335,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "3891:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f207472616e7366657220746f6b656e7320746f20746865206f776e6572",
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3897:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba7ff9bdfaf761c37e9c731eecdaca20fa9dd014fad94a489dcf802907a23131",
																"typeString": "literal_string \"Failed to transfer tokens to the owner\""
															},
															"value": "Failed to transfer tokens to the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba7ff9bdfaf761c37e9c731eecdaca20fa9dd014fad94a489dcf802907a23131",
																"typeString": "literal_string \"Failed to transfer tokens to the owner\""
															}
														],
														"id": 1334,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3883:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3883:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1338,
												"nodeType": "ExpressionStatement",
												"src": "3883:55:6"
											}
										]
									},
									"functionSelector": "315a095d",
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1296,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1295,
												"name": "onlyOwner",
												"nameLocations": [
													"3606:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3606:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3606:9:6"
										}
									],
									"name": "withdrawTokens",
									"nameLocation": "3568:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3591:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "3583:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3583:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3582:16:6"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3616:0:6"
									},
									"scope": 1341,
									"src": "3559:387:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1342,
							"src": "147:3802:6",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								972,
								980
							]
						}
					],
					"src": "33:3918:6"
				},
				"id": 6
			},
			"contracts/MinervaToken.sol": {
				"ast": {
					"absolutePath": "contracts/MinervaToken.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"MinervaToken": [
							1383
						],
						"Ownable": [
							147
						]
					},
					"id": 1384,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1343,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "83:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1344,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1384,
							"sourceUnit": 800,
							"src": "111:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1345,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1384,
							"sourceUnit": 148,
							"src": "168:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1346,
										"name": "ERC20",
										"nameLocations": [
											"249:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "249:5:7"
									},
									"id": 1347,
									"nodeType": "InheritanceSpecifier",
									"src": "249:5:7"
								},
								{
									"baseName": {
										"id": 1348,
										"name": "Ownable",
										"nameLocations": [
											"256:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "256:7:7"
									},
									"id": 1349,
									"nodeType": "InheritanceSpecifier",
									"src": "256:7:7"
								}
							],
							"canonicalName": "MinervaToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1383,
							"linearizedBaseContracts": [
								1383,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "MinervaToken",
							"nameLocation": "233:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1361,
										"nodeType": "Block",
										"src": "380:2:7",
										"statements": []
									},
									"id": 1362,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d696e65727661546f6b656e",
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "320:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_eb19321b8ba2130fb27f1c9c3cece42577dd87c01e13ed59214a11dc42012180",
														"typeString": "literal_string \"MinervaToken\""
													},
													"value": "MinervaToken"
												},
												{
													"hexValue": "4d494e56",
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "336:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9fbf43314b2fa4e7f1c4926e2a4c60497365f5df115c0f4bb9d9ce56d738a20f",
														"typeString": "literal_string \"MINV\""
													},
													"value": "MINV"
												}
											],
											"id": 1356,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1353,
												"name": "ERC20",
												"nameLocations": [
													"314:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "314:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "314:29:7"
										},
										{
											"arguments": [
												{
													"id": 1358,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1351,
													"src": "361:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1359,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1357,
												"name": "Ownable",
												"nameLocations": [
													"353:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "353:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "353:21:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "291:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "283:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "283:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "282:22:7"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "380:0:7"
									},
									"scope": 1383,
									"src": "271:111:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1381,
										"nodeType": "Block",
										"src": "449:54:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1372,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "466:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1373,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1366,
																"src": "470:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "478:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1375,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "484:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "484:10:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "478:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "470:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1371,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "460:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "460:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "460:35:7"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1382,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1369,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1368,
												"name": "onlyOwner",
												"nameLocations": [
													"439:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "439:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "439:9:7"
										}
									],
									"name": "mint",
									"nameLocation": "399:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "412:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "404:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "424:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "416:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:28:7"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "449:0:7"
									},
									"scope": 1383,
									"src": "390:113:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1384,
							"src": "224:282:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "83:423:7"
				},
				"id": 7
			}
		}
	}
}